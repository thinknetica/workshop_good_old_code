---
http_interactions:
- request:
    method: get
    uri: http://softwareengineeringdaily.com/feed/podcast/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Date:
      - Wed, 02 Aug 2023 08:07:32 GMT
      Content-Type:
      - application/rss+xml; charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Keep-Alive:
      - timeout=20
      Vary:
      - Accept-Encoding
      - Accept-Encoding
      X-Powered-By:
      - WP Engine
      Expires:
      - Thu, 19 Nov 1981 08:52:00 GMT
      Pragma:
      - no-cache
      Last-Modified:
      - Wed, 02 Aug 2023 04:04:32 GMT
      Etag:
      - W/"a6998931665f6ad88ce2ec192f23519e"
      Link:
      - <http://softwareengineeringdaily.com/wp-json/>; rel="https://api.w.org/"
      X-Cacheable:
      - 'CacheAlways: feed'
      Cache-Control:
      - max-age=600, must-revalidate
      X-Cache:
      - 'HIT: 2'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        <?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd"
xmlns:podcast="https://podcastindex.org/namespace/1.0"
xmlns:rawvoice="http://www.rawvoice.com/rawvoiceRssModule/"
xmlns:googleplay="http://www.google.com/schemas/play-podcasts/1.0"

	xmlns:georss="http://www.georss.org/georss"
	xmlns:geo="http://www.w3.org/2003/01/geo/wgs84_pos#"
	>
<channel>
	<title>Software Engineering Daily</title>
	<atom:link href="http://softwareengineeringdaily.com/feed/podcast/" rel="self" type="application/rss+xml" />
	<link>https://softwareengineeringdaily.com/</link>
	<description>Technical interviews about software topics.</description>
	<lastBuildDate>Wed, 02 Aug 2023 04:04:32 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
		<generator>https://wordpress.org/?v=6.2.2</generator>
	<atom:link rel="hub" href="https://pubsubhubbub.appspot.com/" />
	<itunes:summary>Technical interviews about software topics.</itunes:summary>
	<itunes:author>Software Engineering Daily</itunes:author>
	<itunes:explicit>clean</itunes:explicit>
	<itunes:image href="http://softwaredaily.wpengine.com/wp-content/uploads/powerpress/SED_square_solid_bg.png" />
	<itunes:owner>
		<itunes:name>Software Engineering Daily</itunes:name>
	</itunes:owner>
	<podcast:medium>podcast</podcast:medium>
	<itunes:subtitle>Software Engineering Daily</itunes:subtitle>
	<image>
		<title>Software Engineering Daily</title>
		<url>http://softwaredaily.wpengine.com/wp-content/uploads/powerpress/SED_square_solid_bg.png</url>
		<link>http://softwareengineeringdaily.com</link>
	</image>
	<itunes:category text="News">
		<itunes:category text="Tech News" />
	</itunes:category>
	<googleplay:category text="News &amp; Politics"/>
	<itunes:category text="Technology" />
	<podcast:guid>273cb2c5-02e4-5e26-a2e6-4652c27182cb</podcast:guid>
	<rawvoice:subscribe feed="http://softwareengineeringdaily.com/feed/podcast/" itunes="https://itunes.apple.com/us/podcast/software-engineering-daily/id1019576853"></rawvoice:subscribe>
<site xmlns="com-wordpress:feed-additions:1">113560975</site>	<item>
		<title>SDKs for your API with Sagar Batchu</title>
		<link>http://softwareengineeringdaily.com/2023/08/01/sdks-for-your-api/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=sdks-for-your-api</link>
		<pubDate>Tue, 01 Aug 2023 09:00:02 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=15306</guid>
		<comments>http://softwareengineeringdaily.com/2023/08/01/sdks-for-your-api/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2023/08/01/sdks-for-your-api/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Paweł Borkowski]]></category>
		<category><![CDATA[Podcast]]></category>
		<category><![CDATA[API]]></category>
		<category><![CDATA[Sagar Batchu]]></category>
		<category><![CDATA[SDKs]]></category>
		<category><![CDATA[speakeasy]]></category>
		<description>&lt;p&gt;APIs are ubiquitous and critical to building modern software, and developers must frequently develop custom APIs to streamline user access to their services. However, making an API that provides a great developer experience can be a time-consuming endeavor. As a result, API teams often leave the final mile of integration up to their users. Speakeasy&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2023/08/01/sdks-for-your-api/&quot;&gt;SDKs for your API with Sagar Batchu&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<p><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/08/sagar.png"><img decoding="async" loading="lazy" class="size-full wp-image-15308 alignright" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/08/sagar.png?resize=218%2C258&#038;ssl=1" alt="" width="218" height="258" data-recalc-dims="1" /></a></p>
<p data-pm-slice="1 1 []">APIs are ubiquitous and critical to building modern software, and developers must frequently develop custom APIs to streamline user access to their services.</p>
<p>However, making an API that provides a great developer experience can be a time-consuming endeavor. As a result, API teams often leave the final mile of integration up to their users.</p>
<p><a tabindex="-1" href="https://speakeasyapi.dev/" target="_blank" rel="noopener"><strong>Speakeasy</strong></a> aims to provide a product and a pipeline that makes it easy to create and consume any API.</p>
<p><a tabindex="-1" href="https://twitter.com/sagar_batchu" target="_blank" rel="noopener"><strong>Sagar Batchu</strong></a> is the co-founder and CEO of Speakeasy and he joins us in this episode.</p>
<p><span style="font-weight: 400;"><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/06/pawel.png"><img decoding="async" loading="lazy" class="size-full wp-image-15095 alignleft" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/06/pawel.png?resize=200%2C240&#038;ssl=1" alt="" width="200" height="240" data-recalc-dims="1" /></a>Paweł is the founder at </span><a href="https://flat.social"><span style="font-weight: 400;">flat.sociaI</span></a><span style="font-weight: 400;"> the world’s first &#8216;flatverse&#8217; start-up. Pawel’s background is as a full-stack software engineer with a lean and experimental approach towards product development. With a strong grounding in computing science, he spent the last decade getting early-stage products off the ground &#8211; both in startup and corporate settings.</span></p>
<p><span style="font-weight: 400;">Follow Paweł on </span><a href="https://twitter.com/pawel_io"><span style="font-weight: 400;">Twitter</span></a><span style="font-weight: 400;">, </span><a href="https://www.linkedin.com/in/borkowskip/"><span style="font-weight: 400;">LinkedIn</span></a><span style="font-weight: 400;"> and his personal website &#8211; </span><a href="https://pawel.io/"><span style="font-weight: 400;">pawel.io</span></a><span style="font-weight: 400;">.</span></p>
<p style="text-align: center;">Sponsorship inquiries: <a href="https://cms.megaphone.fm/organizations/619b680e-d813-11ea-9750-e7ecac406436/podcasts/e60108fe-e328-11ea-b2b6-1348249f900a/episodes/3913370a-bc44-11ed-ace6-8b1f96d82bba/sponsor@softwareengineeringdaily.com" target="_blank" rel="noopener noreferrer">sponsor@softwareengineeringdaily.com</a></p>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2023/08/01/sdks-for-your-api/">SDKs for your API with Sagar Batchu</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED5779260033.mp3" length="53108036" type="audio/mpeg" />
		<itunes:subtitle>APIs are ubiquitous and critical to building modern software, and developers must frequently develop custom APIs to streamline user access to their services. However, making an API that provides a great developer experience can be a time-consuming ende...</itunes:subtitle>
		<itunes:summary>APIs are ubiquitous and critical to building modern software, and developers must frequently develop custom APIs to streamline user access to their services. However, making an API that provides a great developer experience can be a time-consuming endeavor. As a result, API teams often leave the final mile of integration up to their users. Speakeasy</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>36:49</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">15306</post-id>	</item>
	<item>
		<title>Ethical GPTs with Amruta Moktali</title>
		<link>http://softwareengineeringdaily.com/2023/07/27/ethical-gpts-with-amruta-moktali/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=ethical-gpts-with-amruta-moktali</link>
		<pubDate>Thu, 27 Jul 2023 07:50:24 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=15297</guid>
		<comments>http://softwareengineeringdaily.com/2023/07/27/ethical-gpts-with-amruta-moktali/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2023/07/27/ethical-gpts-with-amruta-moktali/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Machine Learning]]></category>
		<category><![CDATA[Podcast]]></category>
		<category><![CDATA[Sean Falconer]]></category>
		<category><![CDATA[AI]]></category>
		<category><![CDATA[Amruta Moktali]]></category>
		<category><![CDATA[GPT]]></category>
		<category><![CDATA[Skyflow]]></category>
		<description>&lt;p&gt;Generative pre-trained transformer models, or GPT models, have countless applications and are being rapidly deployed across a wide range of domains. However, using GPT models without appropriate safeguards can lead to leakage of sensitive data. This concern underscores the critical need for privacy and data protection. Skyflow LLM Privacy Vault prevents sensitive data from reaching&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2023/07/27/ethical-gpts-with-amruta-moktali/&quot;&gt;Ethical GPTs with Amruta Moktali&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<p><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/11/amruta.png"><img decoding="async" loading="lazy" class="size-full wp-image-14564 alignright" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/11/amruta.png?resize=218%2C268&#038;ssl=1" alt="" width="218" height="268" data-recalc-dims="1" /></a></p>
<p>Generative pre-trained transformer models, or GPT models, have countless applications and are being rapidly deployed across a wide range of domains.</p>
<p>However, using GPT models without appropriate safeguards can lead to leakage of sensitive data. This concern underscores the critical need for privacy and data protection.</p>
<p><a href="https://www.skyflow.com/post/generative-ai-data-privacy-skyflow-llm-privacy-vault">Skyflow LLM Privacy Vault</a> prevents sensitive data from reaching GPTs. <a href="https://www.linkedin.com/in/amrutamoktali/">Amruta Moktali</a> is the Chief Product Officer at Skyflow and she joins us today. We discuss generative AI, how the technology is different from other AI approaches, and how we can use this technology in a safe and ethical manner.</p>
<p><span style="font-weight: 400;"><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/05/Sean-Falconer.png"><img decoding="async" loading="lazy" class="size-full wp-image-13856 alignleft" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/05/Sean-Falconer.png?resize=218%2C258&#038;ssl=1" alt="" width="218" height="258" data-recalc-dims="1" /></a>Sean&#8217;s been an academic, startup founder, and Googler. He has published works covering a wide range of topics from information visualization to quantum computing. Currently, Sean is Head of Marketing and Developer Relations at <a href="https://www.skyflow.com/">Skyflow</a> and host of the podcast Partially Redacted, a podcast about privacy and security engineering. You can connect with Sean on Twitter <a href="https://twitter.com/seanfalconer">@seanfalconer .</a></span></p>
<p style="text-align: center;">Sponsorship inquiries: <a href="https://cms.megaphone.fm/organizations/619b680e-d813-11ea-9750-e7ecac406436/podcasts/e60108fe-e328-11ea-b2b6-1348249f900a/episodes/3913370a-bc44-11ed-ace6-8b1f96d82bba/sponsor@softwareengineeringdaily.com" target="_blank" rel="noopener noreferrer">sponsor@softwareengineeringdaily.com</a></p>
<p><a href="http://softwareengineeringdaily.com/wp-content/uploads/2023/07/SED1548-Amruta-Moktali.txt">Please click here to view this show’s transcript</a>.</p>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2023/07/27/ethical-gpts-with-amruta-moktali/">Ethical GPTs with Amruta Moktali</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED7107588145.mp3" length="74584228" type="audio/mpeg" />
		<itunes:subtitle>Generative pre-trained transformer models, or GPT models, have countless applications and are being rapidly deployed across a wide range of domains. However, using GPT models without appropriate safeguards can lead to leakage of sensitive data.</itunes:subtitle>
		<itunes:summary>Generative pre-trained transformer models, or GPT models, have countless applications and are being rapidly deployed across a wide range of domains. However, using GPT models without appropriate safeguards can lead to leakage of sensitive data. This concern underscores the critical need for privacy and data protection. Skyflow LLM Privacy Vault prevents sensitive data from reaching</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>51:44</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">15297</post-id>	</item>
	<item>
		<title>CAP Theorem 23 Years Later with Eric Brewer</title>
		<link>http://softwareengineeringdaily.com/2023/07/25/cap-theorem/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=cap-theorem</link>
		<pubDate>Tue, 25 Jul 2023 09:00:43 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=15294</guid>
		<comments>http://softwareengineeringdaily.com/2023/07/25/cap-theorem/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2023/07/25/cap-theorem/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Jordi Mon Companys]]></category>
		<category><![CDATA[Podcast]]></category>
		<category><![CDATA[CAP theorem]]></category>
		<category><![CDATA[Eric Brewer]]></category>
		<category><![CDATA[open source summit]]></category>
		<description>&lt;p&gt;The CAP theorem, also known as Brewer’s theorem, is a fundamental principle in distributed systems that states that it is impossible to simultaneously achieve three desirable properties in a distributed data system: Consistency, Availability, and Partition tolerance. Eric Brewer is the VP of Infrastructure &amp; Google Fellow at Google and he joins us today. This&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2023/07/25/cap-theorem/&quot;&gt;CAP Theorem 23 Years Later with Eric Brewer&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<div class="module-message__container-outer">
<div id="message-accessibility-contents:9651141b-6913-41bd-907b-be19fcbf127a" class="module-message__container module-message__container--incoming" tabindex="-1" role="row">
<div dir="ltr">
<div class="module-message__text module-message__text--incoming" style="text-align: left;"><span class=""><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/05/eric.png"><img decoding="async" loading="lazy" class="alignright size-full wp-image-15025" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/05/eric.png?resize=218%2C258&#038;ssl=1" alt="" width="218" height="258" data-recalc-dims="1" /></a>The CAP theorem, also known as Brewer&#8217;s theorem, is a fundamental principle in distributed systems that states that it is impossible to simultaneously achieve three desirable properties in a distributed data system: Consistency, Availability, and Partition tolerance.</span></div>
</div>
</div>
<div style="text-align: left;"></div>
<div>
<div class="module-message__container-outer">
<div id="message-accessibility-contents:df0b12a7-2d5a-4736-9bcb-19238ac12594" class="module-message__container module-message__container--incoming" tabindex="-1" role="row">
<div dir="ltr">
<div class="module-message__text module-message__text--incoming" style="text-align: left;"><span class=""><a href="https://twitter.com/eric_brewer?lang=en">Eric Brewer</a> is the VP of Infrastructure &amp; Google Fellow at Google and he joins us today.</span></div>
</div>
</div>
</div>
</div>
</div>
<div></div>
<div>
<div dir="ltr">
<div>
<div>This Interview was recorded at <a href="https://streaklinks.com/Bg_PFnT7O79B3JCRLgNDYkWv/https%3A%2F%2Fevents.linuxfoundation.org%2Fopen-source-summit-north-america%2F" target="_blank" rel="noopener" data-saferedirecturl="https://www.google.com/url?q=https://streaklinks.com/Bg_PFnT7O79B3JCRLgNDYkWv/https%253A%252F%252Fevents.linuxfoundation.org%252Fopen-source-summit-north-america%252F&amp;source=gmail&amp;ust=1684828419418000&amp;usg=AOvVaw0b5w1_wDC_OeXyLXD_nqzJ">Open Source Summit North America</a> and wouldn&#8217;t have been possible without the generous support from</div>
<div><a href="https://www.linuxfoundation.org/">The Linux Foundation</a>.</div>
</div>
<div></div>
</div>
<div><img decoding="async" class="CToWUd" src="https://ci3.googleusercontent.com/proxy/iUbasK9C6rQcDna8d_UhpVDMxhu2_NNKH6tmIdyKGbhqtd8Kwss74wfyQ7oA5mRQIuqBMz_tZkpQjNFCMKNv62Ip0ORPXSOuTdn_go-vPCduXapr_Qn8HQLMAFUqOxckjyY_AT5M9fIBQ8z6fXWsJCE31XMY24fH7LkrIzX28boJaHHEYCL8Q6hU2Emt2uJGPGDUmi3AmzlTNwwVSNDnv_WGksCF_wy5R634dg=s0-d-e1-ft#https://mailfoogae.appspot.com/t?sender=aYW5rdXJAc29mdHdhcmVlbmdpbmVlcmluZ2RhaWx5LmNvbQ%3D%3D&amp;type=zerocontent&amp;guid=ce6739e4-1e0e-4b69-8fde-85c4b8010254" alt="" data-bit="iit" /><span style="color: #ffffff; font-size: xx-small;">ᐧ    </span></div>
</div>
<div class="module-message__buttons module-message__buttons--incoming">
<div class="module-message__metadata module-message__metadata--inline" style="text-align: center;">
<div>
<p style="text-align: left;"><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/03/jordi.png"><img decoding="async" loading="lazy" class="size-full wp-image-14908 alignleft" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/03/jordi.png?resize=218%2C258&#038;ssl=1" alt="" width="218" height="258" data-recalc-dims="1" /></a><a href="https://www.linkedin.com/in/jordimoncompanys/"><span style="font-weight: 400;">Jordi Mon Companys</span></a><span style="font-weight: 400;"> is a product manager and marketer that specializes in software delivery, developer experience, cloud native and open source. He has developed his career at companies like GitLab, Weaveworks, Harness and other platform and devtool providers. His interests range from software supply chain security to open source innovation. You can reach out to him on Twitter at </span><a href="https://twitter.com/JordiMonPMM"><span style="font-weight: 400;">@jordimonpmm</span></a></p>
<p style="text-align: center;">Sponsorship inquiries: <a href="https://cms.megaphone.fm/organizations/619b680e-d813-11ea-9750-e7ecac406436/podcasts/e60108fe-e328-11ea-b2b6-1348249f900a/episodes/3913370a-bc44-11ed-ace6-8b1f96d82bba/sponsor@softwareengineeringdaily.com" target="_blank" rel="noopener noreferrer">sponsor@softwareengineeringdaily.com</a></p>
</div>
</div>
<p><a href="http://softwareengineeringdaily.com/wp-content/uploads/2023/07/SED1549-Eric-Brewer.txt">Please click here to view this show’s transcript</a>.</p>
</div>
<div class="module-message__buttons module-message__buttons--incoming">
<div class="module-message__metadata module-message__metadata--inline" style="text-align: center;">
<div>
<p>&nbsp;</p>
</div>
<div class="module-message__metadata module-message__metadata--inline"></div>
</div>
<div></div>
</div>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2023/07/25/cap-theorem/">CAP Theorem 23 Years Later with Eric Brewer</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED9790646432.mp3" length="67593557" type="audio/mpeg" />
		<itunes:subtitle>The CAP theorem, also known as Brewer’s theorem, is a fundamental principle in distributed systems that states that it is impossible to simultaneously achieve three desirable properties in a distributed data system: Consistency, Availability,</itunes:subtitle>
		<itunes:summary>The CAP theorem, also known as Brewer’s theorem, is a fundamental principle in distributed systems that states that it is impossible to simultaneously achieve three desirable properties in a distributed data system: Consistency, Availability, and Partition tolerance. Eric Brewer is the VP of Infrastructure &amp; Google Fellow at Google and he joins us today. This</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>46:53</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">15294</post-id>	</item>
	<item>
		<title>Data-Centric AI with Alex Ratner</title>
		<link>http://softwareengineeringdaily.com/2023/07/20/data-centric-ai/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=data-centric-ai</link>
		<pubDate>Thu, 20 Jul 2023 09:00:35 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=15286</guid>
		<comments>http://softwareengineeringdaily.com/2023/07/20/data-centric-ai/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2023/07/20/data-centric-ai/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Jocelyn Byrne Houle]]></category>
		<category><![CDATA[Podcast]]></category>
		<category><![CDATA[AI]]></category>
		<category><![CDATA[Alex Ratner]]></category>
		<category><![CDATA[data]]></category>
		<category><![CDATA[Machine Learning]]></category>
		<description>&lt;p&gt;Companies have high hopes for Machine learning and AI to support real-time product offerings, prevent fraud and drive innovation. But there was a catch – training models require labeled data that machines can digest. As data volumes increase, the opportunity to get great ML results rises, but so does the problem of labeling all the&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2023/07/20/data-centric-ai/&quot;&gt;Data-Centric AI with Alex Ratner&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<p><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/07/alex.png"><img decoding="async" loading="lazy" class="size-full wp-image-15287 alignright" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/07/alex.png?resize=218%2C258" alt="" width="218" height="258" data-recalc-dims="1" /></a>Companies have high hopes for Machine learning and AI to support real-time product offerings, prevent fraud and drive innovation. But there was a catch &#8211; training models require labeled data that machines can digest. As data volumes increase, the opportunity to get great ML results rises, but so does the problem of labeling all the data to get that excellent result.<br />
Enter Snorkel AI’s programmatic data labeling and MLops platforms like Snorkel Flow. Today we are interviewing <a href="https://twitter.com/ajratner/with_replies">Alex Ratner</a>, one of the founders of <a href="https://snorkel.ai/">Snorkel AI</a>. Snorkel AI evolved from research Alex led as part of his Ph.D. research at Stanford, focused on programmatic data labeling to enable much faster and more accurate ML training and retraining.<br />
Alex is a born teacher who always has enthusiasm for the topic. Today he will share the newest evolutions of the product at Snorkel, shed light on why doing ML well requires programmatic data labeling, and talk about foundation models in actual enterprise settings and generally.</p>
<p><span style="font-weight: 400;"><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/04/jocelyn.png"><img decoding="async" loading="lazy" class="size-full wp-image-14942 alignleft" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/04/jocelyn.png?resize=209%2C249&#038;ssl=1" alt="" width="209" height="249" data-recalc-dims="1" /></a>Starting her career as a software developer, Jocelyn Houle is now a Senior Director of Product Management at </span><a href="https://securiti.ai/"><span style="font-weight: 400;">Securiti.ai,</span></a><span style="font-weight: 400;"> a unified data protection and governance platform. Before that, she was an Operating Partner at </span><a href="https://growthventures.capitalone.com/"><span style="font-weight: 400;">Capital One Ventures</span></a><span style="font-weight: 400;"> investing in data and AI startups. Jocelyn has been a founder of two startups and a full life cycle, technical product manager at large companies like Fannie Mae, Microsoft and Capital One.  Follow Jocelyn on </span><a href="https://www.linkedin.com/in/jocelyn/"><span style="font-weight: 400;">LinkedIn </span></a><span style="font-weight: 400;"> or Twitter </span><a href="https://twitter.com/jocelynbyrne"><span style="font-weight: 400;">@jocelynbyrne.</span></a></p>
<p style="text-align: center;">Sponsorship inquiries: <a href="https://cms.megaphone.fm/organizations/619b680e-d813-11ea-9750-e7ecac406436/podcasts/e60108fe-e328-11ea-b2b6-1348249f900a/episodes/3913370a-bc44-11ed-ace6-8b1f96d82bba/sponsor@softwareengineeringdaily.com" target="_blank" rel="noopener noreferrer">sponsor@softwareengineeringdaily.com</a></p>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2023/07/20/data-centric-ai/">Data-Centric AI with Alex Ratner</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED2861710933.mp3" length="68470160" type="audio/mpeg" />
		<itunes:subtitle>Companies have high hopes for Machine learning and AI to support real-time product offerings, prevent fraud and drive innovation. But there was a catch – training models require labeled data that machines can digest. As data volumes increase,</itunes:subtitle>
		<itunes:summary>Companies have high hopes for Machine learning and AI to support real-time product offerings, prevent fraud and drive innovation. But there was a catch – training models require labeled data that machines can digest. As data volumes increase, the opportunity to get great ML results rises, but so does the problem of labeling all the</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>47:29</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">15286</post-id>	</item>
	<item>
		<title>Cloud-native Search with Paul Masurel</title>
		<link>http://softwareengineeringdaily.com/2023/07/18/cloud-native-search-2/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=cloud-native-search-2</link>
		<pubDate>Tue, 18 Jul 2023 09:00:59 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=15285</guid>
		<comments>http://softwareengineeringdaily.com/2023/07/18/cloud-native-search-2/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2023/07/18/cloud-native-search-2/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Jocelyn Byrne Houle]]></category>
		<category><![CDATA[Podcast]]></category>
		<category><![CDATA[Elasticsearch]]></category>
		<category><![CDATA[quickwit]]></category>
		<category><![CDATA[Rust]]></category>
		<category><![CDATA[Tantivy]]></category>
		<description>&lt;p&gt;Elasticsearch is the most established solution today to search and analyze large amounts of logs. However, it can be costly and complex to manage. Quickwit searches large amounts of append only cloud data like logs or ledgers in a fraction time with significantly less cost than Elasticsearch. In this episode, we interview Paul Masurel, one&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2023/07/18/cloud-native-search-2/&quot;&gt;Cloud-native Search with Paul Masurel&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<p><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/07/paul.png"><img decoding="async" loading="lazy" class="size-full wp-image-15235 alignright" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/07/paul.png?resize=218%2C258" alt="" width="218" height="258" data-recalc-dims="1" /></a>Elasticsearch is the most established solution today to search and analyze large amounts of logs. However, it can be costly and complex to manage. <a href="https://quickwit.io/">Quickwit</a> searches large amounts of append only cloud data like logs or ledgers in a fraction time with significantly less cost than Elasticsearch. In this episode, we interview <a href="https://twitter.com/fulmicoton?ref_src=twsrc%5Egoogle%7Ctwcamp%5Eserp%7Ctwgr%5Eauthor">Paul Masurel</a>, one of the founders of Quickwit and the creator and maintainer of Tantivy, the open source full text search engine written in Rust.</p>
<p><span style="font-weight: 400;"><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/04/jocelyn.png"><img decoding="async" loading="lazy" class="size-full wp-image-14942 alignleft" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/04/jocelyn.png?resize=209%2C249&#038;ssl=1" alt="" width="209" height="249" data-recalc-dims="1" /></a>Starting her career as a software developer, Jocelyn Houle is now a Senior Director of Product Management at </span><a href="https://securiti.ai/"><span style="font-weight: 400;">Securiti.ai,</span></a><span style="font-weight: 400;"> a unified data protection and governance platform. Before that, she was an Operating Partner at </span><a href="https://growthventures.capitalone.com/"><span style="font-weight: 400;">Capital One Ventures</span></a><span style="font-weight: 400;"> investing in data and AI startups. Jocelyn has been a founder of two startups and a full life cycle, technical product manager at large companies like Fannie Mae, Microsoft and Capital One.  Follow Jocelyn on </span><a href="https://www.linkedin.com/in/jocelyn/"><span style="font-weight: 400;">LinkedIn </span></a><span style="font-weight: 400;"> or Twitter </span><a href="https://twitter.com/jocelynbyrne"><span style="font-weight: 400;">@jocelynbyrne.</span></a></p>
<p style="text-align: center;">Sponsorship inquiries: <a href="https://cms.megaphone.fm/organizations/619b680e-d813-11ea-9750-e7ecac406436/podcasts/e60108fe-e328-11ea-b2b6-1348249f900a/episodes/3913370a-bc44-11ed-ace6-8b1f96d82bba/sponsor@softwareengineeringdaily.com" target="_blank" rel="noopener noreferrer">sponsor@softwareengineeringdaily.com</a></p>
<p><a href="http://softwareengineeringdaily.com/wp-content/uploads/2023/07/SED1547-Cloud-Native-Search-with-Paul-Masurel.txt">Please click here to view this show’s transcript</a>.</p>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2023/07/18/cloud-native-search-2/">Cloud-native Search with Paul Masurel</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED9529833632.mp3" length="99120157" type="audio/mpeg" />
		<itunes:subtitle>Elasticsearch is the most established solution today to search and analyze large amounts of logs. However, it can be costly and complex to manage. Quickwit searches large amounts of append only cloud data like logs or ledgers in a fraction time with si...</itunes:subtitle>
		<itunes:summary>Elasticsearch is the most established solution today to search and analyze large amounts of logs. However, it can be costly and complex to manage. Quickwit searches large amounts of append only cloud data like logs or ledgers in a fraction time with significantly less cost than Elasticsearch. In this episode, we interview Paul Masurel, one</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>1:08:46</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">15285</post-id>	</item>
	<item>
		<title>Engineering Insights with Christina Forney</title>
		<link>http://softwareengineeringdaily.com/2023/07/13/engineering-insights/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=engineering-insights</link>
		<pubDate>Thu, 13 Jul 2023 12:00:28 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=15266</guid>
		<comments>http://softwareengineeringdaily.com/2023/07/13/engineering-insights/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2023/07/13/engineering-insights/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Jordi Mon Companys]]></category>
		<category><![CDATA[Podcast]]></category>
		<category><![CDATA[Christina Forney]]></category>
		<category><![CDATA[Machine Learning]]></category>
		<category><![CDATA[metadata]]></category>
		<category><![CDATA[Uplevel]]></category>
		<description>&lt;p&gt;As Companies scale and their codebase becomes large, it can become difficult to measure team effectiveness. With so many moving pieces, and an increased lack of visibility, Engineering Leaders mostly rely on gut feelings to guide decisions and determine impact. Uplevel pulls meta-data from programs like Git, Slack, Jira and public calendar events and uses&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2023/07/13/engineering-insights/&quot;&gt;Engineering Insights with Christina Forney&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<p><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/07/christina.png"><img decoding="async" loading="lazy" class="size-full wp-image-15267 alignright" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/07/christina.png?resize=218%2C258" alt="" width="218" height="258" data-recalc-dims="1" /></a>As Companies scale and their codebase becomes large, it can become difficult to measure team effectiveness. With so many moving pieces, and an increased lack of visibility, Engineering Leaders mostly rely on gut feelings to guide decisions and determine impact.<br />
<a href="https://uplevelteam.com/">Uplevel</a> pulls meta-data from programs like Git, Slack, Jira and public calendar events and uses machine learning and organizational science to generate actionable insights. With Uplevel Engineering teams can increase velocity, decrease burnout and plan and execute more predictable releases.<br />
<a href="https://twitter.com/christina4nee?lang=en">Christina Forney</a> is the VP of Product at Uplevel and she joins us in this episode.</p>
<p><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/03/jordi.png"><img decoding="async" loading="lazy" class="size-full wp-image-14908 alignleft" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/03/jordi.png?resize=218%2C258&#038;ssl=1" alt="" width="218" height="258" data-recalc-dims="1" /></a></p>
<p><a href="https://www.linkedin.com/in/jordimoncompanys/"><span style="font-weight: 400;">Jordi Mon Companys</span></a><span style="font-weight: 400;"> is a product manager and marketer that specializes in software delivery, developer experience, cloud native and open source. He has developed his career at companies like GitLab, Weaveworks, Harness and other platform and devtool providers. His interests range from software supply chain security to open source innovation. You can reach out to him on Twitter at </span><a href="https://twitter.com/JordiMonPMM"><span style="font-weight: 400;">@jordimonpmm</span></a></p>
<p style="text-align: center;">Sponsorship inquiries: <a href="https://cms.megaphone.fm/organizations/619b680e-d813-11ea-9750-e7ecac406436/podcasts/e60108fe-e328-11ea-b2b6-1348249f900a/episodes/3913370a-bc44-11ed-ace6-8b1f96d82bba/sponsor@softwareengineeringdaily.com" target="_blank" rel="noopener noreferrer">sponsor@softwareengineeringdaily.com</a></p>
<p><a href="http://softwareengineeringdaily.com/wp-content/uploads/2023/07/SED1546-Engineering-Insights-with-Christina-Forney.txt">Please click here to view this show’s transcript</a>.</p>
<p>&nbsp;</p>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2023/07/13/engineering-insights/">Engineering Insights with Christina Forney</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED3916025227.mp3" length="57483074" type="audio/mpeg" />
		<itunes:subtitle>As Companies scale and their codebase becomes large, it can become difficult to measure team effectiveness. With so many moving pieces, and an increased lack of visibility, Engineering Leaders mostly rely on gut feelings to guide decisions and determin...</itunes:subtitle>
		<itunes:summary>As Companies scale and their codebase becomes large, it can become difficult to measure team effectiveness. With so many moving pieces, and an increased lack of visibility, Engineering Leaders mostly rely on gut feelings to guide decisions and determine impact. Uplevel pulls meta-data from programs like Git, Slack, Jira and public calendar events and uses</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>39:51</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">15266</post-id>	</item>
	<item>
		<title>Making Data-Driven Decisions with Soumyadeb Mitra</title>
		<link>http://softwareengineeringdaily.com/2023/07/11/making-data-driven-decisions/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=making-data-driven-decisions</link>
		<pubDate>Tue, 11 Jul 2023 09:00:37 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=15263</guid>
		<comments>http://softwareengineeringdaily.com/2023/07/11/making-data-driven-decisions/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2023/07/11/making-data-driven-decisions/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Jocelyn Byrne Houle]]></category>
		<category><![CDATA[Podcast]]></category>
		<category><![CDATA[CDP]]></category>
		<category><![CDATA[RudderStack]]></category>
		<category><![CDATA[RudderStack Engineering]]></category>
		<category><![CDATA[Soumyadeb Mitra]]></category>
		<description>&lt;p&gt;Rudderstack is a warehouse-native customer data platform (CDP) that helps businesses collect, unify, and activate customer data from all their different sources. In today’s episode, we’re talking to Soumyadeb Mitra, the founder and CEO of Rudderstack. We discuss the importance of activating all your data, how Rudderstack can help you activate your data, the challenges&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2023/07/11/making-data-driven-decisions/&quot;&gt;Making Data-Driven Decisions with Soumyadeb Mitra&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<p><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/03/Soumaydeb-Mitra-1.png"><img decoding="async" loading="lazy" class="size-full wp-image-13546 alignright" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/03/Soumaydeb-Mitra-1.png?resize=236%2C276" alt="" width="236" height="276" data-recalc-dims="1" /></a><a href="https://www.rudderstack.com/">Rudderstack</a> is a warehouse-native customer data platform (CDP) that helps businesses collect, unify, and activate customer data from all their different sources.<br />
In today&#8217;s episode, we&#8217;re talking to <a href="https://twitter.com/soumyadeb_mitra">Soumyadeb Mitra</a>, the founder and CEO of Rudderstack.<br />
We discuss the importance of activating all your data, how Rudderstack can help you activate your data, the challenges of integrating different data sources and how to build a data-driven culture in your organization.</p>
<p><em>Full disclosure: Rudderstack is a sponsor of Software Engineering Daily.</em></p>
<p><span style="font-weight: 400;"><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/04/jocelyn.png"><img decoding="async" loading="lazy" class="size-full wp-image-14942 alignleft" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/04/jocelyn.png?resize=209%2C249&#038;ssl=1" alt="" width="209" height="249" data-recalc-dims="1" /></a>Starting her career as a software developer, Jocelyn Houle is now a Senior Director of Product Management at </span><a href="https://securiti.ai/"><span style="font-weight: 400;">Securiti.ai,</span></a><span style="font-weight: 400;"> a unified data protection and governance platform. Before that, she was an Operating Partner at </span><a href="https://growthventures.capitalone.com/"><span style="font-weight: 400;">Capital One Ventures</span></a><span style="font-weight: 400;"> investing in data and AI startups. Jocelyn has been a founder of two startups and a full life cycle, technical product manager at large companies like Fannie Mae, Microsoft and Capital One.  Follow Jocelyn on </span><a href="https://www.linkedin.com/in/jocelyn/"><span style="font-weight: 400;">LinkedIn </span></a><span style="font-weight: 400;"> or Twitter </span><a href="https://twitter.com/jocelynbyrne"><span style="font-weight: 400;">@jocelynbyrne.</span></a></p>
<p style="text-align: center;">Sponsorship inquiries: <a href="https://cms.megaphone.fm/organizations/619b680e-d813-11ea-9750-e7ecac406436/podcasts/e60108fe-e328-11ea-b2b6-1348249f900a/episodes/3913370a-bc44-11ed-ace6-8b1f96d82bba/sponsor@softwareengineeringdaily.com" target="_blank" rel="noopener noreferrer">sponsor@softwareengineeringdaily.com</a></p>
<p><a href="http://softwareengineeringdaily.com/wp-content/uploads/2023/07/SED1545-RudderStack.txt">Please click here to view this show’s transcript</a>.</p>
<p>&nbsp;</p>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2023/07/11/making-data-driven-decisions/">Making Data-Driven Decisions with Soumyadeb Mitra</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED4541970935.mp3" length="73164273" type="audio/mpeg" />
		<itunes:subtitle>Rudderstack is a warehouse-native customer data platform (CDP) that helps businesses collect, unify, and activate customer data from all their different sources. In today’s episode, we’re talking to Soumyadeb Mitra, the founder and CEO of Rudderstack.</itunes:subtitle>
		<itunes:summary>Rudderstack is a warehouse-native customer data platform (CDP) that helps businesses collect, unify, and activate customer data from all their different sources. In today’s episode, we’re talking to Soumyadeb Mitra, the founder and CEO of Rudderstack. We discuss the importance of activating all your data, how Rudderstack can help you activate your data, the challenges</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>50:45</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">15263</post-id>	</item>
	<item>
		<title>Shipping Oxide with Bryan Cantrill</title>
		<link>http://softwareengineeringdaily.com/2023/07/07/shipping-oxide-with-bryan-cantrill/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=shipping-oxide-with-bryan-cantrill</link>
		<pubDate>Fri, 07 Jul 2023 16:06:15 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=15254</guid>
		<comments>http://softwareengineeringdaily.com/2023/07/07/shipping-oxide-with-bryan-cantrill/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2023/07/07/shipping-oxide-with-bryan-cantrill/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Jordi Mon Companys]]></category>
		<category><![CDATA[Podcast]]></category>
		<category><![CDATA[Uncategorized]]></category>
		<category><![CDATA[Bryan Cantrill]]></category>
		<category><![CDATA[data]]></category>
		<category><![CDATA[Hyperscalers]]></category>
		<category><![CDATA[Oxide Computer]]></category>
		<description>&lt;p&gt;Hyperscalers refer to expansive cloud service providers capable of delivering enterprise-scale computing and storage services. These Hyperscalers like Google, Amazon, Facebook that have huge data centers and are either running their own software or renting out this infrastructure realized a long time back that the traditional Network, Storage &amp; Compute server racks were not enough&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2023/07/07/shipping-oxide-with-bryan-cantrill/&quot;&gt;Shipping Oxide with Bryan Cantrill&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<p><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/07/bryan.png"><img decoding="async" loading="lazy" class="size-full wp-image-15255 alignright" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/07/bryan.png?resize=218%2C258" alt="" width="218" height="258" data-recalc-dims="1" /></a>Hyperscalers refer to expansive cloud service providers capable of delivering enterprise-scale computing and storage services. These Hyperscalers like Google, Amazon, Facebook that have huge data centers and are either running their own software or renting out this infrastructure realized a long time back that the traditional Network, Storage &amp; Compute server racks were not enough to fulfill the requirements of a modern enterprise at scale. So they built custom solutions for their data center requirements.</p>
<p>For all of the other companies and organizations that have their own data centers, they are still running legacy old technology. <a href="https://oxide.computer/">Oxide Computer</a> is a company aiming to democratize access to rack-scale technology and provide a seamless software stack to facilitate its implementation.</p>
<p><a href="https://twitter.com/bcantrill?ref_src=twsrc%5Egoogle%7Ctwcamp%5Eserp%7Ctwgr%5Eauthor">Bryan Cantrill</a> is the Co-Founder and CTO of Oxide Computer and he joins us in this episode.</p>
<p><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/03/jordi.png"><img decoding="async" loading="lazy" class="size-full wp-image-14908 alignleft" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/03/jordi.png?resize=218%2C258&#038;ssl=1" alt="" width="218" height="258" data-recalc-dims="1" /></a></p>
<p><a href="https://www.linkedin.com/in/jordimoncompanys/"><span style="font-weight: 400;">Jordi Mon Companys</span></a><span style="font-weight: 400;"> is a product manager and marketer that specializes in software delivery, developer experience, cloud native and open source. He has developed his career at companies like GitLab, Weaveworks, Harness and other platform and devtool providers. His interests range from software supply chain security to open source innovation. You can reach out to him on Twitter at </span><a href="https://twitter.com/JordiMonPMM"><span style="font-weight: 400;">@jordimonpmm</span></a></p>
<p style="text-align: center;">Sponsorship inquiries: <a href="https://cms.megaphone.fm/organizations/619b680e-d813-11ea-9750-e7ecac406436/podcasts/e60108fe-e328-11ea-b2b6-1348249f900a/episodes/3913370a-bc44-11ed-ace6-8b1f96d82bba/sponsor@softwareengineeringdaily.com" target="_blank" rel="noopener noreferrer">sponsor@softwareengineeringdaily.com</a></p>
<p><a href="http://softwareengineeringdaily.com/wp-content/uploads/2023/07/SED1541-Bryan-Cantrill.txt">Please click here to view this show’s transcript</a>.</p>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2023/07/07/shipping-oxide-with-bryan-cantrill/">Shipping Oxide with Bryan Cantrill</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED2765719922.mp3" length="86124819" type="audio/mpeg" />
		<itunes:subtitle>Hyperscalers refer to expansive cloud service providers capable of delivering enterprise-scale computing and storage services. These Hyperscalers like Google, Amazon, Facebook that have huge data centers and are either running their own software or ren...</itunes:subtitle>
		<itunes:summary>Hyperscalers refer to expansive cloud service providers capable of delivering enterprise-scale computing and storage services. These Hyperscalers like Google, Amazon, Facebook that have huge data centers and are either running their own software or renting out this infrastructure realized a long time back that the traditional Network, Storage &amp; Compute server racks were not enough</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>59:45</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">15254</post-id>	</item>
	<item>
		<title>Trusted Software Supply Chain with Vincent Danen</title>
		<link>http://softwareengineeringdaily.com/2023/07/05/trusted-software-supply-chain/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=trusted-software-supply-chain</link>
		<pubDate>Wed, 05 Jul 2023 09:00:00 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=15237</guid>
		<comments>http://softwareengineeringdaily.com/2023/07/05/trusted-software-supply-chain/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2023/07/05/trusted-software-supply-chain/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Jordi Mon Companys]]></category>
		<category><![CDATA[Podcast]]></category>
		<category><![CDATA[DevSecOps]]></category>
		<category><![CDATA[Linux Foundation]]></category>
		<category><![CDATA[Red Hat]]></category>
		<category><![CDATA[Vincent Danen]]></category>
		<description>&lt;p&gt;Available as a cloud service, Red Hat Trusted Software Supply Chain provides a DevSecOps framework to create applications more securely. Vincent Danen is the VP of Product Security at Red Hat and joins us in this episode. Red Hat has been a Secure Open Source software provider for very long. We discuss how the Red&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2023/07/05/trusted-software-supply-chain/&quot;&gt;Trusted Software Supply Chain with Vincent Danen&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<p><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/07/vincent_danen.png"><img decoding="async" loading="lazy" class="size-full wp-image-15239 alignright" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/07/vincent_danen.png?resize=218%2C258" alt="" width="218" height="258" data-recalc-dims="1" /></a>Available as a cloud service, <a href="https://www.redhat.com/en">Red Hat</a> Trusted Software Supply Chain provides a DevSecOps framework to create applications more securely. <a href="https://twitter.com/vdanen">Vincent Danen</a> is the VP of Product Security at Red Hat and joins us in this episode.</p>
<p>Red Hat has been a Secure Open Source software provider for very long. We discuss how the Red Hat Trusted Software Supply Chain product allows enterprises to adopt DevSecOps practices successfully, safely consume open-source code and third-party dependencies, and build security into the software development life cycle.</p>
<p><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/03/jordi.png"><img decoding="async" loading="lazy" class="size-full wp-image-14908 alignleft" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/03/jordi.png?resize=218%2C258&#038;ssl=1" alt="" width="218" height="258" data-recalc-dims="1" /></a></p>
<p><a href="https://www.linkedin.com/in/jordimoncompanys/"><span style="font-weight: 400;">Jordi Mon Companys</span></a><span style="font-weight: 400;"> is a product manager and marketer that specializes in software delivery, developer experience, cloud native and open source. He has developed his career at companies like GitLab, Weaveworks, Harness and other platform and devtool providers. His interests range from software supply chain security to open source innovation. You can reach out to him on Twitter at </span><a href="https://twitter.com/JordiMonPMM"><span style="font-weight: 400;">@jordimonpmm</span></a></p>
<div>
<div>This Interview was recorded at <a href="https://streaklinks.com/Bg_PFnT7O79B3JCRLgNDYkWv/https%3A%2F%2Fevents.linuxfoundation.org%2Fopen-source-summit-north-america%2F" target="_blank" rel="noopener" data-saferedirecturl="https://www.google.com/url?q=https://streaklinks.com/Bg_PFnT7O79B3JCRLgNDYkWv/https%253A%252F%252Fevents.linuxfoundation.org%252Fopen-source-summit-north-america%252F&amp;source=gmail&amp;ust=1684828419418000&amp;usg=AOvVaw0b5w1_wDC_OeXyLXD_nqzJ">Open Source Summit North America</a> and wouldn&#8217;t have been possible without the generous support from <a href="https://www.linuxfoundation.org/">The Linux Foundation</a>.</div>
<p style="text-align: center;">Sponsorship inquiries: <a href="https://cms.megaphone.fm/organizations/619b680e-d813-11ea-9750-e7ecac406436/podcasts/e60108fe-e328-11ea-b2b6-1348249f900a/episodes/3913370a-bc44-11ed-ace6-8b1f96d82bba/sponsor@softwareengineeringdaily.com" target="_blank" rel="noopener noreferrer">sponsor@softwareengineeringdaily.com</a></p>
<p><a href="http://softwareengineeringdaily.com/wp-content/uploads/2023/07/SED1542-Vincent-Danen.txt">Please click here to view this show’s transcript</a>.</p>
</div>
<p>&nbsp;</p>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2023/07/05/trusted-software-supply-chain/">Trusted Software Supply Chain with Vincent Danen</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED5998432598.mp3" length="64544917" type="audio/mpeg" />
		<itunes:subtitle>Available as a cloud service, Red Hat Trusted Software Supply Chain provides a DevSecOps framework to create applications more securely. Vincent Danen is the VP of Product Security at Red Hat and joins us in this episode.</itunes:subtitle>
		<itunes:summary>Available as a cloud service, Red Hat Trusted Software Supply Chain provides a DevSecOps framework to create applications more securely. Vincent Danen is the VP of Product Security at Red Hat and joins us in this episode. Red Hat has been a Secure Open Source software provider for very long. We discuss how the Red</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>44:45</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">15237</post-id>	</item>
	<item>
		<title>Customer-facing Analytics with Tyler Wells</title>
		<link>http://softwareengineeringdaily.com/2023/06/30/customer-facing-analytics/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=customer-facing-analytics</link>
		<pubDate>Fri, 30 Jun 2023 09:00:16 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=15153</guid>
		<comments>http://softwareengineeringdaily.com/2023/06/30/customer-facing-analytics/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2023/06/30/customer-facing-analytics/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Podcast]]></category>
		<category><![CDATA[Sean Falconer]]></category>
		<category><![CDATA[Uncategorized]]></category>
		<category><![CDATA[Customer-facing Analytics]]></category>
		<category><![CDATA[data]]></category>
		<category><![CDATA[Propel]]></category>
		<category><![CDATA[Tyler Wells]]></category>
		<description>&lt;p&gt;The state of Data inside most companies is chaotic. It takes significant time and investment to tame this chaos. When you are a platform provider you are gathering tons of data from the developers using your platform. These developers building products on your platform need insight into that data to better understand how their application&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2023/06/30/customer-facing-analytics/&quot;&gt;Customer-facing Analytics with Tyler Wells&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<p><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/06/tyler.png"><img decoding="async" loading="lazy" class="alignright size-full wp-image-15154" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/06/tyler.png?resize=218%2C258" alt="" width="218" height="258" data-recalc-dims="1" /></a>The state of Data inside most companies is chaotic. It takes significant time and investment to tame this chaos. When you are a platform provider you are gathering tons of data from the developers using your platform. These developers building products on your platform need insight into that data to better understand how their application is performing or to troubleshoot it. Most Platforms or SaaS application providers find it both difficult and expensive to build customer-facing analytics and data applications into their platforms. In fact most companies don’t know what to do with the data they are gathering and continually postpone future product roadmap features aimed to unlock this data. This data can be a crucial part of the developer experience and can empower your customers. It can save you countless hours of handling support tickets, and increase overall stickiness on the platform.</p>
<p><a href="https://www.propeldata.com/">Propel</a> is a GraphQL API platform ideal for powering customer-facing analytics use cases, from customer dashboards and analytics APIs to product usage or in-product metrics.<br />
<a href="https://twitter.com/tylerwells?lang=en">Tyler Wells</a> is Co-founder and CTO at Propel and he joins us today. We discuss how the customer-centric experiences at Twilio lead his team to the journey they are on today.</p>
<p><span style="font-weight: 400;"><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/05/Sean-Falconer.png"><img decoding="async" loading="lazy" class="size-full wp-image-13856 alignleft" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/05/Sean-Falconer.png?resize=218%2C258&#038;ssl=1" alt="" width="218" height="258" data-recalc-dims="1" /></a>Sean&#8217;s been an academic, startup founder, and Googler. He has published works covering a wide range of topics from information visualization to quantum computing. Currently, Sean is Head of Marketing and Developer Relations at <a href="https://www.skyflow.com/">Skyflow</a> and host of the podcast Partially Redacted, a podcast about privacy and security engineering. You can connect with Sean on Twitter <a href="https://twitter.com/seanfalconer">@seanfalconer .</a></span></p>
<p>&nbsp;</p>
<p style="text-align: center;">Sponsorship inquiries: <a href="https://cms.megaphone.fm/organizations/619b680e-d813-11ea-9750-e7ecac406436/podcasts/e60108fe-e328-11ea-b2b6-1348249f900a/episodes/3913370a-bc44-11ed-ace6-8b1f96d82bba/sponsor@softwareengineeringdaily.com" target="_blank" rel="noopener noreferrer">sponsor@softwareengineeringdaily.com</a></p>
<p><a href="http://softwareengineeringdaily.com/wp-content/uploads/2023/07/SED1543-Customer-facing-Analytics-with-Tyler-Wells.txt">Please click here to view this show’s transcript</a>.</p>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2023/06/30/customer-facing-analytics/">Customer-facing Analytics with Tyler Wells</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED9351992664.mp3" length="74455149" type="audio/mpeg" />
		<itunes:subtitle>The state of Data inside most companies is chaotic. It takes significant time and investment to tame this chaos. When you are a platform provider you are gathering tons of data from the developers using your platform.</itunes:subtitle>
		<itunes:summary>The state of Data inside most companies is chaotic. It takes significant time and investment to tame this chaos. When you are a platform provider you are gathering tons of data from the developers using your platform. These developers building products on your platform need insight into that data to better understand how their application</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>51:38</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">15153</post-id>	</item>
	<item>
		<title>Resale Revolution with Richie Ganney and Harry Riley</title>
		<link>http://softwareengineeringdaily.com/2023/06/29/resale-revolution-with-richie-ganney-and-harry-riley/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=resale-revolution-with-richie-ganney-and-harry-riley</link>
		<pubDate>Thu, 29 Jun 2023 13:08:39 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=15152</guid>
		<comments>http://softwareengineeringdaily.com/2023/06/29/resale-revolution-with-richie-ganney-and-harry-riley/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2023/06/29/resale-revolution-with-richie-ganney-and-harry-riley/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Jeff Hemmen]]></category>
		<category><![CDATA[Podcast]]></category>
		<category><![CDATA[Continue]]></category>
		<category><![CDATA[resale]]></category>
		<category><![CDATA[Resale Revolution]]></category>
		<description>&lt;p&gt;The company Continue has a new take on the resale marketplace. By partnering with brands and pulling post-purchase data onto their platform, this innovative solution simplifies and enhances the resale process, empowering consumers to participate in a more sustainable and circular economy. Richie Ganney and Harry Riley are the Co-founders of Continue and they join&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2023/06/29/resale-revolution-with-richie-ganney-and-harry-riley/&quot;&gt;Resale Revolution with Richie Ganney and Harry Riley&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<p>The company <a href="https://www.continue.co/">Continue</a> has a new take on the resale marketplace. By partnering with brands and pulling post-purchase data onto their platform, this innovative solution simplifies and enhances the resale process, empowering consumers to participate in a more sustainable and circular economy.<br />
<a href="https://www.linkedin.com/in/richie-ganney-26965063/">Richie Ganney</a> and <a href="https://www.linkedin.com/in/harryriley/">Harry Riley</a> are the Co-founders of Continue and they join us in this episode. We uncover how this startup is revolutionizing the way we consume and recycle products.</p>
<div><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/09/jeffhemmen.png"><img decoding="async" loading="lazy" class="size-full wp-image-14406 alignleft" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/09/jeffhemmen.png?resize=268%2C318&#038;ssl=1" alt="" width="268" height="318" srcset="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/09/jeffhemmen.png?w=268 268w, https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/09/jeffhemmen.png?resize=253%2C300 253w" sizes="(max-width: 268px) 100vw, 268px" data-recalc-dims="1" /></a>Jeff is a DevSecOps engineer with strong experience in Security, The Software Development Life Cycle and Cloud Technologies. His advanced expertise in HashiCorp technologies places him as one of the most sought after trainers in the EMEA region and beyond. Jeff has worked for a range of different companies – from small startups to some of the biggest financial institutions. He now successfully runs his own consultancy that provides services in DevSecOps, Cloud and Security. Check it out on <a href="https://hemmen.lu/">hemmen.LU</a> and follow Jeff on LinkedIn <a href="https://www.linkedin.com/in/jeffhemmen/">@jeffhemmen</a></div>
<div></div>
<div style="text-align: center;">Sponsorship inquiries: <a href="https://cms.megaphone.fm/organizations/619b680e-d813-11ea-9750-e7ecac406436/podcasts/e60108fe-e328-11ea-b2b6-1348249f900a/episodes/3913370a-bc44-11ed-ace6-8b1f96d82bba/sponsor@softwareengineeringdaily.com" target="_blank" rel="noopener noreferrer">sponsor@softwareengineeringdaily.com</a></div>
<div></div>
<div><a href="http://softwareengineeringdaily.com/wp-content/uploads/2023/07/SED1544-Resale-Revolution-with-Richie-Ganney-and-Harry-Riley.txt">Please click here to view this show’s transcript</a>.</div>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2023/06/29/resale-revolution-with-richie-ganney-and-harry-riley/">Resale Revolution with Richie Ganney and Harry Riley</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED4116590504.mp3" length="65239856" type="audio/mpeg" />
		<itunes:subtitle>The company Continue has a new take on the resale marketplace. By partnering with brands and pulling post-purchase data onto their platform, this innovative solution simplifies and enhances the resale process,</itunes:subtitle>
		<itunes:summary>The company Continue has a new take on the resale marketplace. By partnering with brands and pulling post-purchase data onto their platform, this innovative solution simplifies and enhances the resale process, empowering consumers to participate in a more sustainable and circular economy. Richie Ganney and Harry Riley are the Co-founders of Continue and they join</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>45:14</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">15152</post-id>	</item>
	<item>
		<title>Superfast JVM Startup with Gerrit Grunwald</title>
		<link>http://softwareengineeringdaily.com/2023/06/26/superfast-jvm-startup/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=superfast-jvm-startup</link>
		<pubDate>Mon, 26 Jun 2023 09:00:11 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=15142</guid>
		<comments>http://softwareengineeringdaily.com/2023/06/26/superfast-jvm-startup/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2023/06/26/superfast-jvm-startup/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[Alex DeBrie]]></category>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Podcast]]></category>
		<category><![CDATA[Azul]]></category>
		<category><![CDATA[CRaC]]></category>
		<category><![CDATA[Java]]></category>
		<category><![CDATA[OpenJDK]]></category>
		<description>&lt;p&gt;CRaC (Coordinated Restore at Checkpoint) is a new technology that can improve startup and warmup times by orders of magnitude. It is a project of OpenJDK that was proposed and led by Azul. The CRaC Project defines public Java APIs that allow for the coordination of resources during checkpoint and restore operations. With CRaC, a&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2023/06/26/superfast-jvm-startup/&quot;&gt;Superfast JVM Startup with Gerrit Grunwald&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<p><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/06/gerrit.png"><img decoding="async" loading="lazy" class="alignright size-full wp-image-15143" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/06/gerrit.png?resize=218%2C258&#038;ssl=1" alt="" width="218" height="258" data-recalc-dims="1" /></a>CRaC (Coordinated Restore at Checkpoint) is a new technology that can improve startup and warmup times by orders of magnitude. It is a project of OpenJDK that was proposed and led by <a href="https://www.azul.com/">Azul</a>. The CRaC Project defines public Java APIs that allow for the coordination of resources during checkpoint and restore operations. With CRaC, a checkpoint can be set at any point where an application can be safely paused. Azul is releasing a reference implementation of CRaC in JDK 17 with the Azul Zulu Build of OpenJDK for x86 64-bit Linux update. CRaC allows for an &#8220;instant&#8221; start at any point in the application lifecycle at an optimal speed. ​It also work&#8217;s really well with Azul&#8217;s ReadyNow! feature that optimizes warm-up. For the first time, developers will have a TCK-tested, CRaC-configured, production-ready JVM with commercial support available for their use.</p>
<p><a href="https://twitter.com/hansolo_">Gerrit Grunwald</a> is a Java Champion &amp; Principle Engineer at Azul and he joins us in this episode.</p>
<p><em>Full disclosure: Azul is a sponsor of Software Engineering Daily.</em></p>
<div>
<p><span style="font-weight: 400;"><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/04/alex.png"><img decoding="async" loading="lazy" class="size-full wp-image-14922 alignleft" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/04/alex.png?resize=218%2C258&#038;ssl=1" alt="" width="218" height="258" data-recalc-dims="1" /></a>Alex is an AWS Data Hero, an independent consultant, and the author of </span><a href="https://www.dynamodbbook.com/"><span style="font-weight: 400;">The DynamoDB Book</span></a><span style="font-weight: 400;">, the comprehensive guide to data modeling with DynamoDB. He was an early employee at Serverless, Inc., creators of the Serverless Framework, and was an early community member in the serverless space. His consulting and training work focuses on serverless architectures and database optimization. You can find him on Twitter as </span><a href="https://twitter.com/alexbdebrie"><span style="font-weight: 400;">@alexbdebrie</span></a><span style="font-weight: 400;"> or on his site, </span><a href="https://www.alexdebrie.com/"><span style="font-weight: 400;">alexdebrie.com</span></a><span style="font-weight: 400;">.</span></p>
</div>
<div></div>
<div style="text-align: center;">Sponsorship inquiries: <a href="https://cms.megaphone.fm/organizations/619b680e-d813-11ea-9750-e7ecac406436/podcasts/e60108fe-e328-11ea-b2b6-1348249f900a/episodes/3913370a-bc44-11ed-ace6-8b1f96d82bba/sponsor@softwareengineeringdaily.com" target="_blank" rel="noopener noreferrer">sponsor@softwareengineeringdaily.com</a></div>
<div></div>
<div></div>
<div></div>
<div><a href="http://softwareengineeringdaily.com/wp-content/uploads/2023/07/SED1538-Superfast-JVM-Startup-with-Gerrit-Grunwald.pdf">Transcript</a></div>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2023/06/26/superfast-jvm-startup/">Superfast JVM Startup with Gerrit Grunwald</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED2345619599.mp3" length="76941878" type="audio/mpeg" />
		<itunes:subtitle>CRaC (Coordinated Restore at Checkpoint) is a new technology that can improve startup and warmup times by orders of magnitude. It is a project of OpenJDK that was proposed and led by Azul. The CRaC Project defines public Java APIs that allow for the co...</itunes:subtitle>
		<itunes:summary>CRaC (Coordinated Restore at Checkpoint) is a new technology that can improve startup and warmup times by orders of magnitude. It is a project of OpenJDK that was proposed and led by Azul. The CRaC Project defines public Java APIs that allow for the coordination of resources during checkpoint and restore operations. With CRaC, a</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>53:22</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">15142</post-id>	</item>
	<item>
		<title>WebAssembly with Matt Butcher</title>
		<link>http://softwareengineeringdaily.com/2023/06/23/webassembly-with-matt-butcher/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=webassembly-with-matt-butcher</link>
		<pubDate>Fri, 23 Jun 2023 09:39:32 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=15042</guid>
		<comments>http://softwareengineeringdaily.com/2023/06/23/webassembly-with-matt-butcher/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2023/06/23/webassembly-with-matt-butcher/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Jordi Mon Companys]]></category>
		<category><![CDATA[Podcast]]></category>
		<category><![CDATA[Matt Butcher]]></category>
		<category><![CDATA[programming language]]></category>
		<category><![CDATA[WebAssembly]]></category>
		<description>&lt;p&gt;WebAssembly is a low-level binary format for the web that is compiled from other languages to offer maximized performance and is meant to augment the places where JavaScript isn’t sufficient. High Performance applications like AutoCAD, Figma and Photoshop are now leveraging the capabilities of WebAssembly to provide native experiences on the web. Matt Butcher is&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2023/06/23/webassembly-with-matt-butcher/&quot;&gt;WebAssembly with Matt Butcher&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<p><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/05/matt.png"><img decoding="async" loading="lazy" class="alignright size-full wp-image-15055" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/05/matt.png?resize=218%2C258&#038;ssl=1" alt="" width="218" height="258" data-recalc-dims="1" /></a></p>
<div>
<p>WebAssembly is a low-level binary format for the web that is compiled from other languages to offer maximized performance and is meant to augment the places where JavaScript isn’t sufficient. High Performance applications like AutoCAD, Figma and Photoshop are now leveraging the capabilities of WebAssembly to provide native experiences on the web.<br />
<a href="https://twitter.com/technosophos?ref_src=twsrc%5Egoogle%7Ctwcamp%5Eserp%7Ctwgr%5Eauthor">Matt Butcher</a> is the CEO at <a href="https://www.fermyon.com/">Fermyon Technologies</a> and he joins us in this episode.</p>
<p><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/03/jordi.png"><img decoding="async" loading="lazy" class="size-full wp-image-14908 alignleft" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/03/jordi.png?resize=218%2C258&#038;ssl=1" alt="" width="218" height="258" data-recalc-dims="1" /></a></p>
<p><a href="https://www.linkedin.com/in/jordimoncompanys/"><span style="font-weight: 400;">Jordi Mon Companys</span></a><span style="font-weight: 400;"> is a product manager and marketer that specializes in software delivery, developer experience, cloud native and open source. He has developed his career at companies like GitLab, Weaveworks, Harness and other platform and devtool providers. His interests range from software supply chain security to open source innovation. You can reach out to him on Twitter at </span><a href="https://twitter.com/JordiMonPMM"><span style="font-weight: 400;">@jordimonpmm</span></a></p>
<div>
<div>This Interview was recorded at <a href="https://streaklinks.com/Bg_PFnT7O79B3JCRLgNDYkWv/https%3A%2F%2Fevents.linuxfoundation.org%2Fopen-source-summit-north-america%2F" target="_blank" rel="noopener" data-saferedirecturl="https://www.google.com/url?q=https://streaklinks.com/Bg_PFnT7O79B3JCRLgNDYkWv/https%253A%252F%252Fevents.linuxfoundation.org%252Fopen-source-summit-north-america%252F&amp;source=gmail&amp;ust=1684828419418000&amp;usg=AOvVaw0b5w1_wDC_OeXyLXD_nqzJ">Open Source Summit North America</a> and wouldn&#8217;t have been possible without the generous support from <a href="https://www.linuxfoundation.org/">The Linux Foundation</a>.</div>
<p style="text-align: center;">Sponsorship inquiries: <a href="https://cms.megaphone.fm/organizations/619b680e-d813-11ea-9750-e7ecac406436/podcasts/e60108fe-e328-11ea-b2b6-1348249f900a/episodes/3913370a-bc44-11ed-ace6-8b1f96d82bba/sponsor@softwareengineeringdaily.com" target="_blank" rel="noopener noreferrer">sponsor@softwareengineeringdaily.com</a></p>
<p><a href="http://softwareengineeringdaily.com/wp-content/uploads/2023/07/SED1539-Matt-Butcher.pdf">Transcript</a></p>
</div>
</div>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2023/06/23/webassembly-with-matt-butcher/">WebAssembly with Matt Butcher</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED5010985549.mp3" length="65628695" type="audio/mpeg" />
		<itunes:subtitle>WebAssembly is a low-level binary format for the web that is compiled from other languages to offer maximized performance and is meant to augment the places where JavaScript isn’t sufficient. High Performance applications like AutoCAD,</itunes:subtitle>
		<itunes:summary>WebAssembly is a low-level binary format for the web that is compiled from other languages to offer maximized performance and is meant to augment the places where JavaScript isn’t sufficient. High Performance applications like AutoCAD, Figma and Photoshop are now leveraging the capabilities of WebAssembly to provide native experiences on the web. Matt Butcher is</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>45:31</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">15042</post-id>	</item>
	<item>
		<title>Building Enterprise Applications with Robert Cooke</title>
		<link>http://softwareengineeringdaily.com/2023/06/22/building-enterprise-applications/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=building-enterprise-applications</link>
		<pubDate>Thu, 22 Jun 2023 09:00:24 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=15127</guid>
		<comments>http://softwareengineeringdaily.com/2023/06/22/building-enterprise-applications/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2023/06/22/building-enterprise-applications/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Jocelyn Byrne Houle]]></category>
		<category><![CDATA[Podcast]]></category>
		<category><![CDATA[Uncategorized]]></category>
		<category><![CDATA[3forge]]></category>
		<category><![CDATA[Full Stack]]></category>
		<category><![CDATA[Robert Cooke]]></category>
		<description>&lt;p&gt;In this episode, we are talking to Robert Cooke, founder and CTO of 3forge. He has spent the last decade creating a full stack software platform that revolutionized enterprise real-time data management, visualization, and workflows through its inventive “high impact code” concept. With offices in New York, London, and Singapore, 3forge has been serving a&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2023/06/22/building-enterprise-applications/&quot;&gt;Building Enterprise Applications with Robert Cooke&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<p><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/06/robert.png"><img decoding="async" loading="lazy" class="alignright size-full wp-image-15129" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/06/robert.png?resize=218%2C258&#038;ssl=1" alt="" width="218" height="258" data-recalc-dims="1" /></a>In this episode, we are talking to <a href="https://www.linkedin.com/in/robert-cooke-a7835b69/">Robert Cooke</a>, founder and CTO of <a href="https://3forge.com/">3forge</a>. He has spent the last decade creating a full stack software platform that revolutionized enterprise real-time data management, visualization, and workflows through its inventive &#8220;high impact code&#8221; concept. With offices in New York, London, and Singapore, 3forge has been serving a global clientele including Tier 1 banks and large financial institutions. He talks about his life long passion for computing, the challenges of creating a complete high performance platform, and the scaling principles needed to exceed the requirements of the most demanding global firms.</p>
<p><span style="font-weight: 400;"><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/04/jocelyn.png"><img decoding="async" loading="lazy" class="size-full wp-image-14942 alignleft" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/04/jocelyn.png?resize=209%2C249&#038;ssl=1" alt="" width="209" height="249" data-recalc-dims="1" /></a>Starting her career as a software developer, Jocelyn Houle is now a Senior Director of Product Management at </span><a href="https://securiti.ai/"><span style="font-weight: 400;">Securiti.ai,</span></a><span style="font-weight: 400;"> a unified data protection and governance platform. Before that, she was an Operating Partner at </span><a href="https://growthventures.capitalone.com/"><span style="font-weight: 400;">Capital One Ventures</span></a><span style="font-weight: 400;"> investing in data and AI startups. Jocelyn has been a founder of two startups and a full life cycle, technical product manager at large companies like Fannie Mae, Microsoft and Capital One.  Follow Jocelyn on </span><a href="https://www.linkedin.com/in/jocelyn/"><span style="font-weight: 400;">LinkedIn </span></a><span style="font-weight: 400;"> or Twitter </span><a href="https://twitter.com/jocelynbyrne"><span style="font-weight: 400;">@jocelynbyrne.</span></a></p>
<p style="text-align: center;">Sponsorship inquiries: <a href="https://cms.megaphone.fm/organizations/619b680e-d813-11ea-9750-e7ecac406436/podcasts/e60108fe-e328-11ea-b2b6-1348249f900a/episodes/3913370a-bc44-11ed-ace6-8b1f96d82bba/sponsor@softwareengineeringdaily.com" target="_blank" rel="noopener noreferrer">sponsor@softwareengineeringdaily.com</a></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="http://softwareengineeringdaily.com/wp-content/uploads/2023/07/SED1540-Robert-Cooke.pdf">Transcript</a></p>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2023/06/22/building-enterprise-applications/">Building Enterprise Applications with Robert Cooke</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED8921391728.mp3" length="95587292" type="audio/mpeg" />
		<itunes:subtitle>In this episode, we are talking to Robert Cooke, founder and CTO of 3forge. He has spent the last decade creating a full stack software platform that revolutionized enterprise real-time data management, visualization,</itunes:subtitle>
		<itunes:summary>In this episode, we are talking to Robert Cooke, founder and CTO of 3forge. He has spent the last decade creating a full stack software platform that revolutionized enterprise real-time data management, visualization, and workflows through its inventive “high impact code” concept. With offices in New York, London, and Singapore, 3forge has been serving a</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>1:06:19</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">15127</post-id>	</item>
	<item>
		<title>Solving Usage-Based Pricing with Puneet Gupta</title>
		<link>http://softwareengineeringdaily.com/2023/06/19/solving-usage-based-pricing/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=solving-usage-based-pricing</link>
		<pubDate>Mon, 19 Jun 2023 18:44:18 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=15121</guid>
		<comments>http://softwareengineeringdaily.com/2023/06/19/solving-usage-based-pricing/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2023/06/19/solving-usage-based-pricing/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Lee Atchison]]></category>
		<category><![CDATA[Podcast]]></category>
		<category><![CDATA[Uncategorized]]></category>
		<category><![CDATA[Amberflo]]></category>
		<category><![CDATA[AWS]]></category>
		<category><![CDATA[Cloud]]></category>
		<category><![CDATA[Puneet Gupta]]></category>
		<description>&lt;p&gt;Usage-Based Pricing is becoming more and more popular. Led by the wild popularity of cloud service providers such as AWS, customers are demanding more visibility into usage information and more accountability for the dollars they spend on a service. But historically service oriented products have shied away from usage based pricing because of the complexity&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2023/06/19/solving-usage-based-pricing/&quot;&gt;Solving Usage-Based Pricing with Puneet Gupta&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<p><span style="font-weight: 400;"><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/06/puneet.png"><img decoding="async" loading="lazy" class="alignright size-full wp-image-15123" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/06/puneet.png?resize=218%2C258&#038;ssl=1" alt="" width="218" height="258" data-recalc-dims="1" /></a>Usage-Based Pricing is becoming more and more popular. Led by the wild popularity of cloud service providers such as AWS, customers are demanding more visibility into usage information and more accountability for the dollars they spend on a service.</span><span style="font-weight: 400;"><br />
</span><span style="font-weight: 400;">But historically service oriented products have shied away from usage based pricing because of the complexity involved in managing the data involved.</span><span style="font-weight: 400;"><br />
</span><span style="font-weight: 400;"><a href="https://www.amberflo.io/">Amberflo</a> is a service that provides a platform for building and deploying usage based pricing. <a href="https://www.linkedin.com/in/puneetguptausa">Puneet Gupta</a> is the CEO and Founder of Amberflo and he is our guest today.</span></p>
<p>This episode is hosted by Lee Atchison. Lee Atchison is a software architect, author, and thought leader on cloud computing and application modernization. His most recent book, <a href="https://leeatchison.com//ref-amzn-arch-for-scale">Architecting for Scale</a> (O’Reilly Media) is an essential resource for technical teams looking to maintain high availability and manage risk in their cloud environments.<br />
Lee is the host of his podcast, <a href="https://mdb.fm/?utm_campaign=swengdaily&amp;utm_source=mdb&amp;utm_medium=podcast">Modern Digital Business</a>, an engaging and informative podcast produced for people looking to build and grow their digital business with the help of modern applications and processes developed for today’s fast-moving business environment. Subscribe at <a href="http://mdb.fm/">mdb.fm</a>. Follow Lee, at <a href="http://leeatchison.com/">leeatchison.com</a>.</p>
<p style="text-align: center;">Sponsorship inquiries: <a href="https://cms.megaphone.fm/organizations/619b680e-d813-11ea-9750-e7ecac406436/podcasts/e60108fe-e328-11ea-b2b6-1348249f900a/episodes/3913370a-bc44-11ed-ace6-8b1f96d82bba/sponsor@softwareengineeringdaily.com" target="_blank" rel="noopener noreferrer">sponsor@softwareengineeringdaily.com</a></p>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2023/06/19/solving-usage-based-pricing/">Solving Usage-Based Pricing with Puneet Gupta</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED1271387197.mp3" length="57976151" type="audio/mpeg" />
		<itunes:subtitle>Usage-Based Pricing is becoming more and more popular. Led by the wild popularity of cloud service providers such as AWS, customers are demanding more visibility into usage information and more accountability for the dollars they spend on a service.</itunes:subtitle>
		<itunes:summary>Usage-Based Pricing is becoming more and more popular. Led by the wild popularity of cloud service providers such as AWS, customers are demanding more visibility into usage information and more accountability for the dollars they spend on a service. But historically service oriented products have shied away from usage based pricing because of the complexity</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>40:12</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">15121</post-id>	</item>
	<item>
		<title>Shipping Features with Ben Rometsch</title>
		<link>http://softwareengineeringdaily.com/2023/06/15/shipping-features-with-ben/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=shipping-features-with-ben</link>
		<pubDate>Thu, 15 Jun 2023 11:20:53 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=15113</guid>
		<comments>http://softwareengineeringdaily.com/2023/06/15/shipping-features-with-ben/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2023/06/15/shipping-features-with-ben/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Paweł Borkowski]]></category>
		<category><![CDATA[Podcast]]></category>
		<description>&lt;p&gt;Feature flags also known as feature toggles, release toggles or feature flippers are a way to enable or disable a particular feature from your app without making any changes to the source code. You can turn on or off a particular functionality without deploying new code. Feature flags can also be used to serve different&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2023/06/15/shipping-features-with-ben/&quot;&gt;Shipping Features with Ben Rometsch&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<p><span style="font-weight: 400;">Feature flags also known as feature toggles, release toggles or feature flippers are a way to enable or disable a particular feature from your app without making any changes to the source code. You can turn on or off a particular functionality without deploying new code. Feature flags can also be used to serve different features to different subset of users.</span></p>
<p><span style="font-weight: 400;">The company <a href="https://flagsmith.com/">Flagsmith</a> provides you a platform for developing, implementing and managing your feature flags. Ben Rometsch is the Co-founder and the CEO of Flagsmith and he joins us today.</span><span style="font-weight: 400;"><br />
</span></p>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2023/06/15/shipping-features-with-ben/">Shipping Features with Ben Rometsch</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED1205320407.mp3" length="99410381" type="audio/mpeg" />
		<itunes:subtitle>Feature flags also known as feature toggles, release toggles or feature flippers are a way to enable or disable a particular feature from your app without making any changes to the source code. You can turn on or off a particular functionality without ...</itunes:subtitle>
		<itunes:summary>Feature flags also known as feature toggles, release toggles or feature flippers are a way to enable or disable a particular feature from your app without making any changes to the source code. You can turn on or off a particular functionality without deploying new code. Feature flags can also be used to serve different</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>1:08:58</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">15113</post-id>	</item>
	<item>
		<title>Data Reliability with Barr Moses and Lior Gavish</title>
		<link>http://softwareengineeringdaily.com/2023/06/12/data-reliability/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=data-reliability</link>
		<pubDate>Mon, 12 Jun 2023 09:00:31 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=15101</guid>
		<comments>http://softwareengineeringdaily.com/2023/06/12/data-reliability/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2023/06/12/data-reliability/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Podcast]]></category>
		<category><![CDATA[Sean Falconer]]></category>
		<category><![CDATA[data]]></category>
		<category><![CDATA[Data observability]]></category>
		<category><![CDATA[data reliability]]></category>
		<category><![CDATA[montecarlo]]></category>
		<description>&lt;p&gt;As companies depend more on data to improve digital products and make informed decisions, it’s crucial that the data they use be accurate and reliable. MonteCarlo, the data reliability company, is the creator of the industry’s first end-to-end data observability platform. Barr Moses and Lior Gavish are the founders of Monte Carlo and they join&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2023/06/12/data-reliability/&quot;&gt;Data Reliability with Barr Moses and Lior Gavish&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<p>As companies depend more on data to improve digital products and make informed decisions, it&#8217;s crucial that the data they use be accurate and reliable. <a href="https://www.montecarlodata.com/">MonteCarlo</a>, the data reliability company, is the creator of the industry&#8217;s first end-to-end data observability platform.</p>
<p><a href="https://twitter.com/BM_DataDowntime?ref_src=twsrc%5Egoogle%7Ctwcamp%5Eserp%7Ctwgr%5Eauthor">Barr Moses</a> and <a href="https://twitter.com/lgavish?lang=en">Lior Gavish</a> are the founders of Monte Carlo and they join us today.</p>
<p><span style="font-weight: 400;"><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/05/Sean-Falconer.png"><img decoding="async" loading="lazy" class="size-full wp-image-13856 alignleft" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/05/Sean-Falconer.png?resize=218%2C258&#038;ssl=1" alt="" width="218" height="258" data-recalc-dims="1" /></a>Sean&#8217;s been an academic, startup founder, and Googler. He has published works covering a wide range of topics from information visualization to quantum computing. Currently, Sean is Head of Marketing and Developer Relations at <a href="https://www.skyflow.com/">Skyflow</a> and host of the podcast Partially Redacted, a podcast about privacy and security engineering. You can connect with Sean on Twitter <a href="https://twitter.com/seanfalconer">@seanfalconer .</a></span></p>
<p>&nbsp;</p>
<p style="text-align: center;">Sponsorship inquiries: <a href="https://cms.megaphone.fm/organizations/619b680e-d813-11ea-9750-e7ecac406436/podcasts/e60108fe-e328-11ea-b2b6-1348249f900a/episodes/3913370a-bc44-11ed-ace6-8b1f96d82bba/sponsor@softwareengineeringdaily.com" target="_blank" rel="noopener noreferrer">sponsor@softwareengineeringdaily.com</a></p>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2023/06/12/data-reliability/">Data Reliability with Barr Moses and Lior Gavish</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED7764218959.mp3" length="81258604" type="audio/mpeg" />
		<itunes:subtitle>As companies depend more on data to improve digital products and make informed decisions, it’s crucial that the data they use be accurate and reliable. MonteCarlo, the data reliability company, is the creator of the industry’s first end-to-end data obs...</itunes:subtitle>
		<itunes:summary>As companies depend more on data to improve digital products and make informed decisions, it’s crucial that the data they use be accurate and reliable. MonteCarlo, the data reliability company, is the creator of the industry’s first end-to-end data observability platform. Barr Moses and Lior Gavish are the founders of Monte Carlo and they join</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>56:22</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">15101</post-id>	</item>
	<item>
		<title>Modern Robotics Platform with Eliot Horowitz</title>
		<link>http://softwareengineeringdaily.com/2023/06/06/modern-robotics-platform/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=modern-robotics-platform</link>
		<pubDate>Tue, 06 Jun 2023 09:00:25 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=15094</guid>
		<comments>http://softwareengineeringdaily.com/2023/06/06/modern-robotics-platform/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2023/06/06/modern-robotics-platform/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Paweł Borkowski]]></category>
		<category><![CDATA[Podcast]]></category>
		<category><![CDATA[Cloud]]></category>
		<category><![CDATA[Robotics]]></category>
		<category><![CDATA[robots]]></category>
		<category><![CDATA[VIAM]]></category>
		<description>&lt;p&gt;Programming robotics software has traditionally been a specialized field. The software industry has seen rapid progress, the operating system that provides the foundation for our software applications is taken care of by companies like Google, Microsoft, and other players like Canonical, Amazon, etc. The robotics industry still needs that OS layer that handles the complexities&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2023/06/06/modern-robotics-platform/&quot;&gt;Modern Robotics Platform with Eliot Horowitz&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<p><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/06/eliot_horowitz.png"><img decoding="async" loading="lazy" class="alignright size-full wp-image-15092" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/06/eliot_horowitz.png?resize=218%2C258" alt="" width="218" height="258" data-recalc-dims="1" /></a>Programming robotics software has traditionally been a specialized field. The software industry has seen rapid progress, the operating system that provides the foundation for our software applications is taken care of by companies like Google, Microsoft, and other players like Canonical, Amazon, etc. The robotics industry still needs that OS layer that handles the complexities so that engineers can build robots that serve their business needs. <a href="https://www.viam.com/">VIAM</a> aspires to be the Operating System for robotics that makes it easy to turn great ideas into production robots.</p>
<p><a href="https://twitter.com/eliothorowitz">Eliot Horowitz</a> is the Founder and CEO of VIAM and he joins us today. Eliot was previously the CTO at <a href="https://www.mongodb.com/">MongoDB</a>, a database company. We discuss with him the different challenges one faces when trying to build a robot and how VIAM is trying to solve that.</p>
<p><span style="font-weight: 400;"><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/06/pawel.png"><img decoding="async" loading="lazy" class="size-full wp-image-15095 alignleft" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/06/pawel.png?resize=200%2C240" alt="" width="200" height="240" data-recalc-dims="1" /></a>Paweł is the founder at </span><a href="https://flat.social"><span style="font-weight: 400;">flat.sociaI</span></a><span style="font-weight: 400;"> the world’s first &#8216;flatverse&#8217; start-up. Pawel’s background is as a full-stack software engineer with a lean and experimental approach towards product development. With a strong grounding in computing science, he spent the last decade getting early-stage products off the ground &#8211; both in startup and corporate settings.</span></p>
<p><span style="font-weight: 400;">Follow Paweł on </span><a href="https://twitter.com/pawel_io"><span style="font-weight: 400;">Twitter</span></a><span style="font-weight: 400;">, </span><a href="https://www.linkedin.com/in/borkowskip/"><span style="font-weight: 400;">LinkedIn</span></a><span style="font-weight: 400;"> and his personal website &#8211; </span><a href="https://pawel.io/"><span style="font-weight: 400;">pawel.io</span></a><span style="font-weight: 400;">.</span></p>
<p style="text-align: center;">Sponsorship inquiries: <a href="https://cms.megaphone.fm/organizations/619b680e-d813-11ea-9750-e7ecac406436/podcasts/e60108fe-e328-11ea-b2b6-1348249f900a/episodes/3913370a-bc44-11ed-ace6-8b1f96d82bba/sponsor@softwareengineeringdaily.com" target="_blank" rel="noopener noreferrer">sponsor@softwareengineeringdaily.com</a></p>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2023/06/06/modern-robotics-platform/">Modern Robotics Platform with Eliot Horowitz</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED4105962904.mp3" length="58840091" type="audio/mpeg" />
		<itunes:subtitle>Programming robotics software has traditionally been a specialized field. The software industry has seen rapid progress, the operating system that provides the foundation for our software applications is taken care of by companies like Google,</itunes:subtitle>
		<itunes:summary>Programming robotics software has traditionally been a specialized field. The software industry has seen rapid progress, the operating system that provides the foundation for our software applications is taken care of by companies like Google, Microsoft, and other players like Canonical, Amazon, etc. The robotics industry still needs that OS layer that handles the complexities</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>40:48</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">15094</post-id>	</item>
	<item>
		<title>Cloud Native Search with Vinayak Borkar</title>
		<link>http://softwareengineeringdaily.com/2023/06/01/cloud-native-search/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=cloud-native-search</link>
		<pubDate>Thu, 01 Jun 2023 09:00:54 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=15088</guid>
		<comments>http://softwareengineeringdaily.com/2023/06/01/cloud-native-search/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2023/06/01/cloud-native-search/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Jocelyn Byrne Houle]]></category>
		<category><![CDATA[Podcast]]></category>
		<category><![CDATA[Elasticsearch]]></category>
		<category><![CDATA[Mach5]]></category>
		<category><![CDATA[opensearch]]></category>
		<category><![CDATA[Vinayak Borkar]]></category>
		<description>&lt;p&gt;Mach5 Search is a slide-in, cloud-native replacement for Elasticsearch and OpenSearch that immediately saves up to 90% in operating cost. Mach5 Search can run on top of Google BigQuery, Snowflake, and Databricks, or natively on Object Stores in all the major clouds. Vinayak Borkar is the CEO and Co-Founder of Mach5 Software and he joins&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2023/06/01/cloud-native-search/&quot;&gt;Cloud Native Search with Vinayak Borkar&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<p><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/06/vinayak.png"><img decoding="async" loading="lazy" class="alignright size-full wp-image-15089" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/06/vinayak.png?resize=218%2C258" alt="" width="218" height="258" data-recalc-dims="1" /></a><a href="https://mach5.io/">Mach5</a> Search is a slide-in, cloud-native replacement for Elasticsearch and OpenSearch that immediately saves up to 90% in operating cost. Mach5 Search can run on top of Google BigQuery, Snowflake, and Databricks, or natively on Object Stores in all the major clouds. <a href="https://www.linkedin.com/in/vinayakborkar/">Vinayak Borkar</a> is the CEO and Co-Founder of Mach5 Software and he joins us today.</p>
<p><span style="font-weight: 400;"><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/04/jocelyn.png"><img decoding="async" loading="lazy" class="size-full wp-image-14942 alignleft" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/04/jocelyn.png?resize=209%2C249&#038;ssl=1" alt="" width="209" height="249" data-recalc-dims="1" /></a>Starting her career as a software developer, Jocelyn Houle is now a Senior Director of Product Management at </span><a href="https://securiti.ai/"><span style="font-weight: 400;">Securiti.ai,</span></a><span style="font-weight: 400;"> a unified data protection and governance platform. Before that, she was an Operating Partner at </span><a href="https://growthventures.capitalone.com/"><span style="font-weight: 400;">Capital One Ventures</span></a><span style="font-weight: 400;"> investing in data and AI startups. Jocelyn has been a founder of two startups and a full life cycle, technical product manager at large companies like Fannie Mae, Microsoft and Capital One.  Follow Jocelyn on </span><a href="https://www.linkedin.com/in/jocelyn/"><span style="font-weight: 400;">LinkedIn </span></a><span style="font-weight: 400;"> or Twitter </span><a href="https://twitter.com/jocelynbyrne"><span style="font-weight: 400;">@jocelynbyrne.</span></a></p>
<p style="text-align: center;">Sponsorship inquiries: <a href="https://cms.megaphone.fm/organizations/619b680e-d813-11ea-9750-e7ecac406436/podcasts/e60108fe-e328-11ea-b2b6-1348249f900a/episodes/3913370a-bc44-11ed-ace6-8b1f96d82bba/sponsor@softwareengineeringdaily.com" target="_blank" rel="noopener noreferrer">sponsor@softwareengineeringdaily.com</a></p>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2023/06/01/cloud-native-search/">Cloud Native Search with Vinayak Borkar</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED3705057789.mp3" length="95512956" type="audio/mpeg" />
		<itunes:subtitle>Mach5 Search is a slide-in, cloud-native replacement for Elasticsearch and OpenSearch that immediately saves up to 90% in operating cost. Mach5 Search can run on top of Google BigQuery, Snowflake, and Databricks,</itunes:subtitle>
		<itunes:summary>Mach5 Search is a slide-in, cloud-native replacement for Elasticsearch and OpenSearch that immediately saves up to 90% in operating cost. Mach5 Search can run on top of Google BigQuery, Snowflake, and Databricks, or natively on Object Stores in all the major clouds. Vinayak Borkar is the CEO and Co-Founder of Mach5 Software and he joins</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>1:06:16</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">15088</post-id>	</item>
	<item>
		<title>Observability for Your Cloud Dependencies with Jeff Martens</title>
		<link>http://softwareengineeringdaily.com/2023/05/30/observability-for-your-cloud/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=observability-for-your-cloud</link>
		<pubDate>Tue, 30 May 2023 09:00:16 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=15085</guid>
		<comments>http://softwareengineeringdaily.com/2023/05/30/observability-for-your-cloud/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2023/05/30/observability-for-your-cloud/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Lee Atchison]]></category>
		<category><![CDATA[Podcast]]></category>
		<category><![CDATA[Cloud]]></category>
		<category><![CDATA[Jeff Martens]]></category>
		<category><![CDATA[Metrist]]></category>
		<category><![CDATA[observability]]></category>
		<description>&lt;p&gt;Metrist is an observability platform designed to commoditize application observability. Jeff Martens is the CEO of Metrist, and he joins us today.     This episode is hosted by Lee Atchison. Lee Atchison is a software architect, author, and thought leader on cloud computing and application modernization. His most recent book, Architecting for Scale (O’Reilly Media) is an&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2023/05/30/observability-for-your-cloud/&quot;&gt;Observability for Your Cloud Dependencies with Jeff Martens&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<p><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/05/jeff.png"><img decoding="async" loading="lazy" class="alignright size-full wp-image-15084" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/05/jeff.png?resize=218%2C258" alt="" width="218" height="258" data-recalc-dims="1" /></a><a href="https://metrist.io/">Metrist</a> is an observability platform designed to commoditize application observability. <a href="https://twitter.com/Jmartens">Jeff Martens</a><span style="font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen-Sans, Ubuntu, Cantarell, 'Helvetica Neue', sans-serif;"> is the CEO of Metrist, and he joins us today.</span></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/02/lee.jpg"><img decoding="async" loading="lazy" class="size-medium wp-image-13263 alignleft" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/02/lee-253x300.jpg?resize=253%2C300&#038;ssl=1" alt="" width="253" height="300" srcset="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/02/lee.jpg?resize=253%2C300 253w, https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/02/lee.jpg?w=268 268w" sizes="(max-width: 253px) 100vw, 253px" data-recalc-dims="1" /></a></p>
<p>This episode is hosted by Lee Atchison. Lee Atchison is a software architect, author, and thought leader on cloud computing and application modernization. His most recent book, <a href="https://leeatchison.com//ref-amzn-arch-for-scale">Architecting for Scale</a> (O’Reilly Media) is an essential resource for technical teams looking to maintain high availability and manage risk in their cloud environments.<br />
Lee is the host of his podcast, <a href="https://mdb.fm/?utm_campaign=swengdaily&amp;utm_source=mdb&amp;utm_medium=podcast">Modern Digital Business</a>, an engaging and informative podcast produced for people looking to build and grow their digital business with the help of modern applications and processes developed for today’s fast-moving business environment. Subscribe at <a href="http://mdb.fm/">mdb.fm</a>. Follow Lee, at <a href="http://leeatchison.com/">leeatchison.com</a>.</p>
<p style="text-align: center;">Sponsorship inquiries: <a href="https://cms.megaphone.fm/organizations/619b680e-d813-11ea-9750-e7ecac406436/podcasts/e60108fe-e328-11ea-b2b6-1348249f900a/episodes/3913370a-bc44-11ed-ace6-8b1f96d82bba/sponsor@softwareengineeringdaily.com" target="_blank" rel="noopener noreferrer">sponsor@softwareengineeringdaily.com</a></p>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2023/05/30/observability-for-your-cloud/">Observability for Your Cloud Dependencies with Jeff Martens</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED3948677836.mp3" length="57586070" type="audio/mpeg" />
		<itunes:subtitle>Metrist is an observability platform designed to commoditize application observability. Jeff Martens is the CEO of Metrist, and he joins us today.     This episode is hosted by Lee Atchison. Lee Atchison is a software architect, author,</itunes:subtitle>
		<itunes:summary>Metrist is an observability platform designed to commoditize application observability. Jeff Martens is the CEO of Metrist, and he joins us today.     This episode is hosted by Lee Atchison. Lee Atchison is a software architect, author, and thought leader on cloud computing and application modernization. His most recent book, Architecting for Scale (O’Reilly Media) is an</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>39:56</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">15085</post-id>	</item>
	<item>
		<title>Low-Code SQL on dbt Core with Raj Bains from Prophecy</title>
		<link>http://softwareengineeringdaily.com/2023/05/26/low-code-sql-on-dbt-core/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=low-code-sql-on-dbt-core</link>
		<pubDate>Fri, 26 May 2023 09:00:29 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=15071</guid>
		<comments>http://softwareengineeringdaily.com/2023/05/26/low-code-sql-on-dbt-core/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2023/05/26/low-code-sql-on-dbt-core/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Jocelyn Byrne Houle]]></category>
		<category><![CDATA[Podcast]]></category>
		<category><![CDATA[data pipeline]]></category>
		<category><![CDATA[low code]]></category>
		<category><![CDATA[Prophecy.io]]></category>
		<category><![CDATA[Raj Bains]]></category>
		<description>&lt;p&gt;In this podcast episode, we take a look at the intricacies of low-code data pipelines with Raj Bains, the founder of Prophecy.io. Raj shares valuable insights into how performant low-codedata pipelines are revolutionizing industries and transforming everyday operations. Raj discusses the founding story of Prophecy.io, the company’s mission, and its approach to democratizing the creation&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2023/05/26/low-code-sql-on-dbt-core/&quot;&gt;Low-Code SQL on dbt Core with Raj Bains from Prophecy&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<p><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/04/raj.png"><img decoding="async" loading="lazy" class="alignright size-full wp-image-13708" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/04/raj.png?resize=218%2C258&#038;ssl=1" alt="" width="218" height="258" data-recalc-dims="1" /></a>In this podcast episode, we take a look at the intricacies of low-code data pipelines with <a href="https://twitter.com/_raj_bains?lang=en">Raj Bains</a>, the founder of <a href="https://www.prophecy.io/">Prophecy.io</a>. Raj shares valuable insights into how performant low-codedata pipelines are revolutionizing industries and transforming everyday operations. Raj discusses the founding story of Prophecy.io, the company&#8217;s mission, and its approach to democratizing the creation of efficient data pipeline solutions visual design and code generation. We also discuss technical concepts/conundrums such as data lineage, schema evolution, and metadata management, which are critical in addressing the challenges faced by data pipeline developers and businesses. The episode concludes with Raj&#8217;s thoughts on the future of low-code data pipelines, the Prophecy.io roadmap and its potential impact on various industries, from healthcare to finance.</p>
<p>&nbsp;</p>
<p><span style="font-weight: 400;"><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/04/jocelyn.png"><img decoding="async" loading="lazy" class="size-full wp-image-14942 alignleft" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/04/jocelyn.png?resize=209%2C249&#038;ssl=1" alt="" width="209" height="249" data-recalc-dims="1" /></a>Starting her career as a software developer, Jocelyn Houle is now a Senior Director of Product Management at </span><a href="https://securiti.ai/"><span style="font-weight: 400;">Securiti.ai,</span></a><span style="font-weight: 400;"> a unified data protection and governance platform. Before that, she was an Operating Partner at </span><a href="https://growthventures.capitalone.com/"><span style="font-weight: 400;">Capital One Ventures</span></a><span style="font-weight: 400;"> investing in data and AI startups. Jocelyn has been a founder of two startups and a full life cycle, technical product manager at large companies like Fannie Mae, Microsoft and Capital One.  Follow Jocelyn on </span><a href="https://www.linkedin.com/in/jocelyn/"><span style="font-weight: 400;">LinkedIn </span></a><span style="font-weight: 400;"> or Twitter </span><a href="https://twitter.com/jocelynbyrne"><span style="font-weight: 400;">@jocelynbyrne.</span></a></p>
<p style="text-align: center;">Sponsorship inquiries: <a href="https://cms.megaphone.fm/organizations/619b680e-d813-11ea-9750-e7ecac406436/podcasts/e60108fe-e328-11ea-b2b6-1348249f900a/episodes/3913370a-bc44-11ed-ace6-8b1f96d82bba/sponsor@softwareengineeringdaily.com" target="_blank" rel="noopener noreferrer">sponsor@softwareengineeringdaily.com</a></p>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2023/05/26/low-code-sql-on-dbt-core/">Low-Code SQL on dbt Core with Raj Bains from Prophecy</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED5615818568.mp3" length="81473235" type="audio/mpeg" />
		<itunes:subtitle>In this podcast episode, we take a look at the intricacies of low-code data pipelines with Raj Bains, the founder of Prophecy.io. Raj shares valuable insights into how performant low-codedata pipelines are revolutionizing industries and transforming ev...</itunes:subtitle>
		<itunes:summary>In this podcast episode, we take a look at the intricacies of low-code data pipelines with Raj Bains, the founder of Prophecy.io. Raj shares valuable insights into how performant low-codedata pipelines are revolutionizing industries and transforming everyday operations. Raj discusses the founding story of Prophecy.io, the company’s mission, and its approach to democratizing the creation</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>56:31</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">15071</post-id>	</item>
	<item>
		<title>Cloud-native Control Planes with Bassam Tabbara</title>
		<link>http://softwareengineeringdaily.com/2023/05/24/cloud-native-control-planes/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=cloud-native-control-planes</link>
		<pubDate>Wed, 24 May 2023 09:00:18 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=15063</guid>
		<comments>http://softwareengineeringdaily.com/2023/05/24/cloud-native-control-planes/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2023/05/24/cloud-native-control-planes/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Lee Atchison]]></category>
		<category><![CDATA[Podcast]]></category>
		<category><![CDATA[Uncategorized]]></category>
		<category><![CDATA[Bassam Tabbara]]></category>
		<category><![CDATA[Cross Plane]]></category>
		<category><![CDATA[Upbound]]></category>
		<description>&lt;p&gt;Crossplane is an innovative open source control plane framework that helps companies provide managed access to cloud native control planes. Upbound provides a single global platform to build, deploy, and operate these internally managed control planes that are powered by cross plane. Bassam Tabbara is the CEO of Upbound, and he joins us today. Free&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2023/05/24/cloud-native-control-planes/&quot;&gt;Cloud-native Control Planes with Bassam Tabbara&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<p><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/05/bassam.png"><img decoding="async" loading="lazy" class="alignright size-full wp-image-15064" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/05/bassam.png?resize=218%2C258&#038;ssl=1" alt="" width="218" height="258" data-recalc-dims="1" /></a><a href="https://www.crossplane.io/">Crossplane</a> is an innovative open source control plane framework that helps companies provide managed access to cloud native control planes. <a href="https://www.upbound.io/">Upbound</a> provides a single global platform to build, deploy, and operate these internally managed control planes that are powered by cross plane.</p>
<p><a href="https://twitter.com/bassamtabbara?lang=en">Bassam Tabbara</a> is the CEO of Upbound, and he joins us today.</p>
<div>Free Upbound trial: <a href="https://www.upbound.io/register" target="_blank" rel="noopener" data-saferedirecturl="https://www.google.com/url?q=https://www.upbound.io/register&amp;source=gmail&amp;ust=1685012397146000&amp;usg=AOvVaw1qCvoLqeSeQF4gBwnk60NX">https://www.upbound.io/<wbr />register</a></div>
<div>About Crossplane: <a href="https://www.crossplane.io/" target="_blank" rel="noopener" data-saferedirecturl="https://www.google.com/url?q=https://www.crossplane.io/&amp;source=gmail&amp;ust=1685012397146000&amp;usg=AOvVaw1bTF1Ec74olIi9FmF2FSJ4">https://www.<wbr />crossplane.io/</a></div>
<div></div>
<p><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/02/lee.jpg"><img decoding="async" loading="lazy" class="size-medium wp-image-13263 alignleft" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/02/lee-253x300.jpg?resize=253%2C300&#038;ssl=1" alt="" width="253" height="300" srcset="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/02/lee.jpg?resize=253%2C300 253w, https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/02/lee.jpg?w=268 268w" sizes="(max-width: 253px) 100vw, 253px" data-recalc-dims="1" /></a></p>
<p>This episode is hosted by Lee Atchison. Lee Atchison is a software architect, author, and thought leader on cloud computing and application modernization. His most recent book, <a href="https://leeatchison.com//ref-amzn-arch-for-scale">Architecting for Scale</a> (O’Reilly Media) is an essential resource for technical teams looking to maintain high availability and manage risk in their cloud environments.<br />
Lee is the host of his podcast, <a href="https://mdb.fm/?utm_campaign=swengdaily&amp;utm_source=mdb&amp;utm_medium=podcast">Modern Digital Business</a>, an engaging and informative podcast produced for people looking to build and grow their digital business with the help of modern applications and processes developed for today’s fast-moving business environment. Subscribe at <a href="http://mdb.fm/">mdb.fm</a>. Follow Lee, at <a href="http://leeatchison.com/">leeatchison.com</a>.</p>
<p style="text-align: center;">Sponsorship inquiries: <a href="https://cms.megaphone.fm/organizations/619b680e-d813-11ea-9750-e7ecac406436/podcasts/e60108fe-e328-11ea-b2b6-1348249f900a/episodes/3913370a-bc44-11ed-ace6-8b1f96d82bba/sponsor@softwareengineeringdaily.com" target="_blank" rel="noopener noreferrer">sponsor@softwareengineeringdaily.com</a></p>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2023/05/24/cloud-native-control-planes/">Cloud-native Control Planes with Bassam Tabbara</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED6545698420.mp3" length="35838577" type="audio/mpeg" />
		<itunes:subtitle>Crossplane is an innovative open source control plane framework that helps companies provide managed access to cloud native control planes. Upbound provides a single global platform to build, deploy, and operate these internally managed control planes ...</itunes:subtitle>
		<itunes:summary>Crossplane is an innovative open source control plane framework that helps companies provide managed access to cloud native control planes. Upbound provides a single global platform to build, deploy, and operate these internally managed control planes that are powered by cross plane. Bassam Tabbara is the CEO of Upbound, and he joins us today. Free</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>24:49</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">15063</post-id>	</item>
	<item>
		<title>PromptOps with Dev Nag</title>
		<link>http://softwareengineeringdaily.com/2023/05/23/promptops-with-dev-nag/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=promptops-with-dev-nag</link>
		<pubDate>Tue, 23 May 2023 09:00:20 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=15057</guid>
		<comments>http://softwareengineeringdaily.com/2023/05/23/promptops-with-dev-nag/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2023/05/23/promptops-with-dev-nag/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Lee Atchison]]></category>
		<category><![CDATA[Podcast]]></category>
		<category><![CDATA[Uncategorized]]></category>
		<category><![CDATA[Dev Nag]]></category>
		<category><![CDATA[DevOps]]></category>
		<category><![CDATA[PromptOps]]></category>
		<description>&lt;p&gt;When your application fails, finding the reason quickly is essential for limiting downtime. Often, most of the time it takes to repair a problem is taken by figuring out what exactly went wrong. PromptOps is a service designed to make tracing the answer to why something happened back to the original cause. Dev Nag is&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2023/05/23/promptops-with-dev-nag/&quot;&gt;PromptOps with Dev Nag&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<p><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/05/dev_nag.png"><img decoding="async" loading="lazy" class="alignright size-full wp-image-15058" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/05/dev_nag.png?resize=218%2C258" alt="" width="218" height="258" data-recalc-dims="1" /></a>When your application fails, finding the reason quickly is essential for limiting downtime. Often, most of the time it takes to repair a problem is taken by figuring out what exactly went wrong. <a href="https://promptops.com/">PromptOps</a> is a service designed to make tracing the answer to why something happened back to the original cause.</p>
<p><a href="https://twitter.com/devnag?lang=en">Dev Nag</a> is the CEO of PromptOps, and he joins us today.</p>
<p><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/02/lee.jpg"><img decoding="async" loading="lazy" class="size-medium wp-image-13263 alignleft" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/02/lee-253x300.jpg?resize=253%2C300&#038;ssl=1" alt="" width="253" height="300" srcset="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/02/lee.jpg?resize=253%2C300 253w, https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/02/lee.jpg?w=268 268w" sizes="(max-width: 253px) 100vw, 253px" data-recalc-dims="1" /></a>This episode is hosted by Lee Atchison. Lee Atchison is a software architect, author, and thought leader on cloud computing and application modernization. His most recent book, <a href="https://leeatchison.com//ref-amzn-arch-for-scale">Architecting for Scale</a> (O’Reilly Media) is an essential resource for technical teams looking to maintain high availability and manage risk in their cloud environments.<br />
Lee is the host of his podcast, <a href="https://mdb.fm/?utm_campaign=swengdaily&amp;utm_source=mdb&amp;utm_medium=podcast">Modern Digital Business</a>, an engaging and informative podcast produced for people looking to build and grow their digital business with the help of modern applications and processes developed for today’s fast-moving business environment. Subscribe at <a href="http://mdb.fm/">mdb.fm</a>. Follow Lee, at <a href="http://leeatchison.com/">leeatchison.com</a>.</p>
<p style="text-align: center;">Sponsorship inquiries: <a href="https://cms.megaphone.fm/organizations/619b680e-d813-11ea-9750-e7ecac406436/podcasts/e60108fe-e328-11ea-b2b6-1348249f900a/episodes/3913370a-bc44-11ed-ace6-8b1f96d82bba/sponsor@softwareengineeringdaily.com" target="_blank" rel="noopener noreferrer">sponsor@softwareengineeringdaily.com</a></p>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2023/05/23/promptops-with-dev-nag/">PromptOps with Dev Nag</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED8859215917.mp3" length="37565488" type="audio/mpeg" />
		<itunes:subtitle>When your application fails, finding the reason quickly is essential for limiting downtime. Often, most of the time it takes to repair a problem is taken by figuring out what exactly went wrong. PromptOps is a service designed to make tracing the answe...</itunes:subtitle>
		<itunes:summary>When your application fails, finding the reason quickly is essential for limiting downtime. Often, most of the time it takes to repair a problem is taken by figuring out what exactly went wrong. PromptOps is a service designed to make tracing the answer to why something happened back to the original cause. Dev Nag is</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>26:01</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">15057</post-id>	</item>
	<item>
		<title>Shift Conference with Ivan Burazin</title>
		<link>http://softwareengineeringdaily.com/2023/05/19/shift-conference-with-ivan-burazin/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=shift-conference-with-ivan-burazin</link>
		<pubDate>Fri, 19 May 2023 09:00:38 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=15048</guid>
		<comments>http://softwareengineeringdaily.com/2023/05/19/shift-conference-with-ivan-burazin/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2023/05/19/shift-conference-with-ivan-burazin/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Podcast]]></category>
		<category><![CDATA[Sean Falconer]]></category>
		<category><![CDATA[Uncategorized]]></category>
		<category><![CDATA[Codeanywhere]]></category>
		<category><![CDATA[Infobip]]></category>
		<category><![CDATA[Ivan Burazin]]></category>
		<category><![CDATA[Shift Conference]]></category>
		<description>&lt;p&gt;In the Software Industry, Conferences are crucial for developers, offering learning, networking, and collaboration opportunities. Attendees stay updated on the latest technologies, gain new skills, and connect with peers. These events expose developers to industry trends, inspire innovation, and foster professional growth. Overall, Conferences play a vital role in advancing knowledge, building connections, and driving&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2023/05/19/shift-conference-with-ivan-burazin/&quot;&gt;Shift Conference with Ivan Burazin&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<p><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/05/ivan.png"><img decoding="async" loading="lazy" class="alignright size-full wp-image-15049" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/05/ivan.png?resize=218%2C258&#038;ssl=1" alt="" width="218" height="258" data-recalc-dims="1" /></a>In the Software Industry, Conferences are crucial for developers, offering learning, networking, and collaboration opportunities. Attendees stay updated on the latest technologies, gain new skills, and connect with peers. These events expose developers to industry trends, inspire innovation, and foster professional growth. Overall, Conferences play a vital role in advancing knowledge, building connections, and driving success in the developer community.<br />
In this episode, we discuss what makes a great Conference and how <a href="https://shift.infobip.com/">Shift Conference</a> became of the largest events in Europe.<br />
<a href="https://twitter.com/ivanburazin?lang=en">Ivan Burazin</a> is the Chief Developer Experience Officer at<a href="https://www.infobip.com/"> Infobip</a> and the CEO of <a href="https://codeanywhere.com/">Codeanywhere</a>, and he joins us today.</p>
<p>Get your Tickets for <a href="https://shift.infobip.com/us/">Shift Miami</a> on May 23rd and <a href="https://shift.infobip.com/">Shift Croatia</a>, which is later this year.</p>
<p><span style="font-weight: 400;"><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/05/Sean-Falconer.png"><img decoding="async" loading="lazy" class="size-full wp-image-13856 alignleft" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/05/Sean-Falconer.png?resize=218%2C258&#038;ssl=1" alt="" width="218" height="258" data-recalc-dims="1" /></a>Sean&#8217;s been an academic, startup founder, and Googler. He has published works covering a wide range of topics from information visualization to quantum computing. Currently, Sean is Head of Marketing and Developer Relations at <a href="https://www.skyflow.com/">Skyflow</a> and host of the podcast Partially Redacted, a podcast about privacy and security engineering. You can connect with Sean on Twitter <a href="https://twitter.com/seanfalconer">@seanfalconer .</a></span></p>
<p>&nbsp;</p>
<p style="text-align: center;">Sponsorship inquiries: <a href="https://cms.megaphone.fm/organizations/619b680e-d813-11ea-9750-e7ecac406436/podcasts/e60108fe-e328-11ea-b2b6-1348249f900a/episodes/3913370a-bc44-11ed-ace6-8b1f96d82bba/sponsor@softwareengineeringdaily.com" target="_blank" rel="noopener noreferrer">sponsor@softwareengineeringdaily.com</a></p>
<p dir="ltr" style="text-align: center;">
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2023/05/19/shift-conference-with-ivan-burazin/">Shift Conference with Ivan Burazin</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED9105297961.mp3" length="74609565" type="audio/mpeg" />
		<itunes:subtitle>In the Software Industry, Conferences are crucial for developers, offering learning, networking, and collaboration opportunities. Attendees stay updated on the latest technologies, gain new skills, and connect with peers.</itunes:subtitle>
		<itunes:summary>In the Software Industry, Conferences are crucial for developers, offering learning, networking, and collaboration opportunities. Attendees stay updated on the latest technologies, gain new skills, and connect with peers. These events expose developers to industry trends, inspire innovation, and foster professional growth. Overall, Conferences play a vital role in advancing knowledge, building connections, and driving</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>51:45</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">15048</post-id>	</item>
	<item>
		<title>Software Supply Chain with Feross Aboukhadijeh</title>
		<link>http://softwareengineeringdaily.com/2023/05/16/software-supplychain/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=software-supplychain</link>
		<pubDate>Tue, 16 May 2023 09:00:40 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=15035</guid>
		<comments>http://softwareengineeringdaily.com/2023/05/16/software-supplychain/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2023/05/16/software-supplychain/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Jordi Mon Companys]]></category>
		<category><![CDATA[Podcast]]></category>
		<category><![CDATA[Uncategorized]]></category>
		<category><![CDATA[Feross Aboukhadijeh]]></category>
		<category><![CDATA[Security]]></category>
		<category><![CDATA[Socket]]></category>
		<category><![CDATA[Software Supply Chain]]></category>
		<description>&lt;p&gt;The software supply chain refers to the process of creating and distributing software products. This includes all of the steps involved in creating, testing, packaging, and delivering software to end-users or customers. Socket is a new security company that can protect your most critical apps from supply chain attacks. They are taking an entirely new&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2023/05/16/software-supplychain/&quot;&gt;Software Supply Chain with Feross Aboukhadijeh&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<p><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/04/Ferross-Aboukhadijeh.png"><img decoding="async" loading="lazy" class="alignright size-full wp-image-13752" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/04/Ferross-Aboukhadijeh.png?resize=218%2C258" alt="" width="218" height="258" data-recalc-dims="1" /></a>The software supply chain refers to the process of creating and distributing software products. This includes all of the steps involved in creating, testing, packaging, and delivering software to end-users or customers.</p>
<p><a href="https://socket.dev/">Socket</a> is a new security company that can protect your most critical apps from supply chain attacks. They are taking an entirely new approach to one of the hardest problems in security in a stagnant part of the industry that has historically been obsessed with just reporting on known vulnerabilities.</p>
<p><a href="https://twitter.com/feross?lang=en">Feross</a> is the Founder and CEO of Socket Security, and he joins us today.</p>
<div dir="ltr">
<div>This Interview was recorded at <a href="https://streaklinks.com/Bg_PFnT7O79B3JCRLgNDYkWv/https%3A%2F%2Fevents.linuxfoundation.org%2Fopen-source-summit-north-america%2F" target="_blank" rel="noopener" data-saferedirecturl="https://www.google.com/url?q=https://streaklinks.com/Bg_PFnT7O79B3JCRLgNDYkWv/https%253A%252F%252Fevents.linuxfoundation.org%252Fopen-source-summit-north-america%252F&amp;source=gmail&amp;ust=1684828419418000&amp;usg=AOvVaw0b5w1_wDC_OeXyLXD_nqzJ">Open Source Summit North America</a> and wouldn&#8217;t have been possible without the generous support from</div>
<div><a href="https://www.linuxfoundation.org/">The Linux Foundation</a>.</div>
</div>
<div><img decoding="async" class="CToWUd" src="https://ci3.googleusercontent.com/proxy/iUbasK9C6rQcDna8d_UhpVDMxhu2_NNKH6tmIdyKGbhqtd8Kwss74wfyQ7oA5mRQIuqBMz_tZkpQjNFCMKNv62Ip0ORPXSOuTdn_go-vPCduXapr_Qn8HQLMAFUqOxckjyY_AT5M9fIBQ8z6fXWsJCE31XMY24fH7LkrIzX28boJaHHEYCL8Q6hU2Emt2uJGPGDUmi3AmzlTNwwVSNDnv_WGksCF_wy5R634dg=s0-d-e1-ft#https://mailfoogae.appspot.com/t?sender=aYW5rdXJAc29mdHdhcmVlbmdpbmVlcmluZ2RhaWx5LmNvbQ%3D%3D&amp;type=zerocontent&amp;guid=ce6739e4-1e0e-4b69-8fde-85c4b8010254" alt="" data-bit="iit" /><span style="color: #ffffff; font-size: xx-small;">ᐧ</span></div>
<p>&nbsp;</p>
<p><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/03/jordi.png"><img decoding="async" loading="lazy" class="size-full wp-image-14908 alignleft" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/03/jordi.png?resize=218%2C258&#038;ssl=1" alt="" width="218" height="258" data-recalc-dims="1" /></a><a href="https://www.linkedin.com/in/jordimoncompanys/"><span style="font-weight: 400;">Jordi Mon Companys</span></a><span style="font-weight: 400;"> is a product manager and marketer that specializes in software delivery, developer experience, cloud native and open source. He has developed his career at companies like GitLab, Weaveworks, Harness and other platform and devtool providers. His interests range from software supply chain security to open source innovation. You can reach out to him on Twitter at </span><a href="https://twitter.com/JordiMonPMM"><span style="font-weight: 400;">@jordimonpmm</span></a></p>
<div>
<p style="text-align: center;">Sponsorship inquiries: <a href="https://cms.megaphone.fm/organizations/619b680e-d813-11ea-9750-e7ecac406436/podcasts/e60108fe-e328-11ea-b2b6-1348249f900a/episodes/3913370a-bc44-11ed-ace6-8b1f96d82bba/sponsor@softwareengineeringdaily.com" target="_blank" rel="noopener noreferrer">sponsor@softwareengineeringdaily.com</a></p>
</div>
<div class="module-message__metadata module-message__metadata--inline"></div>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2023/05/16/software-supplychain/">Software Supply Chain with Feross Aboukhadijeh</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED1097557986.mp3" length="63824626" type="audio/mpeg" />
		<itunes:subtitle>The software supply chain refers to the process of creating and distributing software products. This includes all of the steps involved in creating, testing, packaging, and delivering software to end-users or customers.</itunes:subtitle>
		<itunes:summary>The software supply chain refers to the process of creating and distributing software products. This includes all of the steps involved in creating, testing, packaging, and delivering software to end-users or customers. Socket is a new security company that can protect your most critical apps from supply chain attacks. They are taking an entirely new</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>44:16</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">15035</post-id>	</item>
	<item>
		<title>Chaos Engineering with Uma Mukkara</title>
		<link>http://softwareengineeringdaily.com/2023/05/15/chaos-engineering/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=chaos-engineering</link>
		<pubDate>Mon, 15 May 2023 13:00:14 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=15031</guid>
		<comments>http://softwareengineeringdaily.com/2023/05/15/chaos-engineering/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2023/05/15/chaos-engineering/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Jordi Mon Companys]]></category>
		<category><![CDATA[Podcast]]></category>
		<category><![CDATA[chaos engineering]]></category>
		<category><![CDATA[Harness]]></category>
		<category><![CDATA[KubeCon]]></category>
		<category><![CDATA[Uma Mukkara]]></category>
		<description>&lt;p&gt;Chaos engineering is a discipline within the field of software engineering that focuses on testing and improving the resilience and stability of a system by intentionally introducing controlled instances of chaos and failure. The primary goal of chaos engineering is to identify and address potential weaknesses and vulnerabilities in a system, ultimately making it more&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2023/05/15/chaos-engineering/&quot;&gt;Chaos Engineering with Uma Mukkara&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<p><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/05/uma.png"><img decoding="async" loading="lazy" class="alignright size-full wp-image-15030" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/05/uma.png?resize=218%2C258" alt="" width="218" height="258" data-recalc-dims="1" /></a>Chaos engineering is a discipline within the field of software engineering that focuses on testing and improving the resilience and stability of a system by intentionally introducing controlled instances of chaos and failure. The primary goal of chaos engineering is to identify and address potential weaknesses and vulnerabilities in a system, ultimately making it more robust and reliable.<br />
<a href="https://twitter.com/Uma_Mukkara?ref_src=twsrc%5Egoogle%7Ctwcamp%5Eserp%7Ctwgr%5Eauthor">Uma Mukkara</a> is the Head of Chaos Engineering at <a href="https://www.harness.io/">Harness</a> and he joins us today.</p>
<p>This Interview was recorded at <a href="https://streaklinks.com/Bg_PFnbkpFTSagwvgwYbEPZW/https%3A%2F%2Fevents.linuxfoundation.org%2Fkubecon-cloudnativecon-europe%2F" target="_blank" rel="noopener" data-saferedirecturl="https://www.google.com/url?q=https://streaklinks.com/Bg_PFnbkpFTSagwvgwYbEPZW/https%253A%252F%252Fevents.linuxfoundation.org%252Fkubecon-cloudnativecon-europe%252F&amp;source=gmail&amp;ust=1684828419418000&amp;usg=AOvVaw2T8rqB8Fv4Wc3alTv09hEE">KubeCon Europe</a> and wouldn&#8217;t have been possible without the generous support from <a href="https://www.linuxfoundation.org/">The Linux Foundation.</a></p>
<div>
<p style="text-align: left;"><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/03/jordi.png"><img decoding="async" loading="lazy" class="size-full wp-image-14908 alignleft" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/03/jordi.png?resize=218%2C258&#038;ssl=1" alt="" width="218" height="258" data-recalc-dims="1" /></a><a href="https://www.linkedin.com/in/jordimoncompanys/"><span style="font-weight: 400;">Jordi Mon Companys</span></a><span style="font-weight: 400;"> is a product manager and marketer that specializes in software delivery, developer experience, cloud native and open source. He has developed his career at companies like GitLab, Weaveworks, Harness and other platform and devtool providers. His interests range from software supply chain security to open source innovation. You can reach out to him on Twitter at </span><a href="https://twitter.com/JordiMonPMM"><span style="font-weight: 400;">@jordimonpmm</span></a></p>
<p style="text-align: center;">Sponsorship inquiries: <a href="https://cms.megaphone.fm/organizations/619b680e-d813-11ea-9750-e7ecac406436/podcasts/e60108fe-e328-11ea-b2b6-1348249f900a/episodes/3913370a-bc44-11ed-ace6-8b1f96d82bba/sponsor@softwareengineeringdaily.com" target="_blank" rel="noopener noreferrer">sponsor@softwareengineeringdaily.com</a></p>
</div>
<div class="module-message__metadata module-message__metadata--inline"></div>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2023/05/15/chaos-engineering/">Chaos Engineering with Uma Mukkara</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED3760478099.mp3" length="60225825" type="audio/mpeg" />
		<itunes:subtitle>Chaos engineering is a discipline within the field of software engineering that focuses on testing and improving the resilience and stability of a system by intentionally introducing controlled instances of chaos and failure.</itunes:subtitle>
		<itunes:summary>Chaos engineering is a discipline within the field of software engineering that focuses on testing and improving the resilience and stability of a system by intentionally introducing controlled instances of chaos and failure. The primary goal of chaos engineering is to identify and address potential weaknesses and vulnerabilities in a system, ultimately making it more</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>41:46</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">15031</post-id>	</item>
	<item>
		<title>CAP Theorem 23 Years Later with Eric Brewer</title>
		<link>http://softwareengineeringdaily.com/2023/05/12/cap-theorem-23-years-later/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=cap-theorem-23-years-later</link>
		<pubDate>Fri, 12 May 2023 08:00:03 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=15024</guid>
		<comments>http://softwareengineeringdaily.com/2023/05/12/cap-theorem-23-years-later/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2023/05/12/cap-theorem-23-years-later/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Jordi Mon Companys]]></category>
		<category><![CDATA[Podcast]]></category>
		<category><![CDATA[CAP theorem]]></category>
		<category><![CDATA[Eric Brewer]]></category>
		<description>&lt;p&gt;The CAP theorem, also known as Brewer’s theorem, is a fundamental principle in distributed systems that states that it is impossible to simultaneously achieve three desirable properties in a distributed data system: Consistency, Availability, and Partition tolerance. Eric Brewer is the VP of Infrastructure &amp; Google Fellow at Google and he joins us today. This&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2023/05/12/cap-theorem-23-years-later/&quot;&gt;CAP Theorem 23 Years Later with Eric Brewer&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<div class="module-message__container-outer">
<div id="message-accessibility-contents:9651141b-6913-41bd-907b-be19fcbf127a" class="module-message__container module-message__container--incoming" tabindex="-1" role="row">
<div dir="ltr">
<div class="module-message__text module-message__text--incoming" style="text-align: left;"><span class=""><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/05/eric.png"><img decoding="async" loading="lazy" class="alignright size-full wp-image-15025" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/05/eric.png?resize=218%2C258&#038;ssl=1" alt="" width="218" height="258" data-recalc-dims="1" /></a>The CAP theorem, also known as Brewer&#8217;s theorem, is a fundamental principle in distributed systems that states that it is impossible to simultaneously achieve three desirable properties in a distributed data system: Consistency, Availability, and Partition tolerance.</span></div>
</div>
</div>
<div style="text-align: left;"></div>
<div>
<div class="module-message__container-outer">
<div id="message-accessibility-contents:df0b12a7-2d5a-4736-9bcb-19238ac12594" class="module-message__container module-message__container--incoming" tabindex="-1" role="row">
<div dir="ltr">
<div class="module-message__text module-message__text--incoming" style="text-align: left;"><span class=""><a href="https://twitter.com/eric_brewer?lang=en">Eric Brewer</a> is the VP of Infrastructure &amp; Google Fellow at Google and he joins us today.</span></div>
</div>
</div>
</div>
</div>
</div>
<div></div>
<div>
<div dir="ltr">
<div>
<div>This Interview was recorded at <a href="https://streaklinks.com/Bg_PFnT7O79B3JCRLgNDYkWv/https%3A%2F%2Fevents.linuxfoundation.org%2Fopen-source-summit-north-america%2F" target="_blank" rel="noopener" data-saferedirecturl="https://www.google.com/url?q=https://streaklinks.com/Bg_PFnT7O79B3JCRLgNDYkWv/https%253A%252F%252Fevents.linuxfoundation.org%252Fopen-source-summit-north-america%252F&amp;source=gmail&amp;ust=1684828419418000&amp;usg=AOvVaw0b5w1_wDC_OeXyLXD_nqzJ">Open Source Summit North America</a> and wouldn&#8217;t have been possible without the generous support from</div>
<div><a href="https://www.linuxfoundation.org/">The Linux Foundation</a>.</div>
</div>
<div></div>
</div>
<div><img decoding="async" class="CToWUd" src="https://ci3.googleusercontent.com/proxy/iUbasK9C6rQcDna8d_UhpVDMxhu2_NNKH6tmIdyKGbhqtd8Kwss74wfyQ7oA5mRQIuqBMz_tZkpQjNFCMKNv62Ip0ORPXSOuTdn_go-vPCduXapr_Qn8HQLMAFUqOxckjyY_AT5M9fIBQ8z6fXWsJCE31XMY24fH7LkrIzX28boJaHHEYCL8Q6hU2Emt2uJGPGDUmi3AmzlTNwwVSNDnv_WGksCF_wy5R634dg=s0-d-e1-ft#https://mailfoogae.appspot.com/t?sender=aYW5rdXJAc29mdHdhcmVlbmdpbmVlcmluZ2RhaWx5LmNvbQ%3D%3D&amp;type=zerocontent&amp;guid=ce6739e4-1e0e-4b69-8fde-85c4b8010254" alt="" data-bit="iit" /><span style="color: #ffffff; font-size: xx-small;">ᐧ    </span></div>
</div>
<div class="module-message__buttons module-message__buttons--incoming">
<div class="module-message__metadata module-message__metadata--inline" style="text-align: center;">
<div>
<p style="text-align: left;"><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/03/jordi.png"><img decoding="async" loading="lazy" class="size-full wp-image-14908 alignleft" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/03/jordi.png?resize=218%2C258&#038;ssl=1" alt="" width="218" height="258" data-recalc-dims="1" /></a><a href="https://www.linkedin.com/in/jordimoncompanys/"><span style="font-weight: 400;">Jordi Mon Companys</span></a><span style="font-weight: 400;"> is a product manager and marketer that specializes in software delivery, developer experience, cloud native and open source. He has developed his career at companies like GitLab, Weaveworks, Harness and other platform and devtool providers. His interests range from software supply chain security to open source innovation. You can reach out to him on Twitter at </span><a href="https://twitter.com/JordiMonPMM"><span style="font-weight: 400;">@jordimonpmm</span></a></p>
<p style="text-align: center;">Sponsorship inquiries: <a href="https://cms.megaphone.fm/organizations/619b680e-d813-11ea-9750-e7ecac406436/podcasts/e60108fe-e328-11ea-b2b6-1348249f900a/episodes/3913370a-bc44-11ed-ace6-8b1f96d82bba/sponsor@softwareengineeringdaily.com" target="_blank" rel="noopener noreferrer">sponsor@softwareengineeringdaily.com</a></p>
</div>
<div class="module-message__metadata module-message__metadata--inline"></div>
</div>
<div></div>
</div>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2023/05/12/cap-theorem-23-years-later/">CAP Theorem 23 Years Later with Eric Brewer</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED1469576173.mp3" length="70348564" type="audio/mpeg" />
		<itunes:subtitle>The CAP theorem, also known as Brewer’s theorem, is a fundamental principle in distributed systems that states that it is impossible to simultaneously achieve three desirable properties in a distributed data system: Consistency, Availability,</itunes:subtitle>
		<itunes:summary>The CAP theorem, also known as Brewer’s theorem, is a fundamental principle in distributed systems that states that it is impossible to simultaneously achieve three desirable properties in a distributed data system: Consistency, Availability, and Partition tolerance. Eric Brewer is the VP of Infrastructure &amp; Google Fellow at Google and he joins us today. This</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>48:47</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">15024</post-id>	</item>
	<item>
		<title>Early Stage Venture Capital with Astasia Myers</title>
		<link>http://softwareengineeringdaily.com/2023/05/11/early-stage-venture-capital/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=early-stage-venture-capital</link>
		<pubDate>Thu, 11 May 2023 09:00:45 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=15020</guid>
		<comments>http://softwareengineeringdaily.com/2023/05/11/early-stage-venture-capital/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2023/05/11/early-stage-venture-capital/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Podcast]]></category>
		<category><![CDATA[Sean Falconer]]></category>
		<category><![CDATA[Quiet Capital]]></category>
		<category><![CDATA[Venture Capital]]></category>
		<description>&lt;p&gt;Astasia is a Partner on Quiet Capital’s enterprise team. Prior to joining Quiet, she was an investor on Redpoint Venture’s early stage enterprise team. Astasia joins the show to talk about Early Stage Venture Capital. Sean’s been an academic, startup founder, and Googler. He has published works covering a wide range of topics from information&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2023/05/11/early-stage-venture-capital/&quot;&gt;Early Stage Venture Capital with Astasia Myers&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<div class="module-message__container-outer">
<div id="message-accessibility-contents:38e9d162-83ba-44e3-a58c-a74d4f108c86" class="module-message__container module-message__container--incoming" tabindex="-1" role="row">
<div dir="ltr">
<div class="module-message__text module-message__text--incoming"><span class=""><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/05/astasia.png"><img decoding="async" loading="lazy" class="alignright size-full wp-image-15021" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/05/astasia.png?resize=218%2C258" alt="" width="218" height="258" data-recalc-dims="1" /></a><a href="https://twitter.com/AstasiaMyers?ref_src=twsrc%5Egoogle%7Ctwcamp%5Eserp%7Ctwgr%5Eauthor">Astasia</a> is a Partner on <a href="https://www.quiet.com/">Quiet Capital’s</a> enterprise team. Prior to joining Quiet, she was an investor on Redpoint Venture’s early stage enterprise team. Astasia joins the show to talk about Early Stage Venture Capital.</span></div>
<div></div>
<div></div>
<div></div>
<div><span style="font-weight: 400;">Sean&#8217;s been an academic, startup founder, and Googler. He has published works covering a wide range of topics from information visualization to quantum computing. Currently, Sean is Head of Marketing and Developer Relations at Skyflow and host of the podcast Partially Redacted, a podcast about privacy and security engineering. You can connect with Sean on Twitter </span><a href="https://twitter.com/seanfalconer"><span style="font-weight: 400;">@seanfalconer</span></a><span style="font-weight: 400;">.</span><b><br />
</b></div>
<div></div>
<div class="module-message__metadata module-message__metadata--inline" style="text-align: center;">Sponsorship inquiries: <a href="https://cms.megaphone.fm/organizations/619b680e-d813-11ea-9750-e7ecac406436/podcasts/e60108fe-e328-11ea-b2b6-1348249f900a/episodes/3913370a-bc44-11ed-ace6-8b1f96d82bba/sponsor@softwareengineeringdaily.com" target="_blank" rel="noopener noreferrer">sponsor@softwareengineeringdaily.com</a></div>
<div></div>
</div>
</div>
</div>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2023/05/11/early-stage-venture-capital/">Early Stage Venture Capital with Astasia Myers</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED9308538049.mp3" length="76519698" type="audio/mpeg" />
		<itunes:subtitle>Astasia is a Partner on Quiet Capital’s enterprise team. Prior to joining Quiet, she was an investor on Redpoint Venture’s early stage enterprise team. Astasia joins the show to talk about Early Stage Venture Capital. Sean’s been an academic,</itunes:subtitle>
		<itunes:summary>Astasia is a Partner on Quiet Capital’s enterprise team. Prior to joining Quiet, she was an investor on Redpoint Venture’s early stage enterprise team. Astasia joins the show to talk about Early Stage Venture Capital. Sean’s been an academic, startup founder, and Googler. He has published works covering a wide range of topics from information</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>53:04</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">15020</post-id>	</item>
	<item>
		<title>Kubernetes Security with Ian Coldwater</title>
		<link>http://softwareengineeringdaily.com/2023/05/08/kubernetes-security/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=kubernetes-security</link>
		<pubDate>Mon, 08 May 2023 09:00:02 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=15015</guid>
		<comments>http://softwareengineeringdaily.com/2023/05/08/kubernetes-security/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2023/05/08/kubernetes-security/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Jordi Mon Companys]]></category>
		<category><![CDATA[Podcast]]></category>
		<description>&lt;p&gt;Ian Coldwater is a DevSecOps engineer turned red teamer who specializes in breaking and hardening Kubernetes, containers, and cloud native infrastructure. In their spare time, they like to go on cross-country road trips, capture flags, and eat a lot of pie. Ian lives in Minneapolis and tweets as @IanColdwater. This Interview was recorded at KubeCon Europe and&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2023/05/08/kubernetes-security/&quot;&gt;Kubernetes Security with Ian Coldwater&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<div class="section-content-wrapper">
<div class="section-content">
<div><span class="description"><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/05/ian.png"><img decoding="async" loading="lazy" class="alignright size-full wp-image-15016" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/05/ian.png?resize=218%2C258" alt="" width="218" height="258" data-recalc-dims="1" /></a>Ian Coldwater is a DevSecOps engineer turned red teamer who specializes in breaking and hardening Kubernetes, containers, and cloud native infrastructure. In their spare time, they like to go on cross-country road trips, capture flags, and eat a lot of pie. Ian lives in Minneapolis and tweets as <a href="https://twitter.com/IanColdwater?ref_src=twsrc%5Egoogle%7Ctwcamp%5Eserp%7Ctwgr%5Eauthor">@IanColdwater</a>.</span></div>
</div>
</div>
<div></div>
<div>This Interview was recorded at <a href="https://streaklinks.com/Bg_PFnbkpFTSagwvgwYbEPZW/https%3A%2F%2Fevents.linuxfoundation.org%2Fkubecon-cloudnativecon-europe%2F" target="_blank" rel="noopener" data-saferedirecturl="https://www.google.com/url?q=https://streaklinks.com/Bg_PFnbkpFTSagwvgwYbEPZW/https%253A%252F%252Fevents.linuxfoundation.org%252Fkubecon-cloudnativecon-europe%252F&amp;source=gmail&amp;ust=1684828419418000&amp;usg=AOvVaw2T8rqB8Fv4Wc3alTv09hEE">KubeCon Europe</a> and wouldn&#8217;t have been possible without the generous support from <a href="https://www.linuxfoundation.org/">The Linux Foundation</a>.</div>
<div></div>
<div class="section-title-wrapper"></div>
<div>
<div>
<p style="text-align: center;">Sponsorship inquiries: <a href="https://cms.megaphone.fm/organizations/619b680e-d813-11ea-9750-e7ecac406436/podcasts/e60108fe-e328-11ea-b2b6-1348249f900a/episodes/3913370a-bc44-11ed-ace6-8b1f96d82bba/sponsor@softwareengineeringdaily.com" target="_blank" rel="noopener noreferrer">sponsor@softwareengineeringdaily.com</a></p>
</div>
<div class="module-message__metadata module-message__metadata--inline"></div>
</div>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2023/05/08/kubernetes-security/">Kubernetes Security with Ian Coldwater</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED5560800031.mp3" length="54734674" type="audio/mpeg" />
		<itunes:subtitle>Ian Coldwater is a DevSecOps engineer turned red teamer who specializes in breaking and hardening Kubernetes, containers, and cloud native infrastructure. In their spare time, they like to go on cross-country road trips, capture flags,</itunes:subtitle>
		<itunes:summary>Ian Coldwater is a DevSecOps engineer turned red teamer who specializes in breaking and hardening Kubernetes, containers, and cloud native infrastructure. In their spare time, they like to go on cross-country road trips, capture flags, and eat a lot of pie. Ian lives in Minneapolis and tweets as @IanColdwater. This Interview was recorded at KubeCon Europe and</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>37:57</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">15015</post-id>	</item>
	<item>
		<title>Cloud Native in 2023 with Chris Aniszczyk</title>
		<link>http://softwareengineeringdaily.com/2023/05/04/cloud-native-in-2023/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=cloud-native-in-2023</link>
		<pubDate>Thu, 04 May 2023 21:00:56 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=15009</guid>
		<comments>http://softwareengineeringdaily.com/2023/05/04/cloud-native-in-2023/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2023/05/04/cloud-native-in-2023/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Jordi Mon Companys]]></category>
		<category><![CDATA[Podcast]]></category>
		<category><![CDATA[Uncategorized]]></category>
		<category><![CDATA[Chris Aniszczyk]]></category>
		<category><![CDATA[cloud native]]></category>
		<category><![CDATA[CNCF]]></category>
		<category><![CDATA[KubeCon]]></category>
		<description>&lt;p&gt;Cloud native technologies empower organizations to build and run scalable applications in modern, dynamic environments such as public, private, and hybrid clouds. Containers, service meshes, microservices, immutable infrastructure, and declarative APIs exemplify this approach. These techniques enable loosely coupled systems that are resilient, manageable, and observable. Combined with robust automation, they allow engineers to make&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2023/05/04/cloud-native-in-2023/&quot;&gt;Cloud Native in 2023 with Chris Aniszczyk&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<p><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/05/chris.png"><img decoding="async" loading="lazy" class="alignright size-full wp-image-15010" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/05/chris.png?resize=218%2C258" alt="" width="218" height="258" data-recalc-dims="1" /></a>Cloud native technologies empower organizations to build and run scalable applications in modern, dynamic environments such as public, private, and hybrid clouds. Containers, service meshes, microservices, immutable infrastructure, and declarative APIs exemplify this approach.</p>
<p>These techniques enable loosely coupled systems that are resilient, manageable, and observable. Combined with robust automation, they allow engineers to make high-impact changes frequently and predictably with minimal toil.</p>
<div class="module-message__container-outer">
<div class="module-message__container module-message__container--incoming" tabindex="-1" role="row">
<div class="module-message__text module-message__text--incoming"><span class=""><a href="https://twitter.com/cra">Chris Aniszczyk</a> is the CTO at <a href="https://www.cncf.io/">Cloud Native Computing Foundation</a> and he joins us today.</span></div>
</div>
</div>
<div></div>
<div>This Interview was recorded at <a href="https://streaklinks.com/Bg_PFnbkpFTSagwvgwYbEPZW/https%3A%2F%2Fevents.linuxfoundation.org%2Fkubecon-cloudnativecon-europe%2F" target="_blank" rel="noopener" data-saferedirecturl="https://www.google.com/url?q=https://streaklinks.com/Bg_PFnbkpFTSagwvgwYbEPZW/https%253A%252F%252Fevents.linuxfoundation.org%252Fkubecon-cloudnativecon-europe%252F&amp;source=gmail&amp;ust=1684828419418000&amp;usg=AOvVaw2T8rqB8Fv4Wc3alTv09hEE">KubeCon Europe</a> and wouldn&#8217;t have been possible without the generous support from <a href="https://www.linuxfoundation.org/">The Linux Foundation</a>.</div>
<div class="module-message__container-outer">
<div class="module-message__container module-message__container--incoming" tabindex="-1" role="row">
<div>
<p><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/03/jordi.png"><img decoding="async" loading="lazy" class="size-full wp-image-14908 alignleft" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/03/jordi.png?resize=218%2C258&#038;ssl=1" alt="" width="218" height="258" data-recalc-dims="1" /></a><a href="https://www.linkedin.com/in/jordimoncompanys/"><span style="font-weight: 400;">Jordi Mon Companys</span></a><span style="font-weight: 400;"> is a product manager and marketer that specializes in software delivery, developer experience, cloud native and open source. He has developed his career at companies like GitLab, Weaveworks, Harness and other platform and devtool providers. His interests range from software supply chain security to open source innovation. You can reach out to him on Twitter at </span><a href="https://twitter.com/JordiMonPMM"><span style="font-weight: 400;">@jordimonpmm</span></a></p>
<p style="text-align: center;">Sponsorship inquiries: <a href="https://cms.megaphone.fm/organizations/619b680e-d813-11ea-9750-e7ecac406436/podcasts/e60108fe-e328-11ea-b2b6-1348249f900a/episodes/3913370a-bc44-11ed-ace6-8b1f96d82bba/sponsor@softwareengineeringdaily.com" target="_blank" rel="noopener noreferrer">sponsor@softwareengineeringdaily.com</a></p>
</div>
<div class="module-message__metadata module-message__metadata--inline"></div>
</div>
</div>
<div class="module-message__buttons module-message__buttons--incoming"></div>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2023/05/04/cloud-native-in-2023/">Cloud Native in 2023 with Chris Aniszczyk</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED4596943456.mp3" length="56151025" type="audio/mpeg" />
		<itunes:subtitle>Cloud native technologies empower organizations to build and run scalable applications in modern, dynamic environments such as public, private, and hybrid clouds. Containers, service meshes, microservices, immutable infrastructure,</itunes:subtitle>
		<itunes:summary>Cloud native technologies empower organizations to build and run scalable applications in modern, dynamic environments such as public, private, and hybrid clouds. Containers, service meshes, microservices, immutable infrastructure, and declarative APIs exemplify this approach. These techniques enable loosely coupled systems that are resilient, manageable, and observable. Combined with robust automation, they allow engineers to make</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>38:56</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">15009</post-id>	</item>
	<item>
		<title>GitOps for Kubernetes with Priyanka Ravi and Stefan Prodan</title>
		<link>http://softwareengineeringdaily.com/2023/05/02/gitops-for-kubernetes/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=gitops-for-kubernetes</link>
		<pubDate>Tue, 02 May 2023 09:00:39 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=15006</guid>
		<comments>http://softwareengineeringdaily.com/2023/05/02/gitops-for-kubernetes/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2023/05/02/gitops-for-kubernetes/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Cloud Engineering]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Jordi Mon Companys]]></category>
		<category><![CDATA[Podcast]]></category>
		<category><![CDATA[Flux]]></category>
		<category><![CDATA[GitOps]]></category>
		<category><![CDATA[Kubernetes]]></category>
		<description>&lt;p&gt;Kubernetes is an open-source system for automating deployment, scaling, and management of containerized applications. Although it improves the management and scaling of infrastructure and applications, Kubernetes frequently has challenges managing the complexity of releasing applications. Git is the most widely used version-control system in the software industry today. GitOps is a set of procedures that uses&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2023/05/02/gitops-for-kubernetes/&quot;&gt;GitOps for Kubernetes with Priyanka Ravi and Stefan Prodan&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<p><a href="https://kubernetes.io/docs/concepts/overview/">Kubernetes</a> is an open-source system for automating deployment, scaling, and management of containerized applications.</p>
<p>Although it improves the management and scaling of infrastructure and applications, Kubernetes frequently has challenges managing the complexity of releasing applications.</p>
<p>Git is the most widely used version-control system in the software industry today. GitOps is a set of procedures that uses the power of Git to provide both revision and change control within the Kubernetes platform.</p>
<p><a href="https://fluxcd.io/">Flux</a> is an open source project that implements GitOps-driven continuous deployment for Kubernetes.</p>
<p>In this episode we speak with <a href="https://twitter.com/pinkyyravi?lang=en">Priyanka Ravi</a> and <a href="https://twitter.com/stefanprodan">Stefan Prodan</a> from <a href="https://www.weave.works/">Weaveworks</a>.</p>
<p>&nbsp;</p>
<p>This Interview was recorded at <a href="https://streaklinks.com/Bg_PFnbkpFTSagwvgwYbEPZW/https%3A%2F%2Fevents.linuxfoundation.org%2Fkubecon-cloudnativecon-europe%2F" target="_blank" rel="noopener" data-saferedirecturl="https://www.google.com/url?q=https://streaklinks.com/Bg_PFnbkpFTSagwvgwYbEPZW/https%253A%252F%252Fevents.linuxfoundation.org%252Fkubecon-cloudnativecon-europe%252F&amp;source=gmail&amp;ust=1684828419418000&amp;usg=AOvVaw2T8rqB8Fv4Wc3alTv09hEE">KubeCon Europe</a> and wouldn&#8217;t have been possible without the generous support from <a href="https://www.linuxfoundation.org/">The Linux Foundation</a>.</p>
<p><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/03/jordi.png"><img decoding="async" loading="lazy" class="size-full wp-image-14908 alignleft" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/03/jordi.png?resize=218%2C258&#038;ssl=1" alt="" width="218" height="258" data-recalc-dims="1" /></a><a href="https://www.linkedin.com/in/jordimoncompanys/"><span style="font-weight: 400;">Jordi Mon Companys</span></a><span style="font-weight: 400;"> is a product manager and marketer that specializes in software delivery, developer experience, cloud native and open source. He has developed his career at companies like GitLab, Weaveworks, Harness and other platform and devtool providers. His interests range from software supply chain security to open source innovation. You can reach out to him on Twitter at </span><a href="https://twitter.com/JordiMonPMM"><span style="font-weight: 400;">@jordimonpmm</span></a></p>
<p style="text-align: center;">Sponsorship inquiries: <a href="https://cms.megaphone.fm/organizations/619b680e-d813-11ea-9750-e7ecac406436/podcasts/e60108fe-e328-11ea-b2b6-1348249f900a/episodes/3913370a-bc44-11ed-ace6-8b1f96d82bba/sponsor@softwareengineeringdaily.com" target="_blank" rel="noopener noreferrer">sponsor@softwareengineeringdaily.com</a></p>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2023/05/02/gitops-for-kubernetes/">GitOps for Kubernetes with Priyanka Ravi and Stefan Prodan</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED5023580865.mp3" length="94032661" type="audio/mpeg" />
		<itunes:subtitle>Kubernetes is an open-source system for automating deployment, scaling, and management of containerized applications. Although it improves the management and scaling of infrastructure and applications, Kubernetes frequently has challenges managing the ...</itunes:subtitle>
		<itunes:summary>Kubernetes is an open-source system for automating deployment, scaling, and management of containerized applications. Although it improves the management and scaling of infrastructure and applications, Kubernetes frequently has challenges managing the complexity of releasing applications. Git is the most widely used version-control system in the software industry today. GitOps is a set of procedures that uses</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>1:05:14</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">15006</post-id>	</item>
	<item>
		<title>Bug Reporting is Broken and how Jam is Fixing that with Dani Grant &#038; Mohd Irtefa</title>
		<link>http://softwareengineeringdaily.com/2023/05/01/bug-reporting/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=bug-reporting</link>
		<pubDate>Mon, 01 May 2023 18:00:36 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=14999</guid>
		<comments>http://softwareengineeringdaily.com/2023/05/01/bug-reporting/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2023/05/01/bug-reporting/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Podcast]]></category>
		<category><![CDATA[Sean Falconer]]></category>
		<category><![CDATA[bugs]]></category>
		<category><![CDATA[Debugging]]></category>
		<category><![CDATA[jam.dev]]></category>
		<description>&lt;p&gt;Bug reporting hasn’t changed since the 1990’s. Despite all the technological advancements we’ve made in the rest of software development, the way we handle bugs has stayed the same. It is common practice for non technical teams to provide bug reports that are missing vital information for developers to identify and quickly fix code, such&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2023/05/01/bug-reporting/&quot;&gt;Bug Reporting is Broken and how Jam is Fixing that with Dani Grant &amp; Mohd Irtefa&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<p dir="ltr">Bug reporting hasn&#8217;t changed since the 1990&#8217;s. Despite all the technological advancements we&#8217;ve made in the rest of software development, the way we handle bugs has stayed the same.</p>
<p dir="ltr">It is common practice for non technical teams to provide bug reports that are missing vital information for developers to identify and quickly fix code, such as: network requests, console logs, HAR file, device information, video or screenshot replication, and more.</p>
<p dir="ltr">Providing a comprehensive bug report requires logging into many tools and time spent context switching, creating an environment where people are less likely to report bugs, which is not an ideal scenario for any founder or builder.</p>
<p dir="ltr"><a href="https://streaklinks.com/BfVG8q6JyTuADNXgvAvL0bjz/https%3A%2F%2Ftwitter.com%2Fthedanigrant" target="_blank" rel="noopener" data-saferedirecturl="https://www.google.com/url?q=https://streaklinks.com/BfVG8q6JyTuADNXgvAvL0bjz/https%253A%252F%252Ftwitter.com%252Fthedanigrant&amp;source=gmail&amp;ust=1683048338275000&amp;usg=AOvVaw3O67rv-Tt2Zih8kr0zGTKv">Dani</a> &amp; <a href="https://streaklinks.com/BfVG8qy19YuF-rkxcwcaPBv5/https%3A%2F%2Ftwitter.com%2F_irtefa" target="_blank" rel="noopener" data-saferedirecturl="https://www.google.com/url?q=https://streaklinks.com/BfVG8qy19YuF-rkxcwcaPBv5/https%253A%252F%252Ftwitter.com%252F_irtefa&amp;source=gmail&amp;ust=1683048338275000&amp;usg=AOvVaw2_q6DqUKXRmV8ETf20PgRT">Irtefa</a>, co-founders at <a href="https://jam.dev/?utm_source=SEDAILY_PODCAST&amp;utm_medium=ORGANIC&amp;utm_campaign=SEDAILYDESCRIPTION_2023_04" target="_blank" rel="noopener" data-saferedirecturl="https://www.google.com/url?q=https://jam.dev/?utm_source%3DSEDAILY_PODCAST%26utm_medium%3DORGANIC%26utm_campaign%3DSEDAILYDESCRIPTION_2023_04&amp;source=gmail&amp;ust=1683048338275000&amp;usg=AOvVaw3tvR6PsrgaWFT9oMTSZ2yE">Jam.dev</a> set out to build a tool that will enable anyone, no matter their technical background, to capture rich contextual technical data about bugs, so that developers can quickly identify and resolve issues.</p>
<p dir="ltr">Jam is a browser extension that will instantly replay a bug while automatically attaching diagnostics: network requests and speed, console logs, device, and more &#8211; all in one easy click. You don’t have to log into a new tool or disrupt workflows, as Jam has direct integrations with all the first class bug reporting tools to seamlessly drop diagnostics into a ticket.</p>
<p dir="ltr">In this episode, <a href="https://streaklinks.com/BfVG8que3mTx3OeIIgVL0Ng5/https%3A%2F%2Ftwitter.com%2Fthedanigrant" target="_blank" rel="noopener" data-saferedirecturl="https://www.google.com/url?q=https://streaklinks.com/BfVG8que3mTx3OeIIgVL0Ng5/https%253A%252F%252Ftwitter.com%252Fthedanigrant&amp;source=gmail&amp;ust=1683048338275000&amp;usg=AOvVaw2W5wKkJAhF8zUttjagwVKY">Dani</a> &amp; <a href="https://streaklinks.com/BfVG8qy0dC_raTGlUQ6O3fEU/https%3A%2F%2Ftwitter.com%2F_irtefa" target="_blank" rel="noopener" data-saferedirecturl="https://www.google.com/url?q=https://streaklinks.com/BfVG8qy0dC_raTGlUQ6O3fEU/https%253A%252F%252Ftwitter.com%252F_irtefa&amp;source=gmail&amp;ust=1683048338275000&amp;usg=AOvVaw30L_FJOO1UoAxD3aaM0y5W">Irtefa</a> share their experience building greenfield products for Cloudflare’s Emerging Technology and Incubation team, how bug reporting was the common pain-point that impacted their product velocity, and the technology decisions they made when building Jam.</p>
<p dir="ltr">Test it out for free at: <a href="https://jam.dev/?utm_source=SEDAILY_PODCAST&amp;utm_medium=ORGANIC&amp;utm_campaign=SEDAILYDESCRIPTION_2023_04" target="_blank" rel="noopener" data-saferedirecturl="https://www.google.com/url?q=https://jam.dev/?utm_source%3DSEDAILY_PODCAST%26utm_medium%3DORGANIC%26utm_campaign%3DSEDAILYDESCRIPTION_2023_04&amp;source=gmail&amp;ust=1683048338275000&amp;usg=AOvVaw3tvR6PsrgaWFT9oMTSZ2yE">Jam.dev</a></p>
<p><span style="font-weight: 400;"><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/05/Sean-Falconer.png"><img decoding="async" loading="lazy" class="size-full wp-image-13856 alignleft" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/05/Sean-Falconer.png?resize=218%2C258" alt="" width="218" height="258" data-recalc-dims="1" /></a>Sean&#8217;s been an academic, startup founder, and Googler. He has published works covering a wide range of topics from information visualization to quantum computing. Currently, Sean is Head of Marketing and Developer Relations at <a href="https://www.skyflow.com/">Skyflow</a> and host of the podcast Partially Redacted, a podcast about privacy and security engineering. You can connect with Sean on Twitter <a href="https://twitter.com/seanfalconer">@seanfalconer .</a></span></p>
<p style="text-align: center;">Sponsorship inquiries: <a href="https://cms.megaphone.fm/organizations/619b680e-d813-11ea-9750-e7ecac406436/podcasts/e60108fe-e328-11ea-b2b6-1348249f900a/episodes/3913370a-bc44-11ed-ace6-8b1f96d82bba/sponsor@softwareengineeringdaily.com" target="_blank" rel="noopener noreferrer">sponsor@softwareengineeringdaily.com</a></p>
<p dir="ltr" style="text-align: center;">
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2023/05/01/bug-reporting/">Bug Reporting is Broken and how Jam is Fixing that with Dani Grant &#038; Mohd Irtefa</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED7410906065.mp3" length="90530084" type="audio/mpeg" />
		<itunes:subtitle>Bug reporting hasn’t changed since the 1990’s. Despite all the technological advancements we’ve made in the rest of software development, the way we handle bugs has stayed the same. It is common practice for non technical teams to provide bug reports t...</itunes:subtitle>
		<itunes:summary>Bug reporting hasn’t changed since the 1990’s. Despite all the technological advancements we’ve made in the rest of software development, the way we handle bugs has stayed the same. It is common practice for non technical teams to provide bug reports that are missing vital information for developers to identify and quickly fix code, such</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>37:41</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">14999</post-id>	</item>
	<item>
		<title>Pre-configured Development Environments with John Craft and Ramiro Berrelleza</title>
		<link>http://softwareengineeringdaily.com/2023/04/26/pre-configured-development/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=pre-configured-development</link>
		<pubDate>Wed, 26 Apr 2023 17:28:59 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=14996</guid>
		<comments>http://softwareengineeringdaily.com/2023/04/26/pre-configured-development/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2023/04/26/pre-configured-development/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Podcast]]></category>
		<category><![CDATA[Sean Falconer]]></category>
		<category><![CDATA[development environments]]></category>
		<category><![CDATA[Okteto]]></category>
		<category><![CDATA[Privacy Dynamics]]></category>
		<description>&lt;p&gt;In this episode we have two guests Ramiro Berrelleza is the founder and CEO of Okteto, a developer tool that helps you create production like dev environments in the cloud for every developer. Ramiro will tell us how to easily make replica environments for your day to day development , but computing related infrastructure is&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2023/04/26/pre-configured-development/&quot;&gt;Pre-configured Development Environments with John Craft and Ramiro Berrelleza&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<p>In this episode we have two guests <a href="https://twitter.com/rberrelleza?lang=en">Ramiro Berrelleza</a> is the founder and CEO of <a href="https://www.okteto.com/">Okteto</a>, a developer tool that helps you create production like dev environments in the cloud for every developer. Ramiro will tell us how to easily make replica environments for your day to day development , but computing related infrastructure is only half the battle. It also helps to have realistic data when you&#8217;re developing.<br />
<a href="https://twitter.com/john_craft">John Craft</a> is the CTO at <a href="https://www.privacydynamics.io/">Privacy Dynamics</a>, a company that helps you create anonymized data. You can use Privacy Dynamics to create realistic data from your production database without compromising your customer information.</p>
<div>
<p><span style="font-weight: 400;"><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/04/alex.png"><img decoding="async" loading="lazy" class="size-full wp-image-14922 alignleft" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/04/alex.png?resize=218%2C258&#038;ssl=1" alt="" width="218" height="258" data-recalc-dims="1" /></a>Alex is an AWS Data Hero, an independent consultant, and the author of </span><a href="https://www.dynamodbbook.com/"><span style="font-weight: 400;">The DynamoDB Book</span></a><span style="font-weight: 400;">, the comprehensive guide to data modeling with DynamoDB. He was an early employee at Serverless, Inc., creators of the Serverless Framework, and was an early community member in the serverless space. His consulting and training work focuses on serverless architectures and database optimization. You can find him on Twitter as </span><a href="https://twitter.com/alexbdebrie"><span style="font-weight: 400;">@alexbdebrie</span></a><span style="font-weight: 400;"> or on his site, </span><a href="https://www.alexdebrie.com/"><span style="font-weight: 400;">alexdebrie.com</span></a><span style="font-weight: 400;">.</span></p>
</div>
<div></div>
<div style="text-align: center;">Sponsorship inquiries: <a href="https://cms.megaphone.fm/organizations/619b680e-d813-11ea-9750-e7ecac406436/podcasts/e60108fe-e328-11ea-b2b6-1348249f900a/episodes/3913370a-bc44-11ed-ace6-8b1f96d82bba/sponsor@softwareengineeringdaily.com" target="_blank" rel="noopener noreferrer">sponsor@softwareengineeringdaily.com</a></div>
<div>
<p style="text-align: center;">
</div>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2023/04/26/pre-configured-development/">Pre-configured Development Environments with John Craft and Ramiro Berrelleza</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED1146064413.mp3" length="62126895" type="audio/mpeg" />
		<itunes:subtitle>In this episode we have two guests Ramiro Berrelleza is the founder and CEO of Okteto, a developer tool that helps you create production like dev environments in the cloud for every developer. Ramiro will tell us how to easily make replica environments...</itunes:subtitle>
		<itunes:summary>In this episode we have two guests Ramiro Berrelleza is the founder and CEO of Okteto, a developer tool that helps you create production like dev environments in the cloud for every developer. Ramiro will tell us how to easily make replica environments for your day to day development , but computing related infrastructure is</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>43:05</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">14996</post-id>	</item>
	<item>
		<title>Cloud-Oriented Programming (Part 2) with Elad Ben-Israel</title>
		<link>http://softwareengineeringdaily.com/2023/04/24/cloud-oriented-programming/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=cloud-oriented-programming</link>
		<pubDate>Mon, 24 Apr 2023 09:00:20 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=14994</guid>
		<comments>http://softwareengineeringdaily.com/2023/04/24/cloud-oriented-programming/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2023/04/24/cloud-oriented-programming/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Jeff Hemmen]]></category>
		<category><![CDATA[Podcast]]></category>
		<category><![CDATA[Cloud]]></category>
		<category><![CDATA[Elad Ben-Israel]]></category>
		<category><![CDATA[Infrastructure]]></category>
		<category><![CDATA[Wing]]></category>
		<description>&lt;p&gt;The cloud has become an all-encompassing platform for running diverse applications and enabling individuals and teams to add value by utilizing services and infrastructure that streamline the process of software building and operation. Nonetheless, the cloud has presented new hurdles for developers as it is intricate, and application development demands comprehension of cloud service intricacies.&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2023/04/24/cloud-oriented-programming/&quot;&gt;Cloud-Oriented Programming (Part 2) with Elad Ben-Israel&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<p><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/04/elad.png"><img decoding="async" loading="lazy" class="alignright size-full wp-image-14974" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/04/elad.png?resize=200%2C240" alt="" width="200" height="240" data-recalc-dims="1" /></a>The cloud has become an all-encompassing platform for running diverse applications and enabling individuals and teams to add value by utilizing services and infrastructure that streamline the process of software building and operation. Nonetheless, the cloud has presented new hurdles for developers as it is intricate, and application development demands comprehension of cloud service intricacies. Moreover, creating portable applications across different cloud providers, as well as local testing and debugging, have proven to be difficult. Additionally, leaky abstractions and inadequate tooling have made it challenging to repurpose cloud architectures into reusable components.</p>
<p>To address these challenges, a cloud-centric programming language called Wing has been introduced. Wing enables developers to create distributed systems that fully capitalize on the cloud&#8217;s capabilities without the need to concern themselves with the underlying infrastructure.</p>
<p><span style="font-weight: 400;"><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/04/jeff.png"><img decoding="async" loading="lazy" class="wp-image-14977 size-full alignleft" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/04/jeff.png?resize=218%2C258" alt="" width="218" height="258" data-recalc-dims="1" /></a><a href="https://twitter.com/jeffhemmen?lang=en">Jeff</a> is a DevSecOps engineer with strong experience in Security, The Software Development Life Cycle and Cloud Technologies. His advanced expertise in HashiCorp technologies places him as one of the most sought after trainers in the EMEA region and beyond. Jeff has worked for a range of different companies – from small startups to some of the biggest financial institutions. He now successfully runs his own consultancy that provides services in DevSecOps, Cloud and Security. Check it out on hemmen.LU and follow Jeff on LinkedIn <a href="https://www.linkedin.com/in/jeffhemmen/?originalSubdomain=lu">@jeffhemmen </a></span></p>
<p style="text-align: center;">Sponsorship inquiries: <a href="https://cms.megaphone.fm/organizations/619b680e-d813-11ea-9750-e7ecac406436/podcasts/e60108fe-e328-11ea-b2b6-1348249f900a/episodes/3913370a-bc44-11ed-ace6-8b1f96d82bba/sponsor@softwareengineeringdaily.com" target="_blank" rel="noopener noreferrer">sponsor@softwareengineeringdaily.com</a></p>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2023/04/24/cloud-oriented-programming/">Cloud-Oriented Programming (Part 2) with Elad Ben-Israel</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED5917349455.mp3" length="81832435" type="audio/mpeg" />
		<itunes:subtitle>The cloud has become an all-encompassing platform for running diverse applications and enabling individuals and teams to add value by utilizing services and infrastructure that streamline the process of software building and operation. Nonetheless,</itunes:subtitle>
		<itunes:summary>The cloud has become an all-encompassing platform for running diverse applications and enabling individuals and teams to add value by utilizing services and infrastructure that streamline the process of software building and operation. Nonetheless, the cloud has presented new hurdles for developers as it is intricate, and application development demands comprehension of cloud service intricacies.</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>56:46</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">14994</post-id>	</item>
	<item>
		<title>Open-Source Embedding Database with Anton Troynikov</title>
		<link>http://softwareengineeringdaily.com/2023/04/20/open-source-embedding-database/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=open-source-embedding-database</link>
		<pubDate>Thu, 20 Apr 2023 21:30:00 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=14978</guid>
		<comments>http://softwareengineeringdaily.com/2023/04/20/open-source-embedding-database/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2023/04/20/open-source-embedding-database/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Lee Atchison]]></category>
		<category><![CDATA[Podcast]]></category>
		<category><![CDATA[Anton Troynikov]]></category>
		<category><![CDATA[Chroma]]></category>
		<category><![CDATA[database]]></category>
		<category><![CDATA[open-sourced]]></category>
		<description>&lt;p&gt;Chroma is an open source embedding database that is designed to make it easy to build large language model applications by making knowledge, facts and skills pluggable. Anton Troynikov is the co-founder of Chroma and he is our guest today. This episode is hosted by Lee Atchison. Lee Atchison is a software architect, author, and&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2023/04/20/open-source-embedding-database/&quot;&gt;Open-Source Embedding Database with Anton Troynikov&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<div class="module-message__text module-message__text--outgoing"><span class=""><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/04/anton-1.png"><img decoding="async" loading="lazy" class="alignright size-full wp-image-14979" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/04/anton-1.png?resize=218%2C258&#038;ssl=1" alt="" width="218" height="258" data-recalc-dims="1" /></a><a href="https://www.trychroma.com/">Chroma</a> is an open source embedding database that is designed to make it easy to build large language model applications by making knowledge, facts and skills pluggable.</span></div>
<div></div>
<div class="module-message__text module-message__text--outgoing"><span class=""><a href="https://twitter.com/atroyn?ref_src=twsrc%5Egoogle%7Ctwcamp%5Eserp%7Ctwgr%5Eauthor">Anton Troynikov</a> is the co-founder of Chroma and he is our guest today.</span></div>
<div class="module-message__metadata module-message__metadata--inline">
<p><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/04/lee.png"><img decoding="async" loading="lazy" class="wp-image-14980 size-full alignleft" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/04/lee.png?resize=200%2C240&#038;ssl=1" alt="" width="200" height="240" data-recalc-dims="1" /></a>This episode is hosted by Lee Atchison. Lee Atchison is a software architect, author, and thought leader on cloud computing and application modernization. His most recent book, <a href="https://leeatchison.com//ref-amzn-arch-for-scale">Architecting for Scale</a> (O’Reilly Media) is an essential resource for technical teams looking to maintain high availability and manage risk in their cloud environments.<br />
Lee is the host of his podcast, <a href="https://mdb.fm/?utm_campaign=swengdaily&amp;utm_source=mdb&amp;utm_medium=podcast">Modern Digital Business</a>, an engaging and informative podcast produced for people looking to build and grow their digital business with the help of modern applications and processes developed for today’s fast-moving business environment. Subscribe at <a href="http://mdb.fm/">mdb.fm</a>. Follow Lee, at <a href="http://leeatchison.com/">leeatchison.com</a>.</p>
<p style="text-align: center;">Sponsorship inquiries: <a href="https://cms.megaphone.fm/organizations/619b680e-d813-11ea-9750-e7ecac406436/podcasts/e60108fe-e328-11ea-b2b6-1348249f900a/episodes/3913370a-bc44-11ed-ace6-8b1f96d82bba/sponsor@softwareengineeringdaily.com" target="_blank" rel="noopener noreferrer">sponsor@softwareengineeringdaily.com</a></p>
</div>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2023/04/20/open-source-embedding-database/">Open-Source Embedding Database with Anton Troynikov</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED3480628860.mp3" length="56745705" type="audio/mpeg" />
		<itunes:subtitle>Chroma is an open source embedding database that is designed to make it easy to build large language model applications by making knowledge, facts and skills pluggable. Anton Troynikov is the co-founder of Chroma and he is our guest today.</itunes:subtitle>
		<itunes:summary>Chroma is an open source embedding database that is designed to make it easy to build large language model applications by making knowledge, facts and skills pluggable. Anton Troynikov is the co-founder of Chroma and he is our guest today. This episode is hosted by Lee Atchison. Lee Atchison is a software architect, author, and</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>39:21</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">14978</post-id>	</item>
	<item>
		<title>Cloud-Oriented Programming (Part 1) with Elad Ben-Israel</title>
		<link>http://softwareengineeringdaily.com/2023/04/19/insfrastructure-as-code/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=insfrastructure-as-code</link>
		<pubDate>Wed, 19 Apr 2023 20:41:15 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=14973</guid>
		<comments>http://softwareengineeringdaily.com/2023/04/19/insfrastructure-as-code/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2023/04/19/insfrastructure-as-code/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Jeff Hemmen]]></category>
		<category><![CDATA[Podcast]]></category>
		<category><![CDATA[Cloud]]></category>
		<category><![CDATA[Elad Ben-Israel]]></category>
		<category><![CDATA[Infrastructure]]></category>
		<category><![CDATA[Wing]]></category>
		<description>&lt;p&gt;The cloud has become an all-encompassing platform for running diverse applications and enabling individuals and teams to add value by utilizing services and infrastructure that streamline the process of software building and operation. Nonetheless, the cloud has presented new hurdles for developers as it is intricate, and application development demands comprehension of cloud service intricacies.&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2023/04/19/insfrastructure-as-code/&quot;&gt;Cloud-Oriented Programming (Part 1) with Elad Ben-Israel&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<p><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/04/elad.png"><img decoding="async" loading="lazy" class="alignright size-full wp-image-14974" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/04/elad.png?resize=200%2C240" alt="" width="200" height="240" data-recalc-dims="1" /></a>The cloud has become an all-encompassing platform for running diverse applications and enabling individuals and teams to add value by utilizing services and infrastructure that streamline the process of software building and operation. Nonetheless, the cloud has presented new hurdles for developers as it is intricate, and application development demands comprehension of cloud service intricacies. Moreover, creating portable applications across different cloud providers, as well as local testing and debugging, have proven to be difficult. Additionally, leaky abstractions and inadequate tooling have made it challenging to repurpose cloud architectures into reusable components.</p>
<p>To address these challenges, a cloud-centric programming language called Wing has been introduced. Wing enables developers to create distributed systems that fully capitalize on the cloud&#8217;s capabilities without the need to concern themselves with the underlying infrastructure.</p>
<p><span style="font-weight: 400;"><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/04/jeff.png"><img decoding="async" loading="lazy" class="wp-image-14977 size-full alignleft" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/04/jeff.png?resize=218%2C258" alt="" width="218" height="258" data-recalc-dims="1" /></a><a href="https://twitter.com/jeffhemmen?lang=en">Jeff</a> is a DevSecOps engineer with strong experience in Security, The Software Development Life Cycle and Cloud Technologies. His advanced expertise in HashiCorp technologies places him as one of the most sought after trainers in the EMEA region and beyond. Jeff has worked for a range of different companies – from small startups to some of the biggest financial institutions. He now successfully runs his own consultancy that provides services in DevSecOps, Cloud and Security. Check it out on hemmen.LU and follow Jeff on LinkedIn <a href="https://www.linkedin.com/in/jeffhemmen/?originalSubdomain=lu">@jeffhemmen </a></span></p>
<p style="text-align: center;">Sponsorship inquiries: <a href="https://cms.megaphone.fm/organizations/619b680e-d813-11ea-9750-e7ecac406436/podcasts/e60108fe-e328-11ea-b2b6-1348249f900a/episodes/3913370a-bc44-11ed-ace6-8b1f96d82bba/sponsor@softwareengineeringdaily.com" target="_blank" rel="noopener noreferrer">sponsor@softwareengineeringdaily.com</a></p>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2023/04/19/insfrastructure-as-code/">Cloud-Oriented Programming (Part 1) with Elad Ben-Israel</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED5673286864.mp3" length="76503455" type="audio/mpeg" />
		<itunes:subtitle>The cloud has become an all-encompassing platform for running diverse applications and enabling individuals and teams to add value by utilizing services and infrastructure that streamline the process of software building and operation. Nonetheless,</itunes:subtitle>
		<itunes:summary>The cloud has become an all-encompassing platform for running diverse applications and enabling individuals and teams to add value by utilizing services and infrastructure that streamline the process of software building and operation. Nonetheless, the cloud has presented new hurdles for developers as it is intricate, and application development demands comprehension of cloud service intricacies.</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>53:04</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">14973</post-id>	</item>
	<item>
		<title>Multi-player Coding with Nathan Sobo</title>
		<link>http://softwareengineeringdaily.com/2023/04/17/multi-player-coding/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=multi-player-coding</link>
		<pubDate>Tue, 18 Apr 2023 04:11:04 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=14964</guid>
		<comments>http://softwareengineeringdaily.com/2023/04/17/multi-player-coding/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2023/04/17/multi-player-coding/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Jocelyn Byrne Houle]]></category>
		<category><![CDATA[Podcast]]></category>
		<category><![CDATA[Code Editor]]></category>
		<category><![CDATA[Multiplayer]]></category>
		<category><![CDATA[Nathan Sobo]]></category>
		<category><![CDATA[Zed]]></category>
		<description>&lt;p&gt;Code editors are complex and demanding pieces of software that are both essential tools and constant companions for developers. Today, we are interviewing Nathan Sobo to hear about Zed, a code editor focused on “multiplayer” experiences, performance and a streamlined, minimalist design. Nathan Sobo was a member of the Atom editor team at GitHub, which&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2023/04/17/multi-player-coding/&quot;&gt;Multi-player Coding with Nathan Sobo&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<div class="page" title="Page 1">
<div class="section">
<div class="layoutArea">
<div class="column">
<p><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/04/nathan.png"><img decoding="async" loading="lazy" class="alignright size-full wp-image-14965" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/04/nathan.png?resize=218%2C258" alt="" width="218" height="258" data-recalc-dims="1" /></a>Code editors are complex and demanding pieces of software that are both essential tools and constant companions for developers. Today, we are interviewing <a href="https://twitter.com/nathansobo?lang=en">Nathan Sobo</a> to hear about <a href="https://zed.dev/">Zed</a>, a code editor focused on “multiplayer” experiences, performance and a streamlined, minimalist design.</p>
<p>Nathan Sobo was a member of the Atom editor team at GitHub, which worked on the (now-deprecated) Atom code editor. He will share his thoughts on Rust, the impact of very low-latency collaborative coding on happiness, and how to turn an authoring environment into a first-class concern.</p>
<div>
<p><span style="font-weight: 400;"><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/04/jocelyn.png"><img decoding="async" loading="lazy" class="size-full wp-image-14942 alignleft" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/04/jocelyn.png?resize=209%2C249&#038;ssl=1" alt="" width="209" height="249" data-recalc-dims="1" /></a></span></p>
<p><span style="font-weight: 400;">Starting her career as a software developer, Jocelyn Houle is now a Senior Director of Product Management at <a href="https://securiti.ai/">Securiti.ai</a>,</span><span style="font-weight: 400;"> a unified data protection and governance platform. Before that, she was an Operating Partner at <a href="https://growthventures.capitalone.com/">Capital One Ventures</a></span><span style="font-weight: 400;"> investing in data and AI startups. Jocelyn has been a founder of two startups and a full life cycle, technical product manager at large companies like Fannie Mae, Microsoft and Capital One. Follow Jocelyn on <a href="https://www.linkedin.com/in/jocelyn/">Linkedin</a></span><a style="font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen-Sans, Ubuntu, Cantarell, 'Helvetica Neue', sans-serif;" href="https://www.linkedin.com/in/jocelyn/"> </a><span style="font-weight: 400;">or Twitter <a href="https://twitter.com/jocelynbyrne">@jocelynbyrne</a></span></p>
<p style="text-align: center;">Sponsorship inquiries: <a href="https://cms.megaphone.fm/organizations/619b680e-d813-11ea-9750-e7ecac406436/podcasts/e60108fe-e328-11ea-b2b6-1348249f900a/episodes/3913370a-bc44-11ed-ace6-8b1f96d82bba/sponsor@softwareengineeringdaily.com" target="_blank" rel="noopener noreferrer">sponsor@softwareengineeringdaily.com</a></p>
</div>
<div class="module-message__buttons module-message__buttons--incoming"></div>
</div>
</div>
</div>
</div>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2023/04/17/multi-player-coding/">Multi-player Coding with Nathan Sobo</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED9897236552.mp3" length="79241956" type="audio/mpeg" />
		<itunes:subtitle>Code editors are complex and demanding pieces of software that are both essential tools and constant companions for developers. Today, we are interviewing Nathan Sobo to hear about Zed, a code editor focused on “multiplayer” experiences,</itunes:subtitle>
		<itunes:summary>Code editors are complex and demanding pieces of software that are both essential tools and constant companions for developers. Today, we are interviewing Nathan Sobo to hear about Zed, a code editor focused on “multiplayer” experiences, performance and a streamlined, minimalist design. Nathan Sobo was a member of the Atom editor team at GitHub, which</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>54:58</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">14964</post-id>	</item>
	<item>
		<title>Pricing and Packaging Orchestration with Anton Zagrebelny</title>
		<link>http://softwareengineeringdaily.com/2023/04/14/pricing-and-packaging/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=pricing-and-packaging</link>
		<pubDate>Fri, 14 Apr 2023 16:49:25 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=14958</guid>
		<comments>http://softwareengineeringdaily.com/2023/04/14/pricing-and-packaging/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2023/04/14/pricing-and-packaging/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Lee Atchison]]></category>
		<category><![CDATA[Podcast]]></category>
		<category><![CDATA[Anton Zagrebelny]]></category>
		<category><![CDATA[APIs]]></category>
		<category><![CDATA[SaaS]]></category>
		<category><![CDATA[Stigg]]></category>
		<description>&lt;p&gt;Most companies aren’t in the building business yet they need to deal with pricing and billing as a core piece of technology whether they want to or not. Stigg is an easy to implement headless pricing and packaging platform that takes a lot of the hassle out of pricing and billing for your SaaS application.&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2023/04/14/pricing-and-packaging/&quot;&gt;Pricing and Packaging Orchestration with Anton Zagrebelny&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<p><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/04/anton.png"><img decoding="async" loading="lazy" class="alignright size-full wp-image-14959" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/04/anton.png?resize=218%2C258" alt="" width="218" height="258" data-recalc-dims="1" /></a>Most companies aren&#8217;t in the building business yet they need to deal with pricing and billing as a core piece of technology whether they want to or not. <a href="https://www.stigg.io/">Stigg</a> is an easy to implement headless pricing and packaging platform that takes a lot of the hassle out of pricing and billing for your SaaS application. Their APIs help developers launch new pricing plans faster that lead to better customer buying experiences.</p>
<p><a href="https://twitter.com/antonzy90">Anton Zagrebelny</a> is the CTO of Stigg and he is our guest today.</p>
<p><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/02/lee.jpg"><img decoding="async" loading="lazy" class="size-medium wp-image-13263 alignleft" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/02/lee-253x300.jpg?resize=253%2C300&#038;ssl=1" alt="" width="253" height="300" srcset="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/02/lee.jpg?resize=253%2C300 253w, https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/02/lee.jpg?w=268 268w" sizes="(max-width: 253px) 100vw, 253px" data-recalc-dims="1" /></a>This episode is hosted by Lee Atchison. Lee Atchison is a software architect, author, and thought leader on cloud computing and application modernization. His most recent book, <a href="https://leeatchison.com//ref-amzn-arch-for-scale">Architecting for Scale</a> (O’Reilly Media) is an essential resource for technical teams looking to maintain high availability and manage risk in their cloud environments.<br />
Lee is the host of his podcast, <a href="https://mdb.fm/?utm_campaign=swengdaily&amp;utm_source=mdb&amp;utm_medium=podcast">Modern Digital Business</a>, an engaging and informative podcast produced for people looking to build and grow their digital business with the help of modern applications and processes developed for today’s fast-moving business environment. Subscribe at <a href="http://mdb.fm/">mdb.fm</a>. Follow Lee, at <a href="http://leeatchison.com/">leeatchison.com</a>.</p>
<p style="text-align: center;">Sponsorship inquiries: <a href="https://cms.megaphone.fm/organizations/619b680e-d813-11ea-9750-e7ecac406436/podcasts/e60108fe-e328-11ea-b2b6-1348249f900a/episodes/3913370a-bc44-11ed-ace6-8b1f96d82bba/sponsor@softwareengineeringdaily.com" target="_blank" rel="noopener noreferrer">sponsor@softwareengineeringdaily.com</a></p>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2023/04/14/pricing-and-packaging/">Pricing and Packaging Orchestration with Anton Zagrebelny</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED3571852447.mp3" length="63489935" type="audio/mpeg" />
		<itunes:subtitle>Most companies aren’t in the building business yet they need to deal with pricing and billing as a core piece of technology whether they want to or not. Stigg is an easy to implement headless pricing and packaging platform that takes a lot of the hassl...</itunes:subtitle>
		<itunes:summary>Most companies aren’t in the building business yet they need to deal with pricing and billing as a core piece of technology whether they want to or not. Stigg is an easy to implement headless pricing and packaging platform that takes a lot of the hassle out of pricing and billing for your SaaS application.</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>44:02</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">14958</post-id>	</item>
	<item>
		<title>Cloud Cost Management with Roi Ravhon</title>
		<link>http://softwareengineeringdaily.com/2023/04/13/cloud-cost-management/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=cloud-cost-management</link>
		<pubDate>Thu, 13 Apr 2023 13:26:24 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=14951</guid>
		<comments>http://softwareengineeringdaily.com/2023/04/13/cloud-cost-management/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2023/04/13/cloud-cost-management/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[Alex DeBrie]]></category>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Podcast]]></category>
		<category><![CDATA[Uncategorized]]></category>
		<category><![CDATA[fineout]]></category>
		<category><![CDATA[Roi Ravhon]]></category>
		<description>&lt;p&gt;Finout helps FinOps, DevOps, and Finance to manage &amp; reduce cloud spend and improve the company’s profitability without adding code or changing existing tags. Roi Ravhon is the Co-founder and CEO at Finout and he joins us today. Full disclosure: Finout is a sponsor of Software Engineering Daily. Alex is an AWS Data Hero, an&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2023/04/13/cloud-cost-management/&quot;&gt;Cloud Cost Management with Roi Ravhon&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<p><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/04/roi.png"><img decoding="async" loading="lazy" class="alignright size-full wp-image-14955" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/04/roi.png?resize=218%2C258" alt="" width="218" height="258" data-recalc-dims="1" /></a><a href="https://www.finout.io/">Finout</a> helps FinOps, DevOps, and Finance to manage &amp; reduce cloud spend and improve the company&#8217;s profitability without adding code or changing existing tags.</p>
<p><a href="https://twitter.com/roiravhon?ref_src=twsrc%5Egoogle%7Ctwcamp%5Eserp%7Ctwgr%5Eauthor">Roi Ravhon</a> is the Co-founder and CEO at Finout and he joins us today.</p>
<p><em>Full disclosure: Finout is a sponsor of Software Engineering Daily.</em></p>
<div>
<p><span style="font-weight: 400;"><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/04/alex.png"><img decoding="async" loading="lazy" class="size-full wp-image-14922 alignleft" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/04/alex.png?resize=218%2C258&#038;ssl=1" alt="" width="218" height="258" data-recalc-dims="1" /></a>Alex is an AWS Data Hero, an independent consultant, and the author of </span><a href="https://www.dynamodbbook.com/"><span style="font-weight: 400;">The DynamoDB Book</span></a><span style="font-weight: 400;">, the comprehensive guide to data modeling with DynamoDB. He was an early employee at Serverless, Inc., creators of the Serverless Framework, and was an early community member in the serverless space. His consulting and training work focuses on serverless architectures and database optimization. You can find him on Twitter as </span><a href="https://twitter.com/alexbdebrie"><span style="font-weight: 400;">@alexbdebrie</span></a><span style="font-weight: 400;"> or on his site, </span><a href="https://www.alexdebrie.com/"><span style="font-weight: 400;">alexdebrie.com</span></a><span style="font-weight: 400;">.</span></p>
</div>
<div></div>
<div style="text-align: center;">Sponsorship inquiries: <a href="https://cms.megaphone.fm/organizations/619b680e-d813-11ea-9750-e7ecac406436/podcasts/e60108fe-e328-11ea-b2b6-1348249f900a/episodes/3913370a-bc44-11ed-ace6-8b1f96d82bba/sponsor@softwareengineeringdaily.com" target="_blank" rel="noopener noreferrer">sponsor@softwareengineeringdaily.com</a></div>
<div>
<p style="text-align: center;">
</div>
<p style="text-align: center;">
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2023/04/13/cloud-cost-management/">Cloud Cost Management with Roi Ravhon</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED7322201967.mp3" length="63709980" type="audio/mpeg" />
		<itunes:subtitle>Finout helps FinOps, DevOps, and Finance to manage &amp; reduce cloud spend and improve the company’s profitability without adding code or changing existing tags. Roi Ravhon is the Co-founder and CEO at Finout and he joins us today.</itunes:subtitle>
		<itunes:summary>Finout helps FinOps, DevOps, and Finance to manage &amp; reduce cloud spend and improve the company’s profitability without adding code or changing existing tags. Roi Ravhon is the Co-founder and CEO at Finout and he joins us today. Full disclosure: Finout is a sponsor of Software Engineering Daily. Alex is an AWS Data Hero, an</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>44:11</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">14951</post-id>	</item>
	<item>
		<title>Data Activation with Tejas Manohar</title>
		<link>http://softwareengineeringdaily.com/2023/04/13/data-activation-with-tejas-manohar/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=data-activation-with-tejas-manohar</link>
		<pubDate>Thu, 13 Apr 2023 13:09:16 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=14952</guid>
		<comments>http://softwareengineeringdaily.com/2023/04/13/data-activation-with-tejas-manohar/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2023/04/13/data-activation-with-tejas-manohar/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[Alex DeBrie]]></category>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Podcast]]></category>
		<category><![CDATA[Uncategorized]]></category>
		<category><![CDATA[Data Activation]]></category>
		<category><![CDATA[Hightouch]]></category>
		<category><![CDATA[reverse ETL]]></category>
		<category><![CDATA[Tejas Manohar]]></category>
		<description>&lt;p&gt;Data Activation is the method of unlocking the knowledge sorted within your data warehouse, and making it actionable by your business users in the end tools that they use every day. In doing so, Data Activation helps bring data people toward the center of the business, directly tying their work to business outcomes. Hightouch is&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2023/04/13/data-activation-with-tejas-manohar/&quot;&gt;Data Activation with Tejas Manohar&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<p><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/04/tejas.png"><img decoding="async" loading="lazy" class="alignright size-full wp-image-14954" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/04/tejas.png?resize=218%2C258" alt="" width="218" height="258" data-recalc-dims="1" /></a>Data Activation is the method of unlocking the knowledge sorted within your data warehouse, and making it actionable by your business users in the end tools that they use every day. In doing so, Data Activation helps bring data people toward the center of the business, directly tying their work to business outcomes.</p>
<p><a href="https://hightouch.com/">Hightouch</a> is the simplest and fastest way to get started with Data Activation. As a Data Activation Platform, Hightouch uses Reverse ETL to sync data from the warehouse to 100+ different integrations. With Hightouch companies can leverage their existing data models and easily view and monitor all of their data syncs in a single platform. Better yet, Hightouch offers a visual audience builder that makes it easy for non-technical users to create custom audiences at moment&#8217;s notice.</p>
<p><a href="https://twitter.com/tejasmanohar?lang=en">Tejas Manohar</a> is the CEO at Hightouch and he joins us today.</p>
<p><em>Full disclosure: Hightouch is a sponsor of Software Engineering Daily.</em></p>
<div>
<p><span style="font-weight: 400;"><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/04/alex.png"><img decoding="async" loading="lazy" class="size-full wp-image-14922 alignleft" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/04/alex.png?resize=218%2C258&#038;ssl=1" alt="" width="218" height="258" data-recalc-dims="1" /></a>Alex is an AWS Data Hero, an independent consultant, and the author of </span><a href="https://www.dynamodbbook.com/"><span style="font-weight: 400;">The DynamoDB Book</span></a><span style="font-weight: 400;">, the comprehensive guide to data modeling with DynamoDB. He was an early employee at Serverless, Inc., creators of the Serverless Framework, and was an early community member in the serverless space. His consulting and training work focuses on serverless architectures and database optimization. You can find him on Twitter as </span><a href="https://twitter.com/alexbdebrie"><span style="font-weight: 400;">@alexbdebrie</span></a><span style="font-weight: 400;"> or on his site, </span><a href="https://www.alexdebrie.com/"><span style="font-weight: 400;">alexdebrie.com</span></a><span style="font-weight: 400;">.</span></p>
</div>
<div></div>
<div style="text-align: center;">Sponsorship inquiries: <a href="https://cms.megaphone.fm/organizations/619b680e-d813-11ea-9750-e7ecac406436/podcasts/e60108fe-e328-11ea-b2b6-1348249f900a/episodes/3913370a-bc44-11ed-ace6-8b1f96d82bba/sponsor@softwareengineeringdaily.com" target="_blank" rel="noopener noreferrer">sponsor@softwareengineeringdaily.com</a></div>
<div>
<p style="text-align: center;">
</div>
<div class="module-message__buttons module-message__buttons--incoming"></div>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2023/04/13/data-activation-with-tejas-manohar/">Data Activation with Tejas Manohar</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED8622686911.mp3" length="63852309" type="audio/mpeg" />
		<itunes:subtitle>Data Activation is the method of unlocking the knowledge sorted within your data warehouse, and making it actionable by your business users in the end tools that they use every day. In doing so, Data Activation helps bring data people toward the center...</itunes:subtitle>
		<itunes:summary>Data Activation is the method of unlocking the knowledge sorted within your data warehouse, and making it actionable by your business users in the end tools that they use every day. In doing so, Data Activation helps bring data people toward the center of the business, directly tying their work to business outcomes. Hightouch is</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>44:17</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">14952</post-id>	</item>
	<item>
		<title>Unified DataOps for Teams and Enterprise with Estuary.dev</title>
		<link>http://softwareengineeringdaily.com/2023/04/10/unified-dataops/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=unified-dataops</link>
		<pubDate>Mon, 10 Apr 2023 18:17:05 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=14947</guid>
		<comments>http://softwareengineeringdaily.com/2023/04/10/unified-dataops/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2023/04/10/unified-dataops/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Jocelyn Byrne Houle]]></category>
		<category><![CDATA[Podcast]]></category>
		<category><![CDATA[data]]></category>
		<category><![CDATA[dataops]]></category>
		<category><![CDATA[Enterprise]]></category>
		<category><![CDATA[Estuary.dev]]></category>
		<description>&lt;p&gt;Enabling data engineers to create data pipelines easily while delivering data streams that meet low-latency, production requirements is a difficult balancing act. David Yaffe and Johnny Gaettinger join us today to share how they have created that balance at Estuary. Estuary is a data operations platform that synchronizes data across the systems where data lives&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2023/04/10/unified-dataops/&quot;&gt;Unified DataOps for Teams and Enterprise with Estuary.dev&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<div class="module-message__container-outer">
<div class="module-message__container module-message__container--incoming" tabindex="-1" role="row">
<div class="module-message__text module-message__text--incoming" style="text-align: left;">Enabling data engineers to create data pipelines easily while delivering data streams that meet low-latency, production requirements is a difficult balancing act. <a href="https://twitter.com/dyaffe">David Yaffe</a> and <a href="https://www.linkedin.com/in/johngraettinger/">Johnny Gaettinger</a> join us today to share how they have created that balance at <a href="https://estuary.dev/">Estuary</a>.<br />
Estuary is a data operations platform that synchronizes data across the systems where data lives and delivers it where you want it to live with sub second low latency. Dave and Johnny will share the technical choices that support sub second performance, use cases for batch and streaming data applications and some of their business perspective as an early stage start-up.</div>
</div>
</div>
<div class="module-message__metadata module-message__metadata--inline"></div>
<div>
<p><span style="font-weight: 400;"><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/04/jocelyn.png"><img decoding="async" loading="lazy" class="size-full wp-image-14942 alignleft" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/04/jocelyn.png?resize=209%2C249&#038;ssl=1" alt="" width="209" height="249" data-recalc-dims="1" /></a></span></p>
<p><span style="font-weight: 400;">Starting her career as a software developer, Jocelyn Houle is now a Senior Director of Product Management at <a href="https://securiti.ai/">Securiti.ai</a>,</span><span style="font-weight: 400;"> a unified data protection and governance platform. Before that, she was an Operating Partner at <a href="https://growthventures.capitalone.com/">Capital One Ventures</a></span><span style="font-weight: 400;"> investing in data and AI startups. Jocelyn has been a founder of two startups and a full life cycle, technical product manager at large companies like Fannie Mae, Microsoft and Capital One. Follow Jocelyn on <a href="https://www.linkedin.com/in/jocelyn/">Linkedin</a></span><a style="font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen-Sans, Ubuntu, Cantarell, 'Helvetica Neue', sans-serif;" href="https://www.linkedin.com/in/jocelyn/"> </a><span style="font-weight: 400;">or Twitter <a href="https://twitter.com/jocelynbyrne">@jocelynbyrne</a></span></p>
<p style="text-align: center;">Sponsorship inquiries: <a href="https://cms.megaphone.fm/organizations/619b680e-d813-11ea-9750-e7ecac406436/podcasts/e60108fe-e328-11ea-b2b6-1348249f900a/episodes/3913370a-bc44-11ed-ace6-8b1f96d82bba/sponsor@softwareengineeringdaily.com" target="_blank" rel="noopener noreferrer">sponsor@softwareengineeringdaily.com</a></p>
</div>
<div class="module-message__buttons module-message__buttons--incoming"></div>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2023/04/10/unified-dataops/">Unified DataOps for Teams and Enterprise with Estuary.dev</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED3703501986.mp3" length="93365614" type="audio/mpeg" />
		<itunes:subtitle>Enabling data engineers to create data pipelines easily while delivering data streams that meet low-latency, production requirements is a difficult balancing act. David Yaffe and Johnny Gaettinger join us today to share how they have created that balan...</itunes:subtitle>
		<itunes:summary>Enabling data engineers to create data pipelines easily while delivering data streams that meet low-latency, production requirements is a difficult balancing act. David Yaffe and Johnny Gaettinger join us today to share how they have created that balance at Estuary. Estuary is a data operations platform that synchronizes data across the systems where data lives</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>1:04:46</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">14947</post-id>	</item>
	<item>
		<title>Self-Service Data Culture with Stemma’s Mark Grover</title>
		<link>http://softwareengineeringdaily.com/2023/04/07/self-service-data-culture/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=self-service-data-culture</link>
		<pubDate>Fri, 07 Apr 2023 09:00:15 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=14943</guid>
		<comments>http://softwareengineeringdaily.com/2023/04/07/self-service-data-culture/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2023/04/07/self-service-data-culture/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Jocelyn Byrne Houle]]></category>
		<category><![CDATA[Podcast]]></category>
		<category><![CDATA[data]]></category>
		<category><![CDATA[data catalog]]></category>
		<category><![CDATA[Mark Grover]]></category>
		<category><![CDATA[Stemma]]></category>
		<description>&lt;p&gt;A data catalog provides an index into the data sets and schemas of a company.Data teams are growing in size, and more companies than ever have a data team, so the market for data catalog is larger than ever. Mark is the CEO of Stemma and the co-creator of Amundsen, a data catalog that came&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2023/04/07/self-service-data-culture/&quot;&gt;Self-Service Data Culture with Stemma’s Mark Grover&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<p><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/04/mark.png"><img decoding="async" loading="lazy" class="alignright size-full wp-image-14944" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/04/mark.png?resize=218%2C258" alt="" width="218" height="258" data-recalc-dims="1" /></a>A data catalog provides an index into the data sets and schemas of a company.Data teams are growing in size, and more companies than ever have a data team, so the market for data catalog is larger than ever.</p>
<p><a href="https://twitter.com/mark_grover?lang=en">Mark</a> is the CEO of <a href="https://www.stemma.ai/">Stemma</a> and the co-creator of Amundsen, a data catalog that came out of Lyft. In today’s show Mark shares how his history as a software developer, data engineer and product leader at Lyft have helped him create a vision for a modern data catalog.</p>
<p><span style="font-weight: 400;"><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/04/jocelyn.png"><img decoding="async" loading="lazy" class="size-full wp-image-14942 alignleft" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/04/jocelyn.png?resize=209%2C249&#038;ssl=1" alt="" width="209" height="249" data-recalc-dims="1" /></a></span></p>
<p><span style="font-weight: 400;">Starting her career as a software developer, Jocelyn Houle is now a Senior Director of Product Management at <a href="https://securiti.ai/">Securit.ai</a>,</span><span style="font-weight: 400;"> a unified data protection and governance platform. Before that, she was an Operating Partner at <a href="https://growthventures.capitalone.com/">Capital One Ventures</a></span><span style="font-weight: 400;"> investing in data and AI startups. Jocelyn has been a founder of two startups and a full life cycle, technical product manager at large companies like Fannie Mae, Microsoft and Capital One. Follow Jocelyn on <a href="https://www.linkedin.com/in/jocelyn/">Linkedin</a></span><a style="font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen-Sans, Ubuntu, Cantarell, 'Helvetica Neue', sans-serif;" href="https://www.linkedin.com/in/jocelyn/"> </a><span style="font-weight: 400;">or Twitter <a href="https://twitter.com/jocelynbyrne">@jocelynbyrne</a></span></p>
<p style="text-align: center;">Sponsorship inquiries: <a href="https://cms.megaphone.fm/organizations/619b680e-d813-11ea-9750-e7ecac406436/podcasts/e60108fe-e328-11ea-b2b6-1348249f900a/episodes/3913370a-bc44-11ed-ace6-8b1f96d82bba/sponsor@softwareengineeringdaily.com" target="_blank" rel="noopener noreferrer">sponsor@softwareengineeringdaily.com</a></p>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2023/04/07/self-service-data-culture/">Self-Service Data Culture with Stemma’s Mark Grover</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED6900254679.mp3" length="75719603" type="audio/mpeg" />
		<itunes:subtitle>A data catalog provides an index into the data sets and schemas of a company.Data teams are growing in size, and more companies than ever have a data team, so the market for data catalog is larger than ever.</itunes:subtitle>
		<itunes:summary>A data catalog provides an index into the data sets and schemas of a company.Data teams are growing in size, and more companies than ever have a data team, so the market for data catalog is larger than ever. Mark is the CEO of Stemma and the co-creator of Amundsen, a data catalog that came</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>52:31</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">14943</post-id>	</item>
	<item>
		<title>Streaming Analytics with Hojjat Jafarpour</title>
		<link>http://softwareengineeringdaily.com/2023/04/06/streaming-analytics/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=streaming-analytics</link>
		<pubDate>Thu, 06 Apr 2023 18:16:38 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=14843</guid>
		<comments>http://softwareengineeringdaily.com/2023/04/06/streaming-analytics/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2023/04/06/streaming-analytics/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Data]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Jocelyn Byrne Houle]]></category>
		<category><![CDATA[Podcast]]></category>
		<category><![CDATA[Uncategorized]]></category>
		<category><![CDATA[Apache Kafka]]></category>
		<category><![CDATA[DeltaStream]]></category>
		<category><![CDATA[Hojjat Jafarpour]]></category>
		<category><![CDATA[Streaming]]></category>
		<description>&lt;p&gt;Streaming analytics refers to the process of analyzing real-time data that is generated continuously and rapidly from various sources, such as sensors, applications, social media, and other internet-connected devices. Streaming analytics platforms enable organizations to extract business value from data in motion, similar to how traditional analytics tools derive insights from data at rest. DeltaStream&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2023/04/06/streaming-analytics/&quot;&gt;Streaming Analytics with Hojjat Jafarpour&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<div>
<p><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/03/hojjat.png"><img decoding="async" loading="lazy" class="alignright size-full wp-image-14863" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/03/hojjat.png?resize=218%2C258&#038;ssl=1" alt="" width="218" height="258" data-recalc-dims="1" /></a></p>
<div>Streaming analytics refers to the process of analyzing real-time data that is generated continuously and rapidly from various sources, such as sensors, applications, social media, and other internet-connected devices. Streaming analytics platforms enable organizations to extract business value from data in motion, similar to how traditional analytics tools derive insights from data at rest. DeltaStream is a unified serverless stream processing platform to manage, secure and process all your event streams and is based on Apache Flink.<br />
<a href="https://mobile.twitter.com/Hojjat">Hojjat Jafarpour</a> is the Founder and CEO at <a href="https://www.deltastream.io/">DeltaStream</a> and he joins us today. Before joining DeltaStream, Hojjat was at Confluent, the company behind Apache Kafka, he built a product called ksqlDB, ksqlDB is a database built to do Stream processing on top of Apache Kafka.</div>
</div>
<p>&nbsp;</p>
<div><span style="font-weight: 400;"><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/04/jocelyn.png"><img decoding="async" loading="lazy" class="size-full wp-image-14942 alignleft" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/04/jocelyn.png?resize=209%2C249&#038;ssl=1" alt="" width="209" height="249" data-recalc-dims="1" /></a>Starting her career as a software developer, Jocelyn Houle is now a Senior Director of Product Management at <a href="https://securiti.ai/">Securiti.ai</a>,</span><span style="font-weight: 400;"> a unified data protection and governance platform. Before that, she was an Operating Partner at <a href="https://growthventures.capitalone.com/">Capital One Ventures</a></span><span style="font-weight: 400;"> investing in data and AI startups. Jocelyn has been a founder of two startups and a full life cycle, technical product manager at large companies like Fannie Mae, Microsoft and Capital One. Follow Jocelyn on <a href="https://www.linkedin.com/in/jocelyn/">Linkedin</a></span><a style="font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen-Sans, Ubuntu, Cantarell, 'Helvetica Neue', sans-serif;" href="https://www.linkedin.com/in/jocelyn/"> </a><span style="font-weight: 400;">or Twitter <a href="https://twitter.com/jocelynbyrne">@jocelynbyrne</a></span></div>
<div></div>
<div></div>
<p>&nbsp;</p>
<div style="text-align: center;">Sponsorship inquiries: <a href="https://cms.megaphone.fm/organizations/619b680e-d813-11ea-9750-e7ecac406436/podcasts/e60108fe-e328-11ea-b2b6-1348249f900a/episodes/3913370a-bc44-11ed-ace6-8b1f96d82bba/sponsor@softwareengineeringdaily.com" target="_blank" rel="noopener noreferrer">sponsor@softwareengineeringdaily.com</a></div>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2023/04/06/streaming-analytics/">Streaming Analytics with Hojjat Jafarpour</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED8893618540.mp3" length="67482189" type="audio/mpeg" />
		<itunes:subtitle>Streaming analytics refers to the process of analyzing real-time data that is generated continuously and rapidly from various sources, such as sensors, applications, social media, and other internet-connected devices.</itunes:subtitle>
		<itunes:summary>Streaming analytics refers to the process of analyzing real-time data that is generated continuously and rapidly from various sources, such as sensors, applications, social media, and other internet-connected devices. Streaming analytics platforms enable organizations to extract business value from data in motion, similar to how traditional analytics tools derive insights from data at rest. DeltaStream</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>46:48</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">14843</post-id>	</item>
	<item>
		<title>Observability via Snapshots with Liran Haimovitch</title>
		<link>http://softwareengineeringdaily.com/2023/04/05/observability-via-snapshots/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=observability-via-snapshots</link>
		<pubDate>Wed, 05 Apr 2023 20:10:08 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=14928</guid>
		<comments>http://softwareengineeringdaily.com/2023/04/05/observability-via-snapshots/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2023/04/05/observability-via-snapshots/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Mike Bifulco]]></category>
		<category><![CDATA[Podcast]]></category>
		<category><![CDATA[Uncategorized]]></category>
		<category><![CDATA[Liran Haimovitch]]></category>
		<category><![CDATA[observability]]></category>
		<category><![CDATA[Rookout]]></category>
		<category><![CDATA[Snapshots]]></category>
		<description>&lt;p&gt;Observability refers to the capability of comprehending the internal functioning of a complex system by observing its external outputs. Observability tools help developers understand the entire scenario of an application by digging into the data that is being used and recorded. And can help pipe data across various solutions used within enterprises to read and&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2023/04/05/observability-via-snapshots/&quot;&gt;Observability via Snapshots with Liran Haimovitch&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<p><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/08/Liran-Haimovitch.png"><img decoding="async" loading="lazy" class="size-full wp-image-14346 alignright" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/08/Liran-Haimovitch.png?resize=218%2C258&#038;ssl=1" alt="" width="218" height="258" data-recalc-dims="1" /></a>Observability refers to the capability of comprehending the internal functioning of a complex system by observing its external outputs. Observability tools help developers understand the entire scenario of an application by digging into the data that is being used and recorded. And can help pipe data across various solutions used within enterprises to read and discover what’s going on from analytics.<br />
<a href="https://www.rookout.com/">Rookout</a> is an observability platform with a developer-first approach that empowers you to collect any data point, even from the most intricate levels of live code, in real time and as needed.<br />
<a href="https://twitter.com/Liran_Last?ref_src=twsrc%5Egoogle%7Ctwcamp%5Eserp%7Ctwgr%5Eauthor">Liran Haimovitch</a> is the CTO at Rookout, and he joins us today. We discuss about Rookouts recent offering called <a href="https://www.rookout.com/blog/announcing-smart-snapshots/">Snapshots</a>. Rookout calls this the fourth pillar of Observability. With Snapshots, developers can accurately and quickly capture application state with outstanding performance and built-in security.</p>
<p><span style="font-weight: 400;"><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/04/mike.png"><img decoding="async" loading="lazy" class="size-full wp-image-14930 alignleft" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/04/mike.png?resize=218%2C258&#038;ssl=1" alt="" width="218" height="258" data-recalc-dims="1" /></a>Mike Bifulco is CTO and co-founder of </span><a href="https://craftwork.com"><span style="font-weight: 400;">Craftwork</span></a><span style="font-weight: 400;">. He&#8217;s also a developer advocate, writer, podcaster and serial startup founder. In past lives, Mike worked for Google, Stripe, Microsoft, and Gymnasium. Mike is also co-founder of </span><a href="https://apisyouwonthate.com"><span style="font-weight: 400;">APIs You Won&#8217;t Hate</span></a><span style="font-weight: 400;">, a community for API Developers on the web. Mike&#8217;s publishes a weekly newsletter for product builders called </span><a href="https://mikebifulco.com/newsletter"><span style="font-weight: 400;">Tiny Improvements</span></a><span style="font-weight: 400;"> at </span><a href="https://mikebifulco.com"><span style="font-weight: 400;">mikebifulco.com</span></a><span style="font-weight: 400;">. Mike is on Mastodon at <a href="https://hachyderm.io/@irreverentmike">https://hachyderm.io/@irreverentmike</a> </span></p>
<p style="text-align: center;">Sponsorship inquiries: <a href="https://cms.megaphone.fm/organizations/619b680e-d813-11ea-9750-e7ecac406436/podcasts/e60108fe-e328-11ea-b2b6-1348249f900a/episodes/3913370a-bc44-11ed-ace6-8b1f96d82bba/sponsor@softwareengineeringdaily.com" target="_blank" rel="noopener noreferrer">sponsor@softwareengineeringdaily.com</a></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2023/04/05/observability-via-snapshots/">Observability via Snapshots with Liran Haimovitch</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED1415782358.mp3" length="51360976" type="audio/mpeg" />
		<itunes:subtitle>Observability refers to the capability of comprehending the internal functioning of a complex system by observing its external outputs. Observability tools help developers understand the entire scenario of an application by digging into the data that i...</itunes:subtitle>
		<itunes:summary>Observability refers to the capability of comprehending the internal functioning of a complex system by observing its external outputs. Observability tools help developers understand the entire scenario of an application by digging into the data that is being used and recorded. And can help pipe data across various solutions used within enterprises to read and</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>35:36</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">14928</post-id>	</item>
	<item>
		<title>Turso: Globally Replicated SQLite with Glauber Costa</title>
		<link>http://softwareengineeringdaily.com/2023/04/03/turso-globally-replicated-sqlite/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=turso-globally-replicated-sqlite</link>
		<pubDate>Mon, 03 Apr 2023 19:35:41 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=14918</guid>
		<comments>http://softwareengineeringdaily.com/2023/04/03/turso-globally-replicated-sqlite/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2023/04/03/turso-globally-replicated-sqlite/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[Alex DeBrie]]></category>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Data]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Podcast]]></category>
		<category><![CDATA[Databases]]></category>
		<category><![CDATA[edge]]></category>
		<category><![CDATA[Glauber Costa]]></category>
		<category><![CDATA[Turso]]></category>
		<description>&lt;p&gt;Distributed databases are necessary for storing and managing data across multiple nodes in a network. They provide scalability, fault tolerance, improved performance, and cost savings. By distributing data across nodes, they allow for efficient processing of large amounts of data and redundancy against failures. They can also be used to store data across multiple locations&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2023/04/03/turso-globally-replicated-sqlite/&quot;&gt;Turso: Globally Replicated SQLite with Glauber Costa&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<p><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/04/glauber_costa.png"><img decoding="async" loading="lazy" class="alignright size-full wp-image-14919" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/04/glauber_costa.png?resize=218%2C258&#038;ssl=1" alt="" width="218" height="258" data-recalc-dims="1" /></a>Distributed databases are necessary for storing and managing data across multiple nodes in a network. They provide scalability, fault tolerance, improved performance, and cost savings. By distributing data across nodes, they allow for efficient processing of large amounts of data and redundancy against failures. They can also be used to store data across multiple locations for faster access and better performance.</p>
<p>Turso is an edge-hosted, distributed database based on libSQL, an open-source and open-contribution fork of SQLite. It was designed to minimize query latency for applications where queries come from anywhere in the world. In particular, it works well with edge functions provided by cloud platforms such as CloudFlare, Netlify, and Vercel, by putting your data geographically close to the code that accesses it.</p>
<p><a href="https://twitter.com/glcst">Glauber Costa</a> is the Founder and CEO of <a href="https://chiselstrike.com/">ChiselStrike</a> the company behind Turso, and he joins us today.</p>
<p><em>Full disclosure: ChiselStrike is a sponsor of Software Engineering Daily.</em></p>
<div>
<div>
<div>
<p><span style="font-weight: 400;"><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/04/alex.png"><img decoding="async" loading="lazy" class="size-full wp-image-14922 alignleft" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/04/alex.png?resize=218%2C258&#038;ssl=1" alt="" width="218" height="258" data-recalc-dims="1" /></a>Alex is an AWS Data Hero, an independent consultant, and the author of </span><a href="https://www.dynamodbbook.com/"><span style="font-weight: 400;">The DynamoDB Book</span></a><span style="font-weight: 400;">, the comprehensive guide to data modeling with DynamoDB. He was an early employee at Serverless, Inc., creators of the Serverless Framework, and was an early community member in the serverless space. His consulting and training work focuses on serverless architectures and database optimization. You can find him on Twitter as </span><a href="https://twitter.com/alexbdebrie"><span style="font-weight: 400;">@alexbdebrie</span></a><span style="font-weight: 400;"> or on his site, </span><a href="https://www.alexdebrie.com/"><span style="font-weight: 400;">alexdebrie.com</span></a><span style="font-weight: 400;">.</span></p>
</div>
<div></div>
<div style="text-align: center;">Sponsorship inquiries: <a href="https://cms.megaphone.fm/organizations/619b680e-d813-11ea-9750-e7ecac406436/podcasts/e60108fe-e328-11ea-b2b6-1348249f900a/episodes/3913370a-bc44-11ed-ace6-8b1f96d82bba/sponsor@softwareengineeringdaily.com" target="_blank" rel="noopener noreferrer">sponsor@softwareengineeringdaily.com</a></div>
</div>
<div></div>
</div>
<div></div>
<div></div>
<div></div>
<div></div>
<div></div>
<div></div>
<div>
<p>&nbsp;</p>
</div>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2023/04/03/turso-globally-replicated-sqlite/">Turso: Globally Replicated SQLite with Glauber Costa</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED4552038540.mp3" length="81027586" type="audio/mpeg" />
		<itunes:subtitle>Distributed databases are necessary for storing and managing data across multiple nodes in a network. They provide scalability, fault tolerance, improved performance, and cost savings. By distributing data across nodes,</itunes:subtitle>
		<itunes:summary>Distributed databases are necessary for storing and managing data across multiple nodes in a network. They provide scalability, fault tolerance, improved performance, and cost savings. By distributing data across nodes, they allow for efficient processing of large amounts of data and redundancy against failures. They can also be used to store data across multiple locations</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>56:12</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">14918</post-id>	</item>
	<item>
		<title>Platform Engineering with Luca Galante</title>
		<link>http://softwareengineeringdaily.com/2023/03/31/platform-engineering/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=platform-engineering</link>
		<pubDate>Fri, 31 Mar 2023 09:00:49 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=14912</guid>
		<comments>http://softwareengineeringdaily.com/2023/03/31/platform-engineering/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2023/03/31/platform-engineering/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Podcast]]></category>
		<category><![CDATA[Sean Falconer]]></category>
		<category><![CDATA[cloud-native architectures]]></category>
		<category><![CDATA[Luca Galante]]></category>
		<category><![CDATA[nternal Developer Platform]]></category>
		<category><![CDATA[platform engineering]]></category>
		<description>&lt;p&gt;The increasing complexity of modern cloud-native architectures has led to the emergence Platform Engineering. This practice involves the development and upkeep of an integrated product, known as an “Internal Developer Platform,” which serves as a flexible and supported abstraction layer between application developers and the underlying technologies. Luca Galante leads Product at Humanitec and he&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2023/03/31/platform-engineering/&quot;&gt;Platform Engineering with Luca Galante&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<p><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/04/luca.png"><img decoding="async" loading="lazy" class="alignright size-full wp-image-14913" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/04/luca.png?resize=218%2C258" alt="" width="218" height="258" data-recalc-dims="1" /></a>The increasing complexity of modern cloud-native architectures has led to the emergence Platform Engineering. This practice involves the development and upkeep of an integrated product, known as an &#8220;Internal Developer Platform,&#8221; which serves as a flexible and supported abstraction layer between application developers and the underlying technologies. <a href="https://twitter.com/luca_cloud?lang=en">Luca Galante</a> leads Product at <a href="https://humanitec.com/">Humanitec</a> and he joins us today.</p>
<p><span style="font-weight: 400;"><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/05/Sean-Falconer.png"><img decoding="async" loading="lazy" class="size-full wp-image-13856 alignleft" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/05/Sean-Falconer.png?resize=218%2C258" alt="" width="218" height="258" data-recalc-dims="1" /></a>Sean&#8217;s been an academic, startup founder, and Googler. He has published works covering a wide range of topics from information visualization to quantum computing. Currently, Sean is Head of Marketing and Developer Relations at <a href="https://www.skyflow.com/">Skyflow</a> and host of the podcast Partially Redacted, a podcast about privacy and security engineering. You can connect with Sean on Twitter <a href="https://twitter.com/seanfalconer">@seanfalconer .</a></span></p>
<p style="text-align: center;">Sponsorship inquiries: <a href="https://cms.megaphone.fm/organizations/619b680e-d813-11ea-9750-e7ecac406436/podcasts/e60108fe-e328-11ea-b2b6-1348249f900a/episodes/3913370a-bc44-11ed-ace6-8b1f96d82bba/sponsor@softwareengineeringdaily.com" target="_blank" rel="noopener noreferrer">sponsor@softwareengineeringdaily.com</a></p>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2023/03/31/platform-engineering/">Platform Engineering with Luca Galante</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED4106981374.mp3" length="80429125" type="audio/mpeg" />
		<itunes:subtitle>The increasing complexity of modern cloud-native architectures has led to the emergence Platform Engineering. This practice involves the development and upkeep of an integrated product, known as an “Internal Developer Platform,</itunes:subtitle>
		<itunes:summary>The increasing complexity of modern cloud-native architectures has led to the emergence Platform Engineering. This practice involves the development and upkeep of an integrated product, known as an “Internal Developer Platform,” which serves as a flexible and supported abstraction layer between application developers and the underlying technologies. Luca Galante leads Product at Humanitec and he</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>55:47</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">14912</post-id>	</item>
	<item>
		<title>Hardening C++ with Bjarne Stroustrup</title>
		<link>http://softwareengineeringdaily.com/2023/03/28/hardening-c-with-bjarne-stroustrup/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=hardening-c-with-bjarne-stroustrup</link>
		<pubDate>Tue, 28 Mar 2023 15:15:33 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=14905</guid>
		<comments>http://softwareengineeringdaily.com/2023/03/28/hardening-c-with-bjarne-stroustrup/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2023/03/28/hardening-c-with-bjarne-stroustrup/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Greatest Hits]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Jordi Mon Companys]]></category>
		<category><![CDATA[Podcast]]></category>
		<category><![CDATA[Bjarne Stroustrup]]></category>
		<category><![CDATA[C#]]></category>
		<category><![CDATA[modern computing]]></category>
		<category><![CDATA[programming]]></category>
		<description>&lt;p&gt;C++ is a powerful programming language that has been in use for several decades. Its importance lies in its versatility and efficiency, making it a popular choice for developing software and systems across different domains. The impact of C++ is significant, as it has been used to create numerous high-performance applications, including operating systems, browsers,&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2023/03/28/hardening-c-with-bjarne-stroustrup/&quot;&gt;Hardening C++ with Bjarne Stroustrup&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<p><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/03/bjarne.png"><img decoding="async" loading="lazy" class="alignright size-full wp-image-14906" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/03/bjarne.png?resize=218%2C258&#038;ssl=1" alt="" width="218" height="258" data-recalc-dims="1" /></a>C++ is a powerful programming language that has been in use for several decades. Its importance lies in its versatility and efficiency, making it a popular choice for developing software and systems across different domains. The impact of C++ is significant, as it has been used to create numerous high-performance applications, including operating systems, browsers, gaming engines, and financial systems. It has also played a crucial role in the development of the internet and the growth of modern computing.</p>
<p>In a recent development the NSA <a href="https://www.nsa.gov/Press-Room/News-Highlights/Article/Article/3215760/nsa-releases-guidance-on-how-to-protect-against-software-memory-safety-issues/">indirectly asked developers</a> to use memory safe languages whenever possible because hackers frequently exploit memory issues. In this episode, we’ll discuss these safety issues with the creator of C++ <a href="https://twitter.com/stroustrup?lang=en">Bjarne Stroupstrup</a>.</p>
<p><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/03/jordi.png"><img decoding="async" loading="lazy" class="size-full wp-image-14908 alignleft" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/03/jordi.png?resize=218%2C258&#038;ssl=1" alt="" width="218" height="258" data-recalc-dims="1" /></a><a href="https://www.linkedin.com/in/jordimoncompanys/"><span style="font-weight: 400;">Jordi Mon Companys</span></a><span style="font-weight: 400;"> is a product manager and marketer that specializes in software delivery, developer experience, cloud native and open source. He has developed his career at companies like GitLab, Weaveworks, Harness and other platform and devtool providers. His interests range from software supply chain security to open source innovation. You can reach out to him on Twitter at </span><a href="https://twitter.com/JordiMonPMM"><span style="font-weight: 400;">@jordimonpmm</span></a></p>
<p style="text-align: center;">Sponsorship inquiries: <a href="https://cms.megaphone.fm/organizations/619b680e-d813-11ea-9750-e7ecac406436/podcasts/e60108fe-e328-11ea-b2b6-1348249f900a/episodes/3913370a-bc44-11ed-ace6-8b1f96d82bba/sponsor@softwareengineeringdaily.com" target="_blank" rel="noopener noreferrer">sponsor@softwareengineeringdaily.com</a></p>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2023/03/28/hardening-c-with-bjarne-stroustrup/">Hardening C++ with Bjarne Stroustrup</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED3269067673.mp3" length="176682124" type="audio/mpeg" />
		<itunes:subtitle>C++ is a powerful programming language that has been in use for several decades. Its importance lies in its versatility and efficiency, making it a popular choice for developing software and systems across different domains.</itunes:subtitle>
		<itunes:summary>C++ is a powerful programming language that has been in use for several decades. Its importance lies in its versatility and efficiency, making it a popular choice for developing software and systems across different domains. The impact of C++ is significant, as it has been used to create numerous high-performance applications, including operating systems, browsers,</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>1:13:35</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">14905</post-id>	</item>
	<item>
		<title>Seamless SecOps with Jack Naglieri</title>
		<link>http://softwareengineeringdaily.com/2023/03/22/painless-security-operations/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=painless-security-operations</link>
		<pubDate>Wed, 22 Mar 2023 21:17:50 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=14842</guid>
		<comments>http://softwareengineeringdaily.com/2023/03/22/painless-security-operations/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2023/03/22/painless-security-operations/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Jeff Hemmen]]></category>
		<category><![CDATA[Podcast]]></category>
		<category><![CDATA[Uncategorized]]></category>
		<category><![CDATA[Jack Naglieri]]></category>
		<category><![CDATA[Panther Labs]]></category>
		<category><![CDATA[SecOps]]></category>
		<category><![CDATA[SIEM]]></category>
		<description>&lt;p&gt;A SIEM platform provides organizations with a powerful tool for improving their security posture, by providing insights into potential security threats and enabling proactive security measures. Panther is a Cloud based security monitoring platform that helps teams detect and respond to security breaches quickly and intelligently. Jack Naglieri is the Founder and CEO of Panther&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2023/03/22/painless-security-operations/&quot;&gt;Seamless SecOps with Jack Naglieri&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<div><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/09/Jack-Naglieri.png"><img decoding="async" loading="lazy" class="size-full wp-image-14366 alignright" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/09/Jack-Naglieri.png?resize=218%2C258&#038;ssl=1" alt="" width="218" height="258" data-recalc-dims="1" /></a>A SIEM platform provides organizations with a powerful tool for improving their security posture, by providing insights into potential security threats and enabling proactive security measures.<br />
Panther is a Cloud based security monitoring platform that helps teams detect and respond to security breaches quickly and intelligently. <a href="https://www.linkedin.com/in/jacknaglieri/">Jack Naglieri</a> is the Founder and CEO of <a href="https://panther.com/">Panther</a> and he joins us today.</div>
<div></div>
<div></div>
<div><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/09/jeffhemmen.png"><img decoding="async" loading="lazy" class="wp-image-14406 alignleft" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/09/jeffhemmen-253x300.png?resize=200%2C237&#038;ssl=1" alt="" width="200" height="237" srcset="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/09/jeffhemmen.png?resize=253%2C300 253w, https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/09/jeffhemmen.png?w=268 268w" sizes="(max-width: 200px) 100vw, 200px" data-recalc-dims="1" /></a><span style="font-weight: 400;">Jeff is a DevSecOps engineer with strong experience in Security, The Software Development Life Cycle and Cloud Technologies. He&#8217;s an expert in HashiCorp Technologies and is one the most sought after trainers in EMEA and beyond. Jeff has worked for companies ranging from small startups to the biggest financial institutions, he runs his own consultancy that provides services in DevOps, Cloud and Security. Follow Jeff on LinkedIn <a href="https://www.linkedin.com/in/jeffhemmen/">@jeffhemmen</a></span></div>
<div></div>
<div style="text-align: center;">Sponsorship inquiries: <a href="https://cms.megaphone.fm/organizations/619b680e-d813-11ea-9750-e7ecac406436/podcasts/e60108fe-e328-11ea-b2b6-1348249f900a/episodes/3913370a-bc44-11ed-ace6-8b1f96d82bba/sponsor@softwareengineeringdaily.com" target="_blank" rel="noopener noreferrer">sponsor@softwareengineeringdaily.com</a></div>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2023/03/22/painless-security-operations/">Seamless SecOps with Jack Naglieri</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED6262127567.mp3" length="63575881" type="audio/mpeg" />
		<itunes:subtitle>A SIEM platform provides organizations with a powerful tool for improving their security posture, by providing insights into potential security threats and enabling proactive security measures. Panther is a Cloud based security monitoring platform that...</itunes:subtitle>
		<itunes:summary>A SIEM platform provides organizations with a powerful tool for improving their security posture, by providing insights into potential security threats and enabling proactive security measures. Panther is a Cloud based security monitoring platform that helps teams detect and respond to security breaches quickly and intelligently. Jack Naglieri is the Founder and CEO of Panther</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>44:05</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">14842</post-id>	</item>
	<item>
		<title>Observability Trends with John Hart</title>
		<link>http://softwareengineeringdaily.com/2023/03/20/observability-trends/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=observability-trends</link>
		<pubDate>Mon, 20 Mar 2023 19:14:03 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=14850</guid>
		<comments>http://softwareengineeringdaily.com/2023/03/20/observability-trends/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2023/03/20/observability-trends/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Data]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Lee Atchison]]></category>
		<category><![CDATA[Podcast]]></category>
		<category><![CDATA[Uncategorized]]></category>
		<category><![CDATA[data]]></category>
		<category><![CDATA[dataset]]></category>
		<category><![CDATA[DevOps]]></category>
		<category><![CDATA[John Hart]]></category>
		<description>&lt;p&gt;DataSet is a log analytics platform provided by Sentinel One that helps DevOps, IT engineering, and security teams get answers from their data across all time periods, both live streaming and historical. It’s powered by a unique architecture that uses a massively parallel query engine to provide actionable insights from the data available. John Hart&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2023/03/20/observability-trends/&quot;&gt;Observability Trends with John Hart&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<p><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/03/john_hart.png"><img decoding="async" loading="lazy" class="alignright size-full wp-image-14853" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/03/john_hart.png?resize=218%2C258&#038;ssl=1" alt="" width="218" height="258" data-recalc-dims="1" /></a>DataSet is a log analytics platform provided by Sentinel One that helps DevOps, IT engineering, and security teams get answers from their data across all time periods, both live streaming and historical. It&#8217;s powered by a unique architecture that uses a massively parallel query engine to provide actionable insights from the data available.</p>
<p><a href="https://www.linkedin.com/in/john-hart-6873a530/">John Hart</a> is a distinguished engineer leading the Event DB team, where he&#8217;s responsible for the time series database that powers the Dataset product. John is our guest here today.</p>
<p><em>Full disclosure: SentinelOne is a sponsor of Software Engineering Daily.</em></p>
<p><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/02/lee.jpg"><img decoding="async" loading="lazy" class="size-medium wp-image-13263 alignleft" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/02/lee-253x300.jpg?resize=253%2C300&#038;ssl=1" alt="" width="253" height="300" srcset="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/02/lee.jpg?resize=253%2C300 253w, https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/02/lee.jpg?w=268 268w" sizes="(max-width: 253px) 100vw, 253px" data-recalc-dims="1" /></a>This episode is hosted by Lee Atchison. Lee Atchison is a software architect, author, and thought leader on cloud computing and application modernization. His most recent book, <a href="https://leeatchison.com//ref-amzn-arch-for-scale">Architecting for Scale</a> (O’Reilly Media) is an essential resource for technical teams looking to maintain high availability and manage risk in their cloud environments.<br />
Lee is the host of his podcast, <a href="https://mdb.fm/?utm_campaign=swengdaily&amp;utm_source=mdb&amp;utm_medium=podcast">Modern Digital Business</a>, an engaging and informative podcast produced for people looking to build and grow their digital business with the help of modern applications and processes developed for today’s fast-moving business environment. Subscribe at <a href="http://mdb.fm/">mdb.fm</a>. Follow Lee, at <a href="http://leeatchison.com/">leeatchison.com</a>.</p>
<p style="text-align: center;">Sponsorship inquiries: <a href="https://cms.megaphone.fm/organizations/619b680e-d813-11ea-9750-e7ecac406436/podcasts/e60108fe-e328-11ea-b2b6-1348249f900a/episodes/3913370a-bc44-11ed-ace6-8b1f96d82bba/sponsor@softwareengineeringdaily.com" target="_blank" rel="noopener noreferrer">sponsor@softwareengineeringdaily.com</a></p>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2023/03/20/observability-trends/">Observability Trends with John Hart</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED4915999601.mp3" length="38931524" type="audio/mpeg" />
		<itunes:subtitle>DataSet is a log analytics platform provided by Sentinel One that helps DevOps, IT engineering, and security teams get answers from their data across all time periods, both live streaming and historical. It’s powered by a unique architecture that uses ...</itunes:subtitle>
		<itunes:summary>DataSet is a log analytics platform provided by Sentinel One that helps DevOps, IT engineering, and security teams get answers from their data across all time periods, both live streaming and historical. It’s powered by a unique architecture that uses a massively parallel query engine to provide actionable insights from the data available. John Hart</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>26:58</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">14850</post-id>	</item>
	<item>
		<title>Building Delightful User Experiences with Guillermo Rauch</title>
		<link>http://softwareengineeringdaily.com/2023/03/15/building-user-experiences/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=building-user-experiences</link>
		<pubDate>Wed, 15 Mar 2023 19:05:06 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=14831</guid>
		<comments>http://softwareengineeringdaily.com/2023/03/15/building-user-experiences/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2023/03/15/building-user-experiences/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Mike Bifulco]]></category>
		<category><![CDATA[Podcast]]></category>
		<category><![CDATA[Uncategorized]]></category>
		<category><![CDATA[Edge Functions]]></category>
		<category><![CDATA[frontend]]></category>
		<category><![CDATA[Guillermo Rauch]]></category>
		<category><![CDATA[Vercel]]></category>
		<description>&lt;p&gt;Vercel is the platform for frontend developers, providing the speed and reliability innovators need to create at the moment of inspiration. Vercel’s Edge Functions enable you to deliver dynamic, personalized content with the lightweight Edge Runtime. Guillermo Rauch is the CEO at Vercel and he joins us today. This episode is hosted by Mike Bifulco. To&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2023/03/15/building-user-experiences/&quot;&gt;Building Delightful User Experiences with Guillermo Rauch&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<p><span style="font-weight: 400;"><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/03/guil-1.png"><img decoding="async" loading="lazy" class="alignright size-full wp-image-14835" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/03/guil-1.png?resize=218%2C258" alt="" width="218" height="258" data-recalc-dims="1" /></a><a href="https://vercel.com/">Vercel</a> is the platform for frontend developers, providing the speed and reliability innovators need to create at the moment of inspiration.</span> <span style="font-weight: 400;">Vercel&#8217;s Edge Functions enable you to deliver dynamic, personalized content with the lightweight Edge Runtime.</span></p>
<p><span style="font-weight: 400;"><a href="https://twitter.com/rauchg?ref_src=twsrc%5Egoogle%7Ctwcamp%5Eserp%7Ctwgr%5Eauthor">Guillermo Rauch</a> is the CEO at Vercel and he joins us today.</span></p>
<p>This episode is hosted by Mike Bifulco. To learn more about Mike visit <a href="https://mikebifulco.com/">mikebifulco.com</a></p>
<p style="text-align: center;">Sponsorship inquiries: <a href="https://cms.megaphone.fm/organizations/619b680e-d813-11ea-9750-e7ecac406436/podcasts/e60108fe-e328-11ea-b2b6-1348249f900a/episodes/3913370a-bc44-11ed-ace6-8b1f96d82bba/sponsor@softwareengineeringdaily.com" target="_blank" rel="noopener noreferrer">sponsor@softwareengineeringdaily.com</a></p>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2023/03/15/building-user-experiences/">Building Delightful User Experiences with Guillermo Rauch</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED2284419991.mp3" length="75541346" type="audio/mpeg" />
		<itunes:subtitle>Vercel is the platform for frontend developers, providing the speed and reliability innovators need to create at the moment of inspiration. Vercel’s Edge Functions enable you to deliver dynamic, personalized content with the lightweight Edge Runtime.</itunes:subtitle>
		<itunes:summary>Vercel is the platform for frontend developers, providing the speed and reliability innovators need to create at the moment of inspiration. Vercel’s Edge Functions enable you to deliver dynamic, personalized content with the lightweight Edge Runtime. Guillermo Rauch is the CEO at Vercel and he joins us today. This episode is hosted by Mike Bifulco. To</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>52:24</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">14831</post-id>	</item>
	<item>
		<title>Improved Java Performance Sans Code Changes with Simon Ritter</title>
		<link>http://softwareengineeringdaily.com/2023/03/13/improved-java-performance/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=improved-java-performance</link>
		<pubDate>Mon, 13 Mar 2023 15:46:29 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=14824</guid>
		<comments>http://softwareengineeringdaily.com/2023/03/13/improved-java-performance/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2023/03/13/improved-java-performance/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[Alex DeBrie]]></category>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Cloud Engineering]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Podcast]]></category>
		<category><![CDATA[Video]]></category>
		<category><![CDATA[Azul]]></category>
		<category><![CDATA[Java]]></category>
		<category><![CDATA[JVM]]></category>
		<category><![CDATA[Simon Ritter]]></category>
		<description>&lt;p&gt;What are the reasons why we need to improve performance? The JVM is a powerful piece of software – this is the reason why Java has maintained its popularity over the past 26+ years. But… there are some ways that the JVM works that can impact the performance of your applications. One of the biggest&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2023/03/13/improved-java-performance/&quot;&gt;Improved Java Performance Sans Code Changes with Simon Ritter&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<p><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/03/simon.png"><img decoding="async" loading="lazy" class="alignright size-full wp-image-14827" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/03/simon.png?resize=218%2C258" alt="" width="218" height="258" data-recalc-dims="1" /></a>What are the reasons why we need to improve performance? The JVM is a powerful piece of software – this is the reason why Java has maintained its popularity over the past 26+ years. But… there are some ways that the JVM works that can impact the performance of your applications.</p>
<p>One of the biggest challenges is latency – how quickly can we respond to a request from a user to access your application. That comes down to garbage collection – which leads to pauses and a bad customer experience. Garbage collection pauses can vary. But they impact application performance. The bigger the heap, the longer your pauses&#8230;but how do you optimize? What about warm-up time? That’s also a big challenge. We’ve addressed these problems without re-writing code from scratch – and that leads to better Java performance without any code changes.</p>
<p>This episode explores how you can use a performance JVM to make applications start fast, go fast, and stay fast.</p>
<p><em>Full disclosure: Azul is a sponsor of Software Engineering Daily.</em></p>
<p style="text-align: center;">Sponsorship inquiries: <a href="https://cms.megaphone.fm/organizations/619b680e-d813-11ea-9750-e7ecac406436/podcasts/e60108fe-e328-11ea-b2b6-1348249f900a/episodes/3913370a-bc44-11ed-ace6-8b1f96d82bba/sponsor@softwareengineeringdaily.com" target="_blank" rel="noopener noreferrer">sponsor@softwareengineeringdaily.com</a></p>
<p><a href="http://softwareengineeringdaily.com/wp-content/uploads/2023/03/SED1536-Simon-Ritter.pdf">Transcript</a></p>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2023/03/13/improved-java-performance/">Improved Java Performance Sans Code Changes with Simon Ritter</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED1224704992.mp3" length="66130777" type="audio/mpeg" />
		<itunes:subtitle>What are the reasons why we need to improve performance? The JVM is a powerful piece of software – this is the reason why Java has maintained its popularity over the past 26+ years. But… there are some ways that the JVM works that can impact the perfor...</itunes:subtitle>
		<itunes:summary>What are the reasons why we need to improve performance? The JVM is a powerful piece of software – this is the reason why Java has maintained its popularity over the past 26+ years. But… there are some ways that the JVM works that can impact the performance of your applications. One of the biggest</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>45:52</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">14824</post-id>	</item>
	<item>
		<title>Data Investing and the MAD with Matt Turck</title>
		<link>http://softwareengineeringdaily.com/2023/03/10/data-investing-and-the-mad/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=data-investing-and-the-mad</link>
		<pubDate>Fri, 10 Mar 2023 18:50:28 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=14818</guid>
		<comments>http://softwareengineeringdaily.com/2023/03/10/data-investing-and-the-mad/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2023/03/10/data-investing-and-the-mad/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Data]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Jocelyn Byrne Houle]]></category>
		<category><![CDATA[Machine Learning]]></category>
		<category><![CDATA[Podcast]]></category>
		<category><![CDATA[Uncategorized]]></category>
		<category><![CDATA[Data Investing]]></category>
		<category><![CDATA[First Mark Capital]]></category>
		<category><![CDATA[MAD]]></category>
		<category><![CDATA[Matt Turck]]></category>
		<description>&lt;p&gt;There are many types of early stage funding available from friends and family to seed to series A.  Some firms invest across a wide set of technologies and seek only to provide capital. Others are in it for the long haul – they focus on specific areas of technology and develop both long term relationships&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2023/03/10/data-investing-and-the-mad/&quot;&gt;Data Investing and the MAD with Matt Turck&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<p><span style="font-weight: 400;"><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/03/matt.png"><img decoding="async" loading="lazy" class="alignright size-full wp-image-14820" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/03/matt.png?resize=218%2C258&#038;ssl=1" alt="" width="218" height="258" data-recalc-dims="1" /></a>There are many types of early stage funding available from friends and family to seed to series A.  Some firms invest across a wide set of technologies and seek only to provide capital. Others are in it for the long haul &#8211; they focus on specific areas of technology and develop both long term relationships and deep expertise over time.  </span></p>
<p><span style="font-weight: 400;">Today, we are interviewing <a href="https://twitter.com/mattturck?ref_src=twsrc%5Egoogle%7Ctwcamp%5Eserp%7Ctwgr%5Eauthor">Matt Turck</a> of <a href="https://firstmarkcap.com/">First Mark Capital</a>, who is in it for the long haul and whose portfolio companies include Dataiku, Crossbeam, Ada, Cockroach Labs, Clickhouse and more.  Today we will talk about Matt’s career, investment point of view, founding the Data-driven NYC community and the recent release of the 20234 MAD  &#8211; an industry resource for understanding the Machine Learning, AI and Data Landscape </span></p>
<p><span style="font-weight: 400;">Be sure to check out the show notes for links to the MAD</span></p>
<p>This epsiode is hosted by Jocelyn Houle. Follow Jocelyn on Linked or on Twitter <a href="https://twitter.com/jocelynbyrne">@jocelynbyrne</a>.</p>
<p>&nbsp;</p>
<p><span style="font-weight: 400;">Show notes &#8211; </span></p>
<p><span style="font-weight: 400;">In today’s show we referenced a couple things you may want to check out.</span></p>
<p><span style="font-weight: 400;">Matt’s </span><a href="https://mattturck.com/mad2023/#more-1693"><span style="font-weight: 400;">blog and MAD Landscape</span></a></p>
<p><span style="font-weight: 400;">The </span><a href="https://mad.firstmarkcap.com/"><span style="font-weight: 400;">interactive MAD Landscape</span></a></p>
<p><span style="font-weight: 400;">The picture in Matt’s Office was </span><a href="https://en.wikipedia.org/wiki/The_Son_of_Man"><span style="font-weight: 400;">The Son of Man by Rene Magritte</span></a><span style="font-weight: 400;"> </span></p>
<p><a href="https://firstmarkcap.com/team/matt-turck/"><span style="font-weight: 400;">Matt’s full bio</span></a></p>
<p><a href="https://firstmarkcap.com/"><span style="font-weight: 400;">FirstMark Capital Site</span></a></p>
<p style="text-align: center;">Sponsorship inquiries: <a href="https://cms.megaphone.fm/organizations/619b680e-d813-11ea-9750-e7ecac406436/podcasts/e60108fe-e328-11ea-b2b6-1348249f900a/episodes/3913370a-bc44-11ed-ace6-8b1f96d82bba/sponsor@softwareengineeringdaily.com" target="_blank" rel="noopener noreferrer">sponsor@softwareengineeringdaily.com</a></p>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2023/03/10/data-investing-and-the-mad/">Data Investing and the MAD with Matt Turck</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED7581121070.mp3" length="73733477" type="audio/mpeg" />
		<itunes:subtitle>There are many types of early stage funding available from friends and family to seed to series A.  Some firms invest across a wide set of technologies and seek only to provide capital. Others are in it for the long haul – they focus on specific areas ...</itunes:subtitle>
		<itunes:summary>There are many types of early stage funding available from friends and family to seed to series A.  Some firms invest across a wide set of technologies and seek only to provide capital. Others are in it for the long haul – they focus on specific areas of technology and develop both long term relationships</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>51:08</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">14818</post-id>	</item>
	<item>
		<title>eBPF with Thomas Graf</title>
		<link>http://softwareengineeringdaily.com/2023/03/06/ebpf-with-thomas-graf/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=ebpf-with-thomas-graf</link>
		<pubDate>Mon, 06 Mar 2023 17:53:29 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=14814</guid>
		<comments>http://softwareengineeringdaily.com/2023/03/06/ebpf-with-thomas-graf/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2023/03/06/ebpf-with-thomas-graf/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Jordi Mon Companys]]></category>
		<category><![CDATA[Podcast]]></category>
		<description>&lt;p&gt;eBPF stands for “extended Berkeley Packet Filter” and is a technology that allows developers to write and run highly efficient and secure programs that can analyze and modify data packets as they move through a system. eBPF programs can be used for a wide range of purposes, including network monitoring, security, and performance optimization. Thomas&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2023/03/06/ebpf-with-thomas-graf/&quot;&gt;eBPF with Thomas Graf&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<p><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/03/thomas.png"><img decoding="async" loading="lazy" class="alignright size-full wp-image-14817" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/03/thomas.png?resize=218%2C258" alt="" width="218" height="258" data-recalc-dims="1" /></a>eBPF stands for &#8220;extended Berkeley Packet Filter&#8221; and is a technology that allows developers to write and run highly efficient and secure programs that can analyze and modify data packets as they move through a system. eBPF programs can be used for a wide range of purposes, including network monitoring, security, and performance optimization.</p>
<p><a href="https://twitter.com/tgraf__?lang=en">Thomas Graf</a> is the CTO &amp; Co-Founder at <a href="https://isovalent.com/">Isovalent</a> and he joins us today.</p>
<p>Sponsorship inquiries: <a href="https://cms.megaphone.fm/organizations/619b680e-d813-11ea-9750-e7ecac406436/podcasts/e60108fe-e328-11ea-b2b6-1348249f900a/episodes/3913370a-bc44-11ed-ace6-8b1f96d82bba/sponsor@softwareengineeringdaily.com" target="_blank" rel="noopener noreferrer">sponsor@softwareengineeringdaily.com</a></p>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2023/03/06/ebpf-with-thomas-graf/">eBPF with Thomas Graf</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED9729865731.mp3" length="67288050" type="audio/mpeg" />
		<itunes:subtitle>eBPF stands for “extended Berkeley Packet Filter” and is a technology that allows developers to write and run highly efficient and secure programs that can analyze and modify data packets as they move through a system.</itunes:subtitle>
		<itunes:summary>eBPF stands for “extended Berkeley Packet Filter” and is a technology that allows developers to write and run highly efficient and secure programs that can analyze and modify data packets as they move through a system. eBPF programs can be used for a wide range of purposes, including network monitoring, security, and performance optimization. Thomas</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>46:40</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">14814</post-id>	</item>
	<item>
		<title>Netlify with Mathias Biilmann Christensen</title>
		<link>http://softwareengineeringdaily.com/2023/03/02/netlify/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=netlify</link>
		<pubDate>Thu, 02 Mar 2023 09:00:03 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=14809</guid>
		<comments>http://softwareengineeringdaily.com/2023/03/02/netlify/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2023/03/02/netlify/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Cloud Engineering]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[JavaScript]]></category>
		<category><![CDATA[Mike Bifulco]]></category>
		<category><![CDATA[Podcast]]></category>
		<description>&lt;p&gt;Netlify is a cloud-based platform that provides web developers with an all-in-one workflow to build, deploy, and manage modern web projects. Matt Biilmann is the CEO of Netlify and he joins us today. This episode is hosted by Mike Bifulco. To learn more about Mike visit mikebifulco.com Sponsorship inquiries: sponsor@softwareengineeringdaily.com    &lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2023/03/02/netlify/&quot;&gt;Netlify with Mathias Biilmann Christensen&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<p><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/03/matt-billmann.png"><img decoding="async" loading="lazy" class="size-medium wp-image-14811 alignright" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/03/matt-billmann-268x300.png?resize=268%2C300&#038;ssl=1" alt="" width="268" height="300" srcset="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/03/matt-billmann.png?resize=268%2C300 268w, https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/03/matt-billmann.png?w=338 338w" sizes="(max-width: 268px) 100vw, 268px" data-recalc-dims="1" /></a></p>
<p><a href="https://www.netlify.com/">Netlify</a> is a cloud-based platform that provides web developers with an all-in-one workflow to build, deploy, and manage modern web projects.<br />
<a href="https://twitter.com/biilmann?lang=en">Matt Biilmann</a> is the CEO of Netlify and he joins us today.</p>
<p>This episode is hosted by Mike Bifulco. To learn more about Mike visit <a href="https://mikebifulco.com/">mikebifulco.com</a></p>
<p style="text-align: center;"><span style="font-weight: 400;">Sponsorship inquiries: <a href="sponsor@softwareengineeringdaily.com">sponsor@softwareengineeringdaily.com</a></span></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2023/03/02/netlify/">Netlify with Mathias Biilmann Christensen</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED3660595696.mp3" length="76545290" type="audio/mpeg" />
		<itunes:subtitle>Netlify is a cloud-based platform that provides web developers with an all-in-one workflow to build, deploy, and manage modern web projects. Matt Biilmann is the CEO of Netlify and he joins us today. This episode is hosted by Mike Bifulco.</itunes:subtitle>
		<itunes:summary>Netlify is a cloud-based platform that provides web developers with an all-in-one workflow to build, deploy, and manage modern web projects. Matt Biilmann is the CEO of Netlify and he joins us today. This episode is hosted by Mike Bifulco. To learn more about Mike visit mikebifulco.com Sponsorship inquiries: sponsor@softwareengineeringdaily.com    </itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>53:06</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">14809</post-id>	</item>
	<item>
		<title>Surviving ChatGPT with Christian Hubicki</title>
		<link>http://softwareengineeringdaily.com/2023/02/24/surviving-chatgpt/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=surviving-chatgpt</link>
		<pubDate>Fri, 24 Feb 2023 17:20:10 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=14803</guid>
		<comments>http://softwareengineeringdaily.com/2023/02/24/surviving-chatgpt/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2023/02/24/surviving-chatgpt/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Greatest Hits]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Machine Learning]]></category>
		<category><![CDATA[Podcast]]></category>
		<category><![CDATA[Sean Falconer]]></category>
		<category><![CDATA[ChatGPT]]></category>
		<category><![CDATA[Christian Hubicki]]></category>
		<category><![CDATA[OpenAI]]></category>
		<category><![CDATA[Robotics]]></category>
		<description>&lt;p&gt;ChatGPT is an artificial intelligence language model developed by OpenAI. It is part of the GPT (Generative Pre-trained Transformer) family of models, which are designed to generate human-like text based on input prompts. ChatGPT is specifically trained to carry out conversational tasks, such as answering questions, completing sentences, and engaging in dialogue. It has been&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2023/02/24/surviving-chatgpt/&quot;&gt;Surviving ChatGPT with Christian Hubicki&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<p><span style="font-weight: 400;"><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/02/Rectangle-167.png"><img decoding="async" loading="lazy" class="alignright size-full wp-image-14807" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/02/Rectangle-167.png?resize=218%2C258" alt="" width="218" height="258" data-recalc-dims="1" /></a>ChatGPT is an artificial intelligence language model developed by OpenAI. It is part of the GPT (Generative Pre-trained Transformer) family of models, which are designed to generate human-like text based on input prompts. ChatGPT is specifically trained to carry out conversational tasks, such as answering questions, completing sentences, and engaging in dialogue. It has been pre-trained on a large corpus of text data and fine-tuned on specific tasks to improve its performance. As a result, ChatGPT can generate responses that are often coherent, relevant, and natural-sounding.</span></p>
<p><a href="https://twitter.com/chubicki"><span style="font-weight: 400;">Christian Hubicki</span></a><span style="font-weight: 400;"> is an Assistant Professor in the Robotics Department at Florida State University. He joins us today to discuss ChatGPT and its implications. We also discussed the <a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/05/Sean-Falconer.png"><img decoding="async" loading="lazy" class="alignright size-full wp-image-13856" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/05/Sean-Falconer.png?resize=218%2C258" alt="" width="218" height="258" data-recalc-dims="1" /></a>future of Artificial Intelligence in general.</span></p>
<p><span style="font-weight: 400;">This show is hosted by </span><a href="mailto:sean.falconer@skyflow.com"><span style="font-weight: 400;" data-rich-links="{&quot;per_n&quot;:&quot;Sean Falconer&quot;,&quot;per_e&quot;:&quot;sean.falconer@skyflow.com&quot;,&quot;type&quot;:&quot;person&quot;}">Sean Falconer</span></a><span style="font-weight: 400;">. Sean is the Head of Developer Relations and Marketing <a href="https://twitter.com/SkyflowAPI">@Skyflow</a>. Follow Sean at </span><a href="https://twitter.com/seanfalconer"><span style="font-weight: 400;">@seanfalconer</span></a></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p style="text-align: center;"><span style="font-weight: 400;">Sponsorship inquiries: <a href="sponsor@softwareengineeringdaily.com">sponsor@softwareengineeringdaily.com</a></span></p>
<p>&nbsp;</p>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2023/02/24/surviving-chatgpt/">Surviving ChatGPT with Christian Hubicki</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED9325685489.mp3" length="105868737" type="audio/mpeg" />
		<itunes:subtitle>ChatGPT is an artificial intelligence language model developed by OpenAI. It is part of the GPT (Generative Pre-trained Transformer) family of models, which are designed to generate human-like text based on input prompts.</itunes:subtitle>
		<itunes:summary>ChatGPT is an artificial intelligence language model developed by OpenAI. It is part of the GPT (Generative Pre-trained Transformer) family of models, which are designed to generate human-like text based on input prompts. ChatGPT is specifically trained to carry out conversational tasks, such as answering questions, completing sentences, and engaging in dialogue. It has been</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>1:13:27</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">14803</post-id>	</item>
	<item>
		<title>Seeding Bold Engineers with Lee Edwards</title>
		<link>http://softwareengineeringdaily.com/2023/02/23/seeding-bold-engineers/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=seeding-bold-engineers</link>
		<pubDate>Thu, 23 Feb 2023 18:16:24 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=14794</guid>
		<comments>http://softwareengineeringdaily.com/2023/02/23/seeding-bold-engineers/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2023/02/23/seeding-bold-engineers/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Business and Philosophy]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Jocelyn Byrne Houle]]></category>
		<category><![CDATA[Podcast]]></category>
		<category><![CDATA[Lee Edwards]]></category>
		<category><![CDATA[Privacy Dynamics]]></category>
		<category><![CDATA[Root Ventures]]></category>
		<category><![CDATA[Seeding]]></category>
		<description>&lt;p&gt;Lee Edwards is a Partner at Root Ventures, a venture capital firm that invests in early-stage startups that are focused on solving hard engineering problems. Lee is an investor in Privacy Dynamics, a company that offers data anonymisation as a service. You can listen to our interview with the CTO of Privacy Dynamics, John Craft&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2023/02/23/seeding-bold-engineers/&quot;&gt;Seeding Bold Engineers with Lee Edwards&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<p><span style="font-weight: 400;"><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/02/lee_edwards.jpg"><img decoding="async" loading="lazy" class="alignright size-full wp-image-14798" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/02/lee_edwards.jpg?resize=218%2C258&#038;ssl=1" alt="" width="218" height="258" data-recalc-dims="1" /></a>Lee Edwards is a Partner at </span><a href="https://root.vc/welcome.htm"><span style="font-weight: 400;">Root Ventures</span></a><span style="font-weight: 400;">, a venture capital firm that invests in early-stage startups that are focused on solving hard engineering problems. Lee is an investor in Privacy Dynamics, a company that offers data anonymisation as a service. You can listen to our interview with the CTO of </span><a href="https://www.privacydynamics.io/"><span style="font-weight: 400;">Privacy Dynamics</span></a><span style="font-weight: 400;">, John Craft </span><a href="https://softwareengineeringdaily.com/2022/12/12/minimizing-pii-in-dev-environments/"><span style="font-weight: 400;">here</span></a><span style="font-weight: 400;">.</span></p>
<p><span style="font-weight: 400;">Lee is interested in investing in startups founded by engineers who are committed to addressing complex software challenges. This includes areas such as developer tools and services, software infrastructure, applied artificial intelligence and machine learning, tooling for data scientists and engineers, computer vision, and any other endeavor that requires a highly skilled technical team to develop.</span></p>
<p>This epsiode is hosted by Jocelyn Houle. Jocelyn is focused on data, ML and enterprise software. She has experience as a founder, investor, and product leader and has worked with both start-ups and large financial services companies. Jocelyn is currently a Senior Director of Product management for Securiti, a unified data controls company. Follow Jocelyn on Linked or on Twitter <a href="https://twitter.com/jocelynbyrne">@jocelynbyrne</a>.</p>
<p>&nbsp;</p>
<p style="text-align: center;"><span style="font-weight: 400;">Sponsorship inquiries: <a href="sponsor@softwareengineeringdaily.com">sponsor@softwareengineeringdaily.com</a></span></p>
<p>&nbsp;</p>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2023/02/23/seeding-bold-engineers/">Seeding Bold Engineers with Lee Edwards</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED8157083944.mp3" length="88963427" type="audio/mpeg" />
		<itunes:subtitle>Lee Edwards is a Partner at Root Ventures, a venture capital firm that invests in early-stage startups that are focused on solving hard engineering problems. Lee is an investor in Privacy Dynamics, a company that offers data anonymisation as a service....</itunes:subtitle>
		<itunes:summary>Lee Edwards is a Partner at Root Ventures, a venture capital firm that invests in early-stage startups that are focused on solving hard engineering problems. Lee is an investor in Privacy Dynamics, a company that offers data anonymisation as a service. You can listen to our interview with the CTO of Privacy Dynamics, John Craft</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>1:01:43</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">14794</post-id>	</item>
	<item>
		<title>Creating Mock APIs with Tom Akehurst</title>
		<link>http://softwareengineeringdaily.com/2023/02/22/creating-mock-apis-with-wiremock/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=creating-mock-apis-with-wiremock</link>
		<pubDate>Thu, 23 Feb 2023 05:42:45 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=14786</guid>
		<comments>http://softwareengineeringdaily.com/2023/02/22/creating-mock-apis-with-wiremock/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2023/02/22/creating-mock-apis-with-wiremock/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Podcast]]></category>
		<category><![CDATA[Sean Falconer]]></category>
		<category><![CDATA[Uncategorized]]></category>
		<category><![CDATA[Mock APIs]]></category>
		<category><![CDATA[Tom Akehurst]]></category>
		<category><![CDATA[WireMock]]></category>
		<category><![CDATA[WireMock Cloud]]></category>
		<description>&lt;p&gt;API mocking is a technique used to simulate the behavior of an API without actually connecting to the real API. It is useful for various reasons, including testing, isolation, development, and cost reduction. By using API mocking, developers can test their code without relying on the availability of the real API, isolate the code being&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2023/02/22/creating-mock-apis-with-wiremock/&quot;&gt;Creating Mock APIs with Tom Akehurst&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<p><span style="font-weight: 400;"><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/02/tom.png"><img decoding="async" loading="lazy" class="alignright size-full wp-image-14787" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/02/tom.png?resize=218%2C258&#038;ssl=1" alt="" width="218" height="258" data-recalc-dims="1" /></a></span></p>
<p><span style="font-weight: 400;">API mocking is a technique used to simulate the behavior of an API without actually connecting to the real API. It is useful for various reasons, including testing, isolation, development, and cost reduction. By using API mocking, developers can test their code without relying on the availability of the real API, isolate the code being tested from the behavior of the API, work on their code even when the API is not yet available, and reduce the number of requests they make to the real API, thus saving money. </span><span style="font-weight: 400;"><br />
</span><span style="font-weight: 400;"><a href="https://www.wiremock.io/?utm_source=engineeringdaily&amp;utm_medium=referral&amp;utm_campaign=podcast">WireMock</a> is a flexible tool for building mock APIs and can operate as either a standalone server or as a managed service through WireMock Cloud.</span></p>
<p><span style="font-weight: 400;"><a href="https://twitter.com/tomakehurst?lang=en">Tom Akehurst</a> is the CTO &amp; Co-founder at WireMock and he joins us today.</span></p>
<p><strong>Show Host</strong>: <a href="https://twitter.com/seanfalconer">Sean Falconer</a></p>
<p><em>Full disclosure: Wiremock is a sponsor of Software Engineering Daily.</em></p>
<p style="text-align: center;"><span style="font-weight: 400;">Sponsorship inquiries: <a href="sponsor@softwareengineeringdaily.com">sponsor@softwareengineeringdaily.com</a></span></p>
<p>&nbsp;</p>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2023/02/22/creating-mock-apis-with-wiremock/">Creating Mock APIs with Tom Akehurst</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED4566210183.mp3" length="68088235" type="audio/mpeg" />
		<itunes:subtitle>API mocking is a technique used to simulate the behavior of an API without actually connecting to the real API. It is useful for various reasons, including testing, isolation, development, and cost reduction. By using API mocking,</itunes:subtitle>
		<itunes:summary>API mocking is a technique used to simulate the behavior of an API without actually connecting to the real API. It is useful for various reasons, including testing, isolation, development, and cost reduction. By using API mocking, developers can test their code without relying on the availability of the real API, isolate the code being</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>47:13</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">14786</post-id>	</item>
	<item>
		<title>Pebblebed with Keith Adams</title>
		<link>http://softwareengineeringdaily.com/2023/02/15/pebblebed-with-keith-adams/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=pebblebed-with-keith-adams</link>
		<pubDate>Wed, 15 Feb 2023 22:30:06 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=14774</guid>
		<comments>http://softwareengineeringdaily.com/2023/02/15/pebblebed-with-keith-adams/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2023/02/15/pebblebed-with-keith-adams/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Podcast]]></category>
		<category><![CDATA[Sean Falconer]]></category>
		<description>&lt;p&gt;Keith Adams has worked previously at Facebook and has also been a Chief Architect at Slack. He joins us today to discuss technology, startups, investing, and like all conversations that exist today, ChatGPT.&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2023/02/15/pebblebed-with-keith-adams/&quot;&gt;Pebblebed with Keith Adams&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<p>Keith Adams has worked previously at Facebook and has also been a Chief Architect at Slack. He joins us today to discuss technology, startups, investing, and like all conversations that exist today, ChatGPT.</p>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2023/02/15/pebblebed-with-keith-adams/">Pebblebed with Keith Adams</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED8053103978.mp3" length="69138721" type="audio/mpeg" />
		<itunes:subtitle>Keith Adams has worked previously at Facebook and has also been a Chief Architect at Slack. He joins us today to discuss technology, startups, investing, and like all conversations that exist today, ChatGPT.</itunes:subtitle>
		<itunes:summary>Keith Adams has worked previously at Facebook and has also been a Chief Architect at Slack. He joins us today to discuss technology, startups, investing, and like all conversations that exist today, ChatGPT.</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>47:57</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">14774</post-id>	</item>
	<item>
		<title>Kubernetes Cost Management with Matt Ray</title>
		<link>http://softwareengineeringdaily.com/2023/02/10/kubernetes-cost-management/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=kubernetes-cost-management</link>
		<pubDate>Sat, 11 Feb 2023 04:25:18 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=14766</guid>
		<comments>http://softwareengineeringdaily.com/2023/02/10/kubernetes-cost-management/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2023/02/10/kubernetes-cost-management/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Jordi Mon Companys]]></category>
		<category><![CDATA[Podcast]]></category>
		<category><![CDATA[Kubecost]]></category>
		<category><![CDATA[Kubernetes]]></category>
		<category><![CDATA[Matt LeRay]]></category>
		<category><![CDATA[OpenCost]]></category>
		<description>&lt;p&gt;As companies move more and more workloads to the cloud, cost management in the cloud is becoming critically important. Modern application development methodology increasingly involves moving to service and microservice architectures enabled by the cloud and kubernetes is the backbone of this modern infrastructure trend. Managing costs of kubernetes clusters is therefore becoming increasingly important.&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2023/02/10/kubernetes-cost-management/&quot;&gt;Kubernetes Cost Management with Matt Ray&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<p><span style="font-weight: 400;"><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/02/matt.png"><img decoding="async" loading="lazy" class="alignright size-full wp-image-14767" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/02/matt.png?resize=218%2C258" alt="" width="218" height="258" data-recalc-dims="1" /></a>As companies move more and more workloads to the cloud, cost management in the cloud is becoming critically important. Modern application development methodology increasingly involves moving to service and microservice architectures enabled by the cloud and kubernetes is the backbone of this modern infrastructure trend. Managing costs of kubernetes clusters is therefore becoming increasingly important. <a href="https://www.kubecost.com/">Kubecost</a> is the company focused on giving visibility into kubernetes resources, allowing you to reduce your overall kubernetes based infrastructure spend. <a href="https://www.opencost.io/">OpenCost</a> is an open-source project by Kubecost and supported by a few other partner companies. <a href="https://twitter.com/mattray">Matt Ray</a> is Senior Community Manager at OpenCost and he joins us today.</span></p>
<p style="text-align: center;"><span style="font-weight: 400;">Sponsorship inquiries: <a href="sponsor@softwareengineeringdaily.com">sponsor@softwareengineeringdaily.com</a></span></p>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2023/02/10/kubernetes-cost-management/">Kubernetes Cost Management with Matt Ray</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED1123099285.mp3" length="58770542" type="audio/mpeg" />
		<itunes:subtitle>As companies move more and more workloads to the cloud, cost management in the cloud is becoming critically important. Modern application development methodology increasingly involves moving to service and microservice architectures enabled by the clou...</itunes:subtitle>
		<itunes:summary>As companies move more and more workloads to the cloud, cost management in the cloud is becoming critically important. Modern application development methodology increasingly involves moving to service and microservice architectures enabled by the cloud and kubernetes is the backbone of this modern infrastructure trend. Managing costs of kubernetes clusters is therefore becoming increasingly important.</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>40:45</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">14766</post-id>	</item>
	<item>
		<title>Learning From Incidents with Nora Jones</title>
		<link>http://softwareengineeringdaily.com/2023/02/06/learning-from-incidents/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=learning-from-incidents</link>
		<pubDate>Mon, 06 Feb 2023 14:42:25 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=14757</guid>
		<comments>http://softwareengineeringdaily.com/2023/02/06/learning-from-incidents/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2023/02/06/learning-from-incidents/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Lee Atchison]]></category>
		<category><![CDATA[Podcast]]></category>
		<category><![CDATA[Uncategorized]]></category>
		<category><![CDATA[incident managemen]]></category>
		<category><![CDATA[Incidents]]></category>
		<category><![CDATA[Jeli.io]]></category>
		<category><![CDATA[Nora Jones]]></category>
		<description>&lt;p&gt;Jeli.io is an end to end incident management tool. Jeli helps you understand why an incident took place, how it could’ve been prevented, and allows you to dive deep into uncovered themes, patterns, or problem areas! Nora Jones is the Founder and CEO at Jeli.io and she joins us today. Full disclosure: Jeli.io is a&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2023/02/06/learning-from-incidents/&quot;&gt;Learning From Incidents with Nora Jones&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<p><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/02/nora.jpg"><img decoding="async" loading="lazy" class="alignright size-full wp-image-14759" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/02/nora.jpg?resize=218%2C258&#038;ssl=1" alt="" width="218" height="258" data-recalc-dims="1" /></a> <a href="http://Jeli.io">Jeli.io</a> is an end to end incident management tool. <span style="font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen-Sans, Ubuntu, Cantarell, 'Helvetica Neue', sans-serif;">Jeli helps you understand why an incident took place, how it could’ve been prevented, and allows you to dive deep into uncovered themes, patterns, or problem areas!<br />
</span><a href="https://twitter.com/nora_js">Nora Jones</a> is the Founder and CEO at Jeli.io and she joins us today.</p>
<p><em>Full disclosure: Jeli.io is a sponsor of Software Engineering Daily.</em></p>
<p style="text-align: center;"><span style="font-weight: 400;">Sponsorship inquiries: <a href="sponsor@softwareengineeringdaily.com">sponsor@softwareengineeringdaily.com</a></span></p>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2023/02/06/learning-from-incidents/">Learning From Incidents with Nora Jones</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED8628310367.mp3" length="43641810" type="audio/mpeg" />
		<itunes:subtitle>Jeli.io is an end to end incident management tool. Jeli helps you understand why an incident took place, how it could’ve been prevented, and allows you to dive deep into uncovered themes, patterns, or problem areas!</itunes:subtitle>
		<itunes:summary>Jeli.io is an end to end incident management tool. Jeli helps you understand why an incident took place, how it could’ve been prevented, and allows you to dive deep into uncovered themes, patterns, or problem areas! Nora Jones is the Founder and CEO at Jeli.io and she joins us today. Full disclosure: Jeli.io is a</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>30:15</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">14757</post-id>	</item>
	<item>
		<title>Streamdal: Streaming Data Performance Monitoring with Ustin Zarubin and Dan Selans</title>
		<link>http://softwareengineeringdaily.com/2023/02/03/streamdal-streaming-data/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=streamdal-streaming-data</link>
		<pubDate>Fri, 03 Feb 2023 17:50:53 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=14753</guid>
		<comments>http://softwareengineeringdaily.com/2023/02/03/streamdal-streaming-data/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2023/02/03/streamdal-streaming-data/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Jocelyn Byrne Houle]]></category>
		<category><![CDATA[Podcast]]></category>
		<category><![CDATA[Uncategorized]]></category>
		<category><![CDATA[Dan Selans]]></category>
		<category><![CDATA[Data observability]]></category>
		<category><![CDATA[Streamdal]]></category>
		<category><![CDATA[Ustin Zarubin]]></category>
		<description>&lt;p&gt;Data observability is the idea of creating a unified view of all the data so you can head off problems early, identify outages, and address any conflicts in real time. Today we’re interviewing Streamdal’s founders Ustin Zarubin and Dan Selans. They’re gonna share with us how they’re using an application monitoring approach to address the&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2023/02/03/streamdal-streaming-data/&quot;&gt;Streamdal: Streaming Data Performance Monitoring with Ustin Zarubin and Dan Selans&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<p>Data observability is the idea of creating a unified view of all the data so you can head off problems early, identify outages, and address any conflicts in real time. Today we&#8217;re interviewing <a href="https://streamdal.com/">Streamdal&#8217;s</a> founders <a href="https://www.linkedin.com/in/ustin-zarubin-319659a2/">Ustin Zarubin</a> and <a href="https://www.linkedin.com/in/dselans/">Dan Selans</a>. They&#8217;re gonna share with us how they&#8217;re using an application monitoring approach to address the challenges of getting that unified view in today&#8217;s data-centric streaming enviroment.</p>
<p>Show host: <a href="https://twitter.com/jocelynbyrne">Jocelynbyrne</a></p>
<p style="text-align: center;"><span style="font-weight: 400;">Sponsorship inquiries: <a href="sponsor@softwareengineeringdaily.com">sponsor@softwareengineeringdaily.com</a></span></p>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2023/02/03/streamdal-streaming-data/">Streamdal: Streaming Data Performance Monitoring with Ustin Zarubin and Dan Selans</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED9590873017.mp3" length="88180384" type="audio/mpeg" />
		<itunes:subtitle>Data observability is the idea of creating a unified view of all the data so you can head off problems early, identify outages, and address any conflicts in real time. Today we’re interviewing Streamdal’s founders Ustin Zarubin and Dan Selans.</itunes:subtitle>
		<itunes:summary>Data observability is the idea of creating a unified view of all the data so you can head off problems early, identify outages, and address any conflicts in real time. Today we’re interviewing Streamdal’s founders Ustin Zarubin and Dan Selans. They’re gonna share with us how they’re using an application monitoring approach to address the</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>1:01:10</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">14753</post-id>	</item>
	<item>
		<title>Istio Ambient Mesh with Brian Gracely</title>
		<link>http://softwareengineeringdaily.com/2023/02/02/istio-ambient-mesh/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=istio-ambient-mesh</link>
		<pubDate>Thu, 02 Feb 2023 17:13:10 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=14743</guid>
		<comments>http://softwareengineeringdaily.com/2023/02/02/istio-ambient-mesh/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2023/02/02/istio-ambient-mesh/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Jordi Mon Companys]]></category>
		<category><![CDATA[Podcast]]></category>
		<category><![CDATA[Uncategorized]]></category>
		<category><![CDATA[Ambient Mesh]]></category>
		<category><![CDATA[Brian Gracely]]></category>
		<category><![CDATA[microservices]]></category>
		<category><![CDATA[Solo.io]]></category>
		<description>&lt;p&gt;Let’s say you have a set of microservices running on a Kubernetes cluster. In the past, developers used to program features like service discovery, observability, who’s allowed to talk to whom and other security related features directly into the application code. This slowed down the dev cycle and it made these microservices bigger and just&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2023/02/02/istio-ambient-mesh/&quot;&gt;Istio Ambient Mesh with Brian Gracely&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<p><span style="font-weight: 400;"><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/02/brian.png"><img decoding="async" loading="lazy" class="alignright size-full wp-image-14750" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/02/brian.png?resize=218%2C258&#038;ssl=1" alt="" width="218" height="258" data-recalc-dims="1" /></a>Let&#8217;s say you have a set of microservices running on a Kubernetes cluster. In the past, developers used to program features like service discovery, observability, who&#8217;s allowed to talk to whom and other security related features directly into the application code.</span><b><br />
</b><span style="font-weight: 400;">This slowed down the dev cycle and it made these microservices bigger and just generally made everything less flexible.</span><span style="font-weight: 400;"><br />
</span><span style="font-weight: 400;">The service mesh is a tool responsible for handling service-to-service communication. You keep your application small and business focused and instead you dynamically program the intelligence into the network. </span><span style="font-weight: 400;"><br />
</span><span style="font-weight: 400;">The Istio ambient mesh is an alternative to the standard Istio architecture, it allows you to not have to run sidecars per application.</span></p>
<p><span style="font-weight: 400;">The company <a href="https://www.solo.io/">Solo.io</a> was founded by <a href="https://twitter.com/Idit_Levine">Idit Levine</a> a few years ago. Interestingly the name Solo comes from her being the Solo founder when she started the company and the io domain name was a cool thing to have back then.</span><span style="font-weight: 400;"><br />
</span><span style="font-weight: 400;"><a href="https://twitter.com/bgracely?ref_src=twsrc%5Egoogle%7Ctwcamp%5Eserp%7Ctwgr%5Eauthor">Brian Gracely</a> is the Head of Marketing at Solo.io and he joins us today.</span><span style="font-weight: 400;"><br />
</span></p>
<p>Show host: <a href="https://twitter.com/JordiMonPMM">Jordi Mon Companys</a></p>
<p style="text-align: center;"><span style="font-weight: 400;">Sponsorship inquiries: <a href="sponsor@softwareengineeringdaily.com">sponsor@softwareengineeringdaily.com</a></span></p>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2023/02/02/istio-ambient-mesh/">Istio Ambient Mesh with Brian Gracely</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED7597399408.mp3" length="60230219" type="audio/mpeg" />
		<itunes:subtitle>Let’s say you have a set of microservices running on a Kubernetes cluster. In the past, developers used to program features like service discovery, observability, who’s allowed to talk to whom and other security related features directly into the appli...</itunes:subtitle>
		<itunes:summary>Let’s say you have a set of microservices running on a Kubernetes cluster. In the past, developers used to program features like service discovery, observability, who’s allowed to talk to whom and other security related features directly into the application code. This slowed down the dev cycle and it made these microservices bigger and just</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>41:46</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">14743</post-id>	</item>
	<item>
		<title>Dev-First Kubernetes Operations Platform with Itiel Shwartz</title>
		<link>http://softwareengineeringdaily.com/2023/01/31/dev-first-kubernetes-operations/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=dev-first-kubernetes-operations</link>
		<pubDate>Wed, 01 Feb 2023 01:57:58 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=14737</guid>
		<comments>http://softwareengineeringdaily.com/2023/01/31/dev-first-kubernetes-operations/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2023/01/31/dev-first-kubernetes-operations/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Lee Atchison]]></category>
		<category><![CDATA[Podcast]]></category>
		<category><![CDATA[Uncategorized]]></category>
		<category><![CDATA[Itiel Shwartz]]></category>
		<description>&lt;p&gt;Kubernetes is an open-source platform for automating the deployment, scaling, and management of containerized applications. The company Komodor started as a Kubernetes diagnostics platform focusing on Kubernetes troubleshooting for the entire Kubernetes stack. More recently, Komodor is taking a step towards becoming a single-pane-of-glass to simplify Kubernetes for developers. In the past, they were more&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2023/01/31/dev-first-kubernetes-operations/&quot;&gt;Dev-First Kubernetes Operations Platform with Itiel Shwartz&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<p><span style="font-weight: 400;"><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/01/itiel.jpg"><img decoding="async" loading="lazy" class="alignright size-full wp-image-14740" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/01/itiel.jpg?resize=218%2C258" alt="" width="218" height="258" data-recalc-dims="1" /></a>Kubernetes is an open-source platform for automating the deployment, scaling, and management of containerized applications. The company Komodor started as a Kubernetes diagnostics platform focusing on Kubernetes troubleshooting for the entire Kubernetes stack. More recently, Komodor is taking a step towards becoming a single-pane-of-glass to simplify Kubernetes for developers. In the past, they were more DevOps-focused, and they’ve made some significant changes in the product that will appeal more to the developer. Komodor is also entering into the cluster management space to compete with Lens. </span></p>
<p><span style="font-weight: 400;"><a href="https://twitter.com/itielshwartz?lang=en">Itiel Shwartz</a> is the co-founder and CTO of <a href="https://komodor.com/">Komodor</a>, and he joins us today.</span></p>
<p><em>Full disclosure: Komodor is a sponsor of Software Engineering Daily.</em></p>
<p><a href="http://softwareengineeringdaily.com/wp-content/uploads/2023/02/SED1535-Itiel-Shwartz.pdf">Transcript</a></p>
<p style="text-align: center;"><span style="font-weight: 400;">Sponsorship inquiries: <a href="sponsor@softwareengineeringdaily.com">sponsor@softwareengineeringdaily.com</a></span></p>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2023/01/31/dev-first-kubernetes-operations/">Dev-First Kubernetes Operations Platform with Itiel Shwartz</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED6188218140.mp3" length="50159448" type="audio/mpeg" />
		<itunes:subtitle>Kubernetes is an open-source platform for automating the deployment, scaling, and management of containerized applications. The company Komodor started as a Kubernetes diagnostics platform focusing on Kubernetes troubleshooting for the entire Kubernete...</itunes:subtitle>
		<itunes:summary>Kubernetes is an open-source platform for automating the deployment, scaling, and management of containerized applications. The company Komodor started as a Kubernetes diagnostics platform focusing on Kubernetes troubleshooting for the entire Kubernetes stack. More recently, Komodor is taking a step towards becoming a single-pane-of-glass to simplify Kubernetes for developers. In the past, they were more</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>34:46</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">14737</post-id>	</item>
	<item>
		<title>Permit Elements and Fullstack Authorization with Or Weis</title>
		<link>http://softwareengineeringdaily.com/2023/01/24/permit-elements-with-or-weis/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=permit-elements-with-or-weis</link>
		<pubDate>Tue, 24 Jan 2023 19:04:28 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=14729</guid>
		<comments>http://softwareengineeringdaily.com/2023/01/24/permit-elements-with-or-weis/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2023/01/24/permit-elements-with-or-weis/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[Alex DeBrie]]></category>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Podcast]]></category>
		<category><![CDATA[authentication]]></category>
		<category><![CDATA[authorization]]></category>
		<category><![CDATA[Or Weis]]></category>
		<category><![CDATA[permit.io]]></category>
		<description>&lt;p&gt;Permissions are Hard! And they are becoming harder as we move more into the Cloud-native ecosystem. If we go back in time to the point where it was just a single monolith that you were building on your own. You’ll probably have a framework to manage the permissions for you. But when you are working&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2023/01/24/permit-elements-with-or-weis/&quot;&gt;Permit Elements and Fullstack Authorization with Or Weis&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<p><span style="font-weight: 400;"><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/08/Or-Weis.png"><img decoding="async" loading="lazy" class="alignright size-full wp-image-14279" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/08/Or-Weis.png?resize=218%2C268" alt="" width="218" height="268" data-recalc-dims="1" /></a>Permissions are Hard! And they are becoming harder as we move more into the Cloud-native ecosystem. If we go back in time to the point where it was just a single monolith that you were building on your own. You&#8217;ll probably have a framework to manage the permissions for you. But when you are working with distributed microservices, especially if you are a polyglot, you can&#8217;t use those solutions anymore. So you end up having to sprinkle a bit of access control into every little microservice and component that you build. In addition, with the scale of modern applications, it&#8217;s no longer just your services, there are a lot of third-party services that you have to connect to. Think about things like authentication, billing, analytics and other stuff that you combine from eternal services into what you are building.</span></p>
<p><span style="font-weight: 400;"><a href="https://www.permit.io/">Permit.io</a> empowers developers to bake in permissions and access control into any product in minutes and takes away the pain of constantly rebuilding them. <a href="https://www.linkedin.com/in/orweis/?originalSubdomain=il">Or Weis</a> is the co-founder and CEO of Permit.io and joins us today.</span></p>
<p><em>Full disclosure: Permit.io is a sponsor of Software Engineering Daily.</em></p>
<p style="text-align: center;"><span style="font-weight: 400;">Sponsorship inquiries: <a href="sponsor@softwareengineeringdaily.com">sponsor@softwareengineeringdaily.com</a></span></p>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2023/01/24/permit-elements-with-or-weis/">Permit Elements and Fullstack Authorization with Or Weis</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED9135725359.mp3" length="85205453" type="audio/mpeg" />
		<itunes:subtitle>Permissions are Hard! And they are becoming harder as we move more into the Cloud-native ecosystem. If we go back in time to the point where it was just a single monolith that you were building on your own.</itunes:subtitle>
		<itunes:summary>Permissions are Hard! And they are becoming harder as we move more into the Cloud-native ecosystem. If we go back in time to the point where it was just a single monolith that you were building on your own. You’ll probably have a framework to manage the permissions for you. But when you are working</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>59:06</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">14729</post-id>	</item>
	<item>
		<title>Databricks Unity Catalog with Zeashan Pappa</title>
		<link>http://softwareengineeringdaily.com/2023/01/19/databricks-unity-catalog/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=databricks-unity-catalog</link>
		<pubDate>Thu, 19 Jan 2023 19:10:16 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=14718</guid>
		<comments>http://softwareengineeringdaily.com/2023/01/19/databricks-unity-catalog/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2023/01/19/databricks-unity-catalog/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Jocelyn Byrne Houle]]></category>
		<category><![CDATA[Podcast]]></category>
		<category><![CDATA[Uncategorized]]></category>
		<category><![CDATA[data]]></category>
		<category><![CDATA[Databricks]]></category>
		<category><![CDATA[Unity Catalog]]></category>
		<category><![CDATA[Zeashan Pappa]]></category>
		<description>&lt;p&gt;Data catalogs are one way to address the tension between wanting to use all the data for business advantage and needing to govern all the data for compliance. Today, Zeashan Pappa, a Databricks Product Specialist for the Unity Catalog, joins us to discuss how catalogs can help companies capture the full value of their data.&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2023/01/19/databricks-unity-catalog/&quot;&gt;Databricks Unity Catalog with Zeashan Pappa&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<p><span class=" author-d-1gg9uz65z1iz85zgdz68zmqkz84zo2qowz80zsz78zz76zz71zs896z122zz78zoz79zz71zsfj1arz78zz76zz86zz84zz90zhz90zetbz68z"> <a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/01/zeeshan.png"><img decoding="async" loading="lazy" class="alignright size-full wp-image-14719" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/01/zeeshan.png?resize=218%2C258&#038;ssl=1" alt="" width="218" height="258" data-recalc-dims="1" /></a>Data catalogs are one way to address the tension between wanting to use all the data for business advantage and needing to govern all the data for compliance. Today, <a href="https://www.linkedin.com/in/zpappa/">Zeashan Pappa</a>, a <a href="https://www.databricks.com/">Databricks</a> Product Specialist for the Unity Catalog, joins us to discuss how catalogs can help companies capture the full value of their data. Zeashan Pappa is a technology executive and architect who has 20+ years of enterprise software architecture, engineering, consulting, and project management expertise. </span></p>
<p style="text-align: center;">Sponsorship inquiries: <a href="mailto:sponsor@softwareengineeringdaily.com" target="_blank" rel="noopener noreferrer">sponsor@softwareengineeringdaily.com</a></p>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2023/01/19/databricks-unity-catalog/">Databricks Unity Catalog with Zeashan Pappa</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED8980481685.mp3" length="68402422" type="audio/mpeg" />
		<itunes:subtitle>Data catalogs are one way to address the tension between wanting to use all the data for business advantage and needing to govern all the data for compliance. Today, Zeashan Pappa, a Databricks Product Specialist for the Unity Catalog,</itunes:subtitle>
		<itunes:summary>Data catalogs are one way to address the tension between wanting to use all the data for business advantage and needing to govern all the data for compliance. Today, Zeashan Pappa, a Databricks Product Specialist for the Unity Catalog, joins us to discuss how catalogs can help companies capture the full value of their data.</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>47:26</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">14718</post-id>	</item>
	<item>
		<title>Webhooks at Scale with Alexandre Bouchard</title>
		<link>http://softwareengineeringdaily.com/2023/01/16/webhooks-at-scale/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=webhooks-at-scale</link>
		<pubDate>Tue, 17 Jan 2023 05:47:39 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=14709</guid>
		<comments>http://softwareengineeringdaily.com/2023/01/16/webhooks-at-scale/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2023/01/16/webhooks-at-scale/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Podcast]]></category>
		<category><![CDATA[Sean Falconer]]></category>
		<category><![CDATA[Alexandre Bouchard]]></category>
		<category><![CDATA[Hookdeck]]></category>
		<category><![CDATA[integrations at scale]]></category>
		<category><![CDATA[Webhooks]]></category>
		<description>&lt;p&gt;Webhooks are used in connecting two different online applications. Webhooks allow one program to send data to another as soon as a certain event takes place.And because they are event-driven, webhooks are ideal for things like real-time notifications and data updates. The company Hookdeck helps build webhook integrations at scale. In this episode, we talk&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2023/01/16/webhooks-at-scale/&quot;&gt;Webhooks at Scale with Alexandre Bouchard&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<p><span style="font-weight: 400;"><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/01/alex.png"><img decoding="async" loading="lazy" class="alignright size-full wp-image-14710" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/01/alex.png?resize=218%2C258" alt="" width="218" height="258" data-recalc-dims="1" /></a>Webhooks are used in connecting two different online applications. Webhooks allow one program to send data to another as soon as a certain event takes place.And because they are event-driven, webhooks are ideal for things like real-time notifications and data updates. The company Hookdeck helps build webhook integrations at scale.</span></p>
<p><span style="font-weight: 400;">In this episode, we talk with <a href="https://twitter.com/alexbouchardd">Alexandre Bouchard</a>, Co-founder of <a href="https://hookdeck.com/">Hookdeck</a>.</span></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p style="text-align: center;">Sponsorship inquiries: <a href="mailto:sponsor@softwareengineeringdaily.com" target="_blank" rel="noopener noreferrer">sponsor@softwareengineeringdaily.com</a></p>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2023/01/16/webhooks-at-scale/">Webhooks at Scale with Alexandre Bouchard</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED7282895937.mp3" length="82509816" type="audio/mpeg" />
		<itunes:subtitle>Webhooks are used in connecting two different online applications. Webhooks allow one program to send data to another as soon as a certain event takes place.And because they are event-driven, webhooks are ideal for things like real-time notifications a...</itunes:subtitle>
		<itunes:summary>Webhooks are used in connecting two different online applications. Webhooks allow one program to send data to another as soon as a certain event takes place.And because they are event-driven, webhooks are ideal for things like real-time notifications and data updates. The company Hookdeck helps build webhook integrations at scale. In this episode, we talk</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>57:14</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">14709</post-id>	</item>
	<item>
		<title>Caching at Twitter with Yao Yue</title>
		<link>http://softwareengineeringdaily.com/2023/01/12/caching-at-twitter-with-yao-yue/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=caching-at-twitter-with-yao-yue</link>
		<pubDate>Thu, 12 Jan 2023 10:00:33 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=14700</guid>
		<comments>http://softwareengineeringdaily.com/2023/01/12/caching-at-twitter-with-yao-yue/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2023/01/12/caching-at-twitter-with-yao-yue/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[Alex DeBrie]]></category>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Podcast]]></category>
		<category><![CDATA[Pelikan]]></category>
		<category><![CDATA[Twemcache]]></category>
		<category><![CDATA[Twitter]]></category>
		<category><![CDATA[Yao Yue]]></category>
		<description>&lt;p&gt;Twitter is a social media platform that does some incredibly complex stuff when it comes to distributed systems engineering to keep the website up and running. Twitter has open sourced a lot of projects for others to use. Twitter created a fork of Memcached called Twemcache and also a fork of Redis to handle the&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2023/01/12/caching-at-twitter-with-yao-yue/&quot;&gt;Caching at Twitter with Yao Yue&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<p><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/01/yao_yue.png"><img decoding="async" loading="lazy" class="alignright size-full wp-image-14701" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/01/yao_yue.png?resize=200%2C240&#038;ssl=1" alt="" width="200" height="240" data-recalc-dims="1" /></a>Twitter is a social media platform that does some incredibly complex stuff when it comes to distributed systems engineering to keep the website up and running. Twitter has open sourced a lot of projects for others to use. Twitter created a fork of Memcached called Twemcache and also a fork of Redis to handle the caching issues. In this episode we talk to <a href="https://twitter.com/thinkingfish">Yao Yue</a>. Yao Yue is an expert in distributed systems and performance. She led the cache team at Twitter. Her most notable open-source project is Pelikan, a modular caching framework with the best performance and operator ergonomics in the domain of distributed caching. Pelikan is ideal for large scale deployment as well as cutting-edge research.</p>
<p style="text-align: center;">Sponsorship inquiries: <a href="mailto:sponsor@softwareengineeringdaily.com" target="_blank" rel="noopener noreferrer">sponsor@softwareengineeringdaily.com</a></p>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2023/01/12/caching-at-twitter-with-yao-yue/">Caching at Twitter with Yao Yue</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED5317003113.mp3" length="72243197" type="audio/mpeg" />
		<itunes:subtitle>Twitter is a social media platform that does some incredibly complex stuff when it comes to distributed systems engineering to keep the website up and running. Twitter has open sourced a lot of projects for others to use.</itunes:subtitle>
		<itunes:summary>Twitter is a social media platform that does some incredibly complex stuff when it comes to distributed systems engineering to keep the website up and running. Twitter has open sourced a lot of projects for others to use. Twitter created a fork of Memcached called Twemcache and also a fork of Redis to handle the</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>50:06</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">14700</post-id>	</item>
	<item>
		<title>Cloud Native Compiler with John Ceccarelli</title>
		<link>http://softwareengineeringdaily.com/2023/01/11/cloud-native-compiler/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=cloud-native-compiler</link>
		<pubDate>Wed, 11 Jan 2023 09:00:34 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=14698</guid>
		<comments>http://softwareengineeringdaily.com/2023/01/11/cloud-native-compiler/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2023/01/11/cloud-native-compiler/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[Alex DeBrie]]></category>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Podcast]]></category>
		<category><![CDATA[Azul]]></category>
		<category><![CDATA[Cloud Native Compiler]]></category>
		<category><![CDATA[Java]]></category>
		<category><![CDATA[John Ceccarelli]]></category>
		<description>&lt;p&gt;Java is a write once run anywhere programming language. The way you do that is you use the javac compiler and compile the source files down to the class files. Those class files can run on any system in interpreted mode. But those class files that are run in interpreted mode, they are not machine&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2023/01/11/cloud-native-compiler/&quot;&gt;Cloud Native Compiler with John Ceccarelli&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<p><span style="font-weight: 400;"><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/10/John-Ceccarelli.png"><img decoding="async" loading="lazy" class="alignright size-full wp-image-14469" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/10/John-Ceccarelli.png?resize=218%2C258" alt="" width="218" height="258" data-recalc-dims="1" /></a>Java is a write once run anywhere programming language. The way you do that is you use the javac compiler and compile the source files down to the class files. Those class files can run on any system in interpreted mode. But those class files that are run in interpreted mode, they are not machine code specific. To get that code to run fast you need to turn that into optimized machine code and that’s what the JIT compiler does. The open JDK contains its JIT compiler called Hotspot.</span><span style="font-weight: 400;"><br />
</span><span style="font-weight: 400;"><br />
</span><span style="font-weight: 400;"><a href="https://www.azul.com/">Azul</a> is a company that specializes in Java for the enterprise. It has the largest Java engineering team after Oracle. <a href="https://twitter.com/jceccarelli1?lang=en">John Ceccarelli</a> is the Senior Director of Product Management at Azul Systems responsible for Azul Platform Prime which is their hyper optimized build of OpenJDK. In this episode we explore the fundamentals of compilers. We also discuss Azul&#8217;s Cloud Native Compiler, the programs that are suitable for the Cloud Native Compiler and the Deployment model of CNC.</span></p>
<p><em>Full disclosure: Azul is a sponsor of Software Engineering Daily.</em></p>
<p><a href="http://softwareengineeringdaily.com/wp-content/uploads/2023/02/SED1534-John-Ceccarelli.pdf">Transcript</a></p>
<p style="text-align: center;">Sponsorship inquiries: <a href="mailto:sponsor@softwareengineeringdaily.com" target="_blank" rel="noopener noreferrer">sponsor@softwareengineeringdaily.com</a></p>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2023/01/11/cloud-native-compiler/">Cloud Native Compiler with John Ceccarelli</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED9101974067.mp3" length="59243670" type="audio/mpeg" />
		<itunes:subtitle>Java is a write once run anywhere programming language. The way you do that is you use the javac compiler and compile the source files down to the class files. Those class files can run on any system in interpreted mode.</itunes:subtitle>
		<itunes:summary>Java is a write once run anywhere programming language. The way you do that is you use the javac compiler and compile the source files down to the class files. Those class files can run on any system in interpreted mode. But those class files that are run in interpreted mode, they are not machine</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>41:05</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">14698</post-id>	</item>
	<item>
		<title>MLOps Systems at Scale with Krishna Gade</title>
		<link>http://softwareengineeringdaily.com/2023/01/10/mlops-at-scale/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=mlops-at-scale</link>
		<pubDate>Tue, 10 Jan 2023 15:08:39 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=14683</guid>
		<comments>http://softwareengineeringdaily.com/2023/01/10/mlops-at-scale/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2023/01/10/mlops-at-scale/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Jocelyn Byrne Houle]]></category>
		<category><![CDATA[Podcast]]></category>
		<category><![CDATA[Fiddler]]></category>
		<category><![CDATA[Krishna Gade]]></category>
		<category><![CDATA[ML workflows]]></category>
		<category><![CDATA[MLOps]]></category>
		<description>&lt;p&gt; Although we like to think about ML workflows as straight-line narratives from experiment to training to production, and then finally monitoring; the reality for large companies is that all the steps are happening at one time in concert with other models, with shifting data, and, sometimes, misaligned key feature inputs. Moreover, regulated firms are required&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2023/01/10/mlops-at-scale/&quot;&gt;MLOps Systems at Scale with Krishna Gade&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<div>
<p><span class=" author-d-1gg9uz65z1iz85zgdz68zmqkz84zo2qowz80zsz78zz76zz71zs896z122zz78zoz79zz71zsfj1arz78zz76zz86zz84zz90zhz90zetbz68z"><span class=" author-d-1gg9uz65z1iz85zgdz68zmqkz84zo2qowz80zsz78zz76zz71zs896z122zz78zoz79zz71zsfj1arz78zz76zz86zz84zz90zhz90zetbz68z"> Although we like to think about ML workflows as straight-line narratives from experiment to training to production, and then finally monitoring; the reality for large companies is that all the steps are happening at one time in concert with other models, with shifting data, and, sometimes, misaligned key feature inputs.</span></span></p>
<p><span class=" author-d-1gg9uz65z1iz85zgdz68zmqkz84zo2qowz80zsz78zz76zz71zs896z122zz78zoz79zz71zsfj1arz78zz76zz86zz84zz90zhz90zetbz68z">Moreover, regulated firms are required to track all the models, the changes, and the impacts of those changes for compliance. Enter explainability supported by model monitoring. Far from the old, single task process of only monitoring changes and anomalies, today’s ML monitoring does much more. It uses AI to deliver full featured performance management that can identify changes, alert the right people, and pop models back into production in real time with proper governance.</span></p>
</div>
<div><span class=" author-d-1gg9uz65z1iz85zgdz68zmqkz84zo2qowz80zsz78zz76zz71zs896z122zz78zoz79zz71zsfj1arz78zz76zz86zz84zz90zhz90zetbz68z"><a href="https://www.fiddler.ai/">FiddlerAI</a> is a startup focused on enterprise model performance management. They are tackling the unique challenges of building in-house stable and secure MLOps systems at scale. Today we are interviewing <a href="https://twitter.com/krishnagade">Krishna Gade</a> about trusting AI, the technical challenges of ML monitoring and the real world problem statements beyond compliance that explainability can address.</span></div>
<div></div>
<div style="text-align: center;">Sponsorship inquiries: <a href="mailto:sponsor@softwareengineeringdaily.com" target="_blank" rel="noopener noreferrer">sponsor@softwareengineeringdaily.com</a></div>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2023/01/10/mlops-at-scale/">MLOps Systems at Scale with Krishna Gade</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED6867524527.mp3" length="70899831" type="audio/mpeg" />
		<itunes:subtitle> Although we like to think about ML workflows as straight-line narratives from experiment to training to production, and then finally monitoring; the reality for large companies is that all the steps are happening at one time in concert with other mode...</itunes:subtitle>
		<itunes:summary> Although we like to think about ML workflows as straight-line narratives from experiment to training to production, and then finally monitoring; the reality for large companies is that all the steps are happening at one time in concert with other models, with shifting data, and, sometimes, misaligned key feature inputs. Moreover, regulated firms are required</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>49:10</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">14683</post-id>	</item>
	<item>
		<title>Optimizing Cloud Data Platforms with Mingsheng Hong</title>
		<link>http://softwareengineeringdaily.com/2023/01/06/optimizing-cloud-data-platforms/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=optimizing-cloud-data-platforms</link>
		<pubDate>Fri, 06 Jan 2023 09:00:22 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=14679</guid>
		<comments>http://softwareengineeringdaily.com/2023/01/06/optimizing-cloud-data-platforms/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2023/01/06/optimizing-cloud-data-platforms/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Jocelyn Byrne Houle]]></category>
		<category><![CDATA[Podcast]]></category>
		<category><![CDATA[BlueSky]]></category>
		<category><![CDATA[Cloud Data Platforms]]></category>
		<category><![CDATA[data cloud]]></category>
		<category><![CDATA[Mingsheng Hong]]></category>
		<description>&lt;p&gt;Mingsheng Hong, is CEO and co-founder (along with Zheng Shao) of Bluesky. He is a thought leader for machine learning and has built data infrastructure to support some of the world’s most challenging workloads. Most recently, Mingsheng was at Google, where he led teams to build storage and querying stacks that power Google’s $100 billion&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2023/01/06/optimizing-cloud-data-platforms/&quot;&gt;Optimizing Cloud Data Platforms with Mingsheng Hong&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<div><span class=" author-d-1gg9uz65z1iz85zgdz68zmqkz84zo2qowz80zsz78zz76zz71zs896z122zz78zoz79zz71zsfj1arz78zz76zz86zz84zz90zhz90zetbz68z"><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/01/Mingsheng.png"><img decoding="async" loading="lazy" class="alignright size-full wp-image-14680" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/01/Mingsheng.png?resize=218%2C258&#038;ssl=1" alt="" width="218" height="258" data-recalc-dims="1" /></a></span></div>
<div>
<div dir="auto"><a href="https://www.linkedin.com/in/mingshenghong" target="_blank" rel="noopener" data-saferedirecturl="https://www.google.com/url?q=https://www.linkedin.com/in/mingshenghong&amp;source=gmail&amp;ust=1673104604909000&amp;usg=AOvVaw2Fy5Hag4mBNdbJokRZh9Rh">Mingsheng Hong</a>, is CEO and co-founder (along with Zheng Shao) of Bluesky. He is a thought leader for machine learning and has built data infrastructure to support some of the world’s most challenging workloads. Most recently, Mingsheng was at Google, where he led teams to build storage and querying stacks that power Google’s $100 billion ads business and a new TensorFlow backend to improve performance for AI workloads.</div>
<div dir="auto"></div>
<div dir="auto">
<p><a href="https://www.linkedin.com/in/jocelyn" target="_blank" rel="noopener" data-saferedirecturl="https://www.google.com/url?q=https://www.linkedin.com/in/jocelyn&amp;source=gmail&amp;ust=1673104604909000&amp;usg=AOvVaw204-F7njmmIBGD4EZ2mFLl">Jocelyn Byrne Houle</a> is a product leader, operator and investor focused on data and machine learning.  Today, Jocelyn is a Sr. Director of Product Management for Securiti.ai, a Unified Data Controls platform.  She has experience working at startups and at large companies like Capital One, Fannie Mae and Microsoft. Any opinions expressed by Jocelyn are her own and do not reflect the opinions or her employers.</p>
</div>
</div>
<div style="text-align: center;">Sponsorship inquiries: <a href="mailto:sponsor@softwareengineeringdaily.com" target="_blank" rel="noopener noreferrer">sponsor@softwareengineeringdaily.com</a></div>
<div></div>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2023/01/06/optimizing-cloud-data-platforms/">Optimizing Cloud Data Platforms with Mingsheng Hong</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED3066594053.mp3" length="79572305" type="audio/mpeg" />
		<itunes:subtitle>Mingsheng Hong, is CEO and co-founder (along with Zheng Shao) of Bluesky. He is a thought leader for machine learning and has built data infrastructure to support some of the world’s most challenging workloads. Most recently, Mingsheng was at Google,</itunes:subtitle>
		<itunes:summary>Mingsheng Hong, is CEO and co-founder (along with Zheng Shao) of Bluesky. He is a thought leader for machine learning and has built data infrastructure to support some of the world’s most challenging workloads. Most recently, Mingsheng was at Google, where he led teams to build storage and querying stacks that power Google’s $100 billion</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>55:12</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">14679</post-id>	</item>
	<item>
		<title>Software Supply Chain with Dan Lorenc</title>
		<link>http://softwareengineeringdaily.com/2023/01/06/software-supply-chain/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=software-supply-chain</link>
		<pubDate>Fri, 06 Jan 2023 08:30:43 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=14687</guid>
		<comments>http://softwareengineeringdaily.com/2023/01/06/software-supply-chain/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2023/01/06/software-supply-chain/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Jordi Mon Companys]]></category>
		<category><![CDATA[Podcast]]></category>
		<description>&lt;p&gt;Show host: Jordi Mon Companys Guest: Dan Lorenc&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2023/01/06/software-supply-chain/&quot;&gt;Software Supply Chain with Dan Lorenc&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<p>Show host: <a href="https://twitter.com/JordiMonPMM">Jordi Mon Companys</a></p>
<p>Guest: <a href="https://twitter.com/lorenc_dan">Dan Lorenc</a></p>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2023/01/06/software-supply-chain/">Software Supply Chain with Dan Lorenc</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED8055130874.mp3" length="34927339" type="audio/mpeg" />
		<itunes:subtitle>Show host: Jordi Mon Companys Guest: Dan Lorenc</itunes:subtitle>
		<itunes:summary>Show host: Jordi Mon Companys Guest: Dan Lorenc</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>24:12</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">14687</post-id>	</item>
	<item>
		<title>Open Source Software Lifecycle Management and Security with Varun Badhwar</title>
		<link>http://softwareengineeringdaily.com/2023/01/04/open-source-software-lifecycle/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=open-source-software-lifecycle</link>
		<pubDate>Thu, 05 Jan 2023 05:29:05 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=14673</guid>
		<comments>http://softwareengineeringdaily.com/2023/01/04/open-source-software-lifecycle/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2023/01/04/open-source-software-lifecycle/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Podcast]]></category>
		<category><![CDATA[Sean Falconer]]></category>
		<description>&lt;p&gt;In this episode we talk with Varun Badhwar, Founder and CEO of Endor Labs. Show host: Sean Falconer Transcript&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2023/01/04/open-source-software-lifecycle/&quot;&gt;Open Source Software Lifecycle Management and Security with Varun Badhwar&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<p>In this episode we talk with <a href="https://twitter.com/varun__badhwar">Varun Badhwar</a>, Founder and CEO of <a href="https://www.endorlabs.com/">Endor Labs</a>.</p>
<p>Show host: <a href="https://twitter.com/seanfalconer">Sean Falconer</a></p>
<p><a href="http://softwareengineeringdaily.com/wp-content/uploads/2023/02/SED1532-Varun-Badhwar.pdf">Transcript</a></p>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2023/01/04/open-source-software-lifecycle/">Open Source Software Lifecycle Management and Security with Varun Badhwar</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED1307769552.mp3" length="69315992" type="audio/mpeg" />
		<itunes:subtitle>In this episode we talk with Varun Badhwar, Founder and CEO of Endor Labs. Show host: Sean Falconer Transcript</itunes:subtitle>
		<itunes:summary>In this episode we talk with Varun Badhwar, Founder and CEO of Endor Labs. Show host: Sean Falconer Transcript</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>48:04</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">14673</post-id>	</item>
	<item>
		<title>Pipelines as Code with Sam Alba</title>
		<link>http://softwareengineeringdaily.com/2023/01/04/pipelines-as-code-with-sam-alba/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=pipelines-as-code-with-sam-alba</link>
		<pubDate>Wed, 04 Jan 2023 15:00:24 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=14676</guid>
		<comments>http://softwareengineeringdaily.com/2023/01/04/pipelines-as-code-with-sam-alba/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2023/01/04/pipelines-as-code-with-sam-alba/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Jordi Mon Companys]]></category>
		<category><![CDATA[Podcast]]></category>
		<description>&lt;p&gt;Show Host: Jordi Mon Companys Guest: Sam Alba Transcript&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2023/01/04/pipelines-as-code-with-sam-alba/&quot;&gt;Pipelines as Code with Sam Alba&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<p>Show Host: <a href="https://twitter.com/JordiMonPMM">Jordi Mon Companys</a></p>
<p>Guest: <a href="https://twitter.com/sam_alba">Sam Alba</a></p>
<p><a href="http://softwareengineeringdaily.com/wp-content/uploads/2023/01/SED1533-Pipelines-as-Code-with-Sam-Alba.pdf">Transcript</a></p>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2023/01/04/pipelines-as-code-with-sam-alba/">Pipelines as Code with Sam Alba</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED9611916763.mp3" length="64224490" type="audio/mpeg" />
		<itunes:subtitle>Show Host: Jordi Mon Companys Guest: Sam Alba Transcript</itunes:subtitle>
		<itunes:summary>Show Host: Jordi Mon Companys Guest: Sam Alba Transcript</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>44:32</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">14676</post-id>	</item>
	<item>
		<title>API Testing in Kubernetes with Matthew LeRay</title>
		<link>http://softwareengineeringdaily.com/2023/01/03/api-testing-in-kubernetes/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=api-testing-in-kubernetes</link>
		<pubDate>Tue, 03 Jan 2023 16:56:39 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=14670</guid>
		<comments>http://softwareengineeringdaily.com/2023/01/03/api-testing-in-kubernetes/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2023/01/03/api-testing-in-kubernetes/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Lee Atchison]]></category>
		<category><![CDATA[Podcast]]></category>
		<category><![CDATA[API testing]]></category>
		<category><![CDATA[Kubernetes]]></category>
		<category><![CDATA[Matthew LeRay]]></category>
		<category><![CDATA[Speedscale]]></category>
		<description>&lt;p&gt;As applications grow in size and complexity, and as they increasingly move to microservice architectures, it becomes harder for individual developers to perform end-to-end tests of an entire application stack. Connecting development services to production services is off limits. Test environments are limited to automated tests. Staging environments are woefully inadequate with the amount of&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2023/01/03/api-testing-in-kubernetes/&quot;&gt;API Testing in Kubernetes with Matthew LeRay&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<p><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/01/matt.png"><img decoding="async" loading="lazy" class="alignright size-full wp-image-14671" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/01/matt.png?resize=218%2C258" alt="" width="218" height="258" data-recalc-dims="1" /></a>As applications grow in size and complexity, and as they increasingly move to microservice architectures, it becomes harder for individual developers to perform end-to-end tests of an entire application stack. Connecting development services to production services is off limits. Test environments are limited to automated tests.<br />
Staging environments are woefully inadequate with the amount of data available for their use. Testing large and complex applications is becoming harder and harder. Speedscale provides developers a solution to this problem. <a href="https://speedscale.com/">Speedscale</a> assists in developing and testing applications by recreating real world traffic loads in test and development environments, essentially bringing the data quality of production into the exploratory world of development. <a href="https://twitter.com/matthewleray">Matthew LeRay</a> is the CTO and co-founder of Speedscale, and he&#8217;s our guest today.</p>
<p><a href="http://softwareengineeringdaily.com/wp-content/uploads/2023/01/SED1531-API-Testing-in-Kubernetes-with-Matthew-LeRay.pdf">Transcript</a></p>
<div class="p-workspace__primary_view_body">
<div class="p-message_pane p-message_pane--classic-nav p-message_pane--scrollbar-float-adjustment p-message_pane--with-bookmarks-bar p-message_pane--with-bookmarks-bar-open" data-qa="message_pane">
<div class="resize-triggers">
<div class="contract-trigger" style="text-align: center;">Sponsorship inquiries: <a href="mailto:sponsor@softwareengineeringdaily.com" target="_blank" rel="noopener noreferrer">sponsor@softwareengineeringdaily.com</a></div>
</div>
</div>
</div>
<div class="p-workspace__primary_view_footer p-workspace__primary_view_footer--float">
<div class="p-workspace__primary_view_footer_inner">
<div class="p-message_pane_input" data-qa="message_input_container">
<div class="p-message_pane_input_inner">
<div class="p-message_pane_input_inner_top">
<div class="p-context_bar_v2" data-qa="context_bar">
<div class="p-context_bar_v2__icon"></div>
</div>
</div>
</div>
</div>
</div>
</div>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2023/01/03/api-testing-in-kubernetes/">API Testing in Kubernetes with Matthew LeRay</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED5192070780.mp3" length="50470833" type="audio/mpeg" />
		<itunes:subtitle>As applications grow in size and complexity, and as they increasingly move to microservice architectures, it becomes harder for individual developers to perform end-to-end tests of an entire application stack.</itunes:subtitle>
		<itunes:summary>As applications grow in size and complexity, and as they increasingly move to microservice architectures, it becomes harder for individual developers to perform end-to-end tests of an entire application stack. Connecting development services to production services is off limits. Test environments are limited to automated tests. Staging environments are woefully inadequate with the amount of</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>34:59</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">14670</post-id>	</item>
	<item>
		<title>Open Source Design Collaboration</title>
		<link>http://softwareengineeringdaily.com/2023/01/02/open-source-design-collaboration/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=open-source-design-collaboration</link>
		<pubDate>Mon, 02 Jan 2023 16:34:36 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=14667</guid>
		<comments>http://softwareengineeringdaily.com/2023/01/02/open-source-design-collaboration/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2023/01/02/open-source-design-collaboration/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Jordi Mon Companys]]></category>
		<category><![CDATA[Podcast]]></category>
		<description>&lt;p&gt;Show Host: Jordi Mon Companys Heather Meeker Scott Jenson Pablo Ruiz-Múzquiz Transcript&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2023/01/02/open-source-design-collaboration/&quot;&gt;Open Source Design Collaboration&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<p>Show Host: <a href="https://twitter.com/JordiMonPMM">Jordi Mon Companys</a></p>
<p style="text-align: left;"><a href="https://twitter.com/heathermeeker4">Heather Meeker</a></p>
<p style="text-align: left;"><a href="https://www.linkedin.com/in/scottjenson/">Scott Jenson</a></p>
<p style="text-align: left;"><a href="https://www.linkedin.com/in/pruizmuzquiz/">Pablo Ruiz-Múzquiz</a></p>
<p><a href="http://softwareengineeringdaily.com/wp-content/uploads/2023/01/SED1529-Open-Source-Design-Collaboration.pdf">Transcript</a></p>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2023/01/02/open-source-design-collaboration/">Open Source Design Collaboration</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED9957508162.mp3" length="89104244" type="audio/mpeg" />
		<itunes:subtitle>Show Host: Jordi Mon Companys Heather Meeker Scott Jenson Pablo Ruiz-Múzquiz Transcript</itunes:subtitle>
		<itunes:summary>Show Host: Jordi Mon Companys Heather Meeker Scott Jenson Pablo Ruiz-Múzquiz Transcript</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>1:01:49</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">14667</post-id>	</item>
	<item>
		<title>API Observability with Jean Yang</title>
		<link>http://softwareengineeringdaily.com/2022/12/30/api-observability-with-jean-yang/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=api-observability-with-jean-yang</link>
		<pubDate>Fri, 30 Dec 2022 08:47:58 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=14665</guid>
		<comments>http://softwareengineeringdaily.com/2022/12/30/api-observability-with-jean-yang/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2022/12/30/api-observability-with-jean-yang/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[Alex DeBrie]]></category>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Podcast]]></category>
		<description>&lt;p&gt;Transcript&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2022/12/30/api-observability-with-jean-yang/&quot;&gt;API Observability with Jean Yang&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<p><a href="http://softwareengineeringdaily.com/wp-content/uploads/2023/01/SED1529-Open-Source-Design-Collaboration.pdf">Transcript</a></p>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2022/12/30/api-observability-with-jean-yang/">API Observability with Jean Yang</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED4161608810.mp3" length="58342866" type="audio/mpeg" />
		<itunes:subtitle>Transcript</itunes:subtitle>
		<itunes:summary>Transcript</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>40:27</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">14665</post-id>	</item>
	<item>
		<title>Startup Investing with Ashmeet Sidana</title>
		<link>http://softwareengineeringdaily.com/2022/12/21/startup-investing-with-ashmeet-sidana/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=startup-investing-with-ashmeet-sidana</link>
		<pubDate>Thu, 22 Dec 2022 06:05:32 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=14648</guid>
		<comments>http://softwareengineeringdaily.com/2022/12/21/startup-investing-with-ashmeet-sidana/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2022/12/21/startup-investing-with-ashmeet-sidana/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Podcast]]></category>
		<category><![CDATA[Sean Falconer]]></category>
		<category><![CDATA[Uncategorized]]></category>
		<category><![CDATA[Ashmeet Sidana]]></category>
		<category><![CDATA[Engineering Capital]]></category>
		<category><![CDATA[technical risk]]></category>
		<category><![CDATA[Venture Capital]]></category>
		<description>&lt;p&gt;Silicon Valley has many investors and Venture Capital firms, but most are not trying to solve hard technical problems. Engineering Capital partners with companies that are taking a technical risk. These are the companies who have some innovation where there is a doubt on whether it can even be built. Ideally, the market for this&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2022/12/21/startup-investing-with-ashmeet-sidana/&quot;&gt;Startup Investing with Ashmeet Sidana&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<div class="p-workspace__primary_view_body">
<div class="p-message_pane p-message_pane--classic-nav p-message_pane--scrollbar-float-adjustment p-message_pane--with-bookmarks-bar p-message_pane--with-bookmarks-bar-open" data-qa="message_pane">
<div>
<div role="presentation">
<div class="c-virtual_list c-virtual_list--scrollbar c-message_list c-message_list--floating c-message_list--context_bar_showing c-scrollbar c-scrollbar--fade" role="presentation">
<div class="c-scrollbar__hider" role="presentation" data-qa="slack_kit_scrollbar">
<div class="c-scrollbar__child" role="presentation">
<div class="c-virtual_list__scroll_container" role="list" data-qa="slack_kit_list" aria-label="Ankur (direct message, away)">
<div id="1671642836.615959" class="c-virtual_list__item c-virtual_list__item--initial-activeitem" tabindex="0" role="listitem" aria-setsize="-1" data-qa="virtual-list-item" data-item-key="1671642836.615959">
<div class="c-message_kit__background c-message_kit__background--hovered p-message_pane_message__message c-message_kit__message p-message_pane_message__message--last p-message_pane_message__message--showing_context_bar" role="presentation" data-qa="message_container" data-qa-unprocessed="false" data-qa-placeholder="false">
<div class="c-message_kit__hover c-message_kit__hover--hovered" role="document" aria-roledescription="message" data-qa-hover="true">
<div class="c-message_kit__actions c-message_kit__actions--default">
<div class="c-message_kit__gutter">
<div class="c-message_kit__gutter__right" role="presentation" data-qa="message_content">
<div class="c-message_kit__blocks c-message_kit__blocks--rich_text">
<div class="c-message__message_blocks c-message__message_blocks--rich_text" data-qa="message-text">
<div class="p-block_kit_renderer" data-qa="block-kit-renderer">
<div class="p-block_kit_renderer__block_wrapper p-block_kit_renderer__block_wrapper--first">
<div class="p-rich_text_block" dir="auto">
<div class="p-rich_text_section"><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/12/ashmeet.png"><img decoding="async" loading="lazy" class="alignright size-full wp-image-14649" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/12/ashmeet.png?resize=218%2C258" alt="" width="218" height="258" data-recalc-dims="1" /></a>Silicon Valley has many investors and Venture Capital firms, but most are not trying to solve hard technical problems. <a href="https://www.engineeringcapital.com/">Engineering Capital</a> partners with companies that are taking a technical risk. These are the companies who have some innovation where there is a doubt on whether it can even be built. Ideally, the market for this innovation exists, but nobody has bothered to build it yet, or nobody has been able to build it yet.<br />
In this episode, We sat down with <a href="https://twitter.com/ashmeetsidana">Ashmeet Sidana</a>, Founder and Chief Engineer of Engineering Capital.</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
<div class="c-message_actions__container c-message__actions" role="group">
<div class="c-message_actions__group" role="group" aria-label="Message actions" data-qa="message-actions"></div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
<div class="c-scrollbar__track" role="presentation">
<div class="c-scrollbar__bar" tabindex="-1" role="presentation"><a href="http://softwareengineeringdaily.com/wp-content/uploads/2022/12/SED1527-Startup-Investing-with-Ashmeet-Sidana.pdf">Transcript</a></div>
</div>
</div>
</div>
</div>
<div class="resize-triggers">
<div class="expand-trigger">
<div></div>
</div>
<div class="contract-trigger" style="text-align: center;">Sponsorship inquiries: <a href="mailto:sponsor@softwareengineeringdaily.com" target="_blank" rel="noopener noreferrer">sponsor@softwareengineeringdaily.com</a></div>
</div>
</div>
</div>
<div class="p-workspace__primary_view_footer p-workspace__primary_view_footer--float">
<div class="p-workspace__primary_view_footer_inner">
<div class="p-message_pane_input" data-qa="message_input_container">
<div class="p-message_pane_input_inner">
<div class="p-message_pane_input_inner_top">
<div class="p-context_bar_v2" data-qa="context_bar">
<div class="p-context_bar_v2__icon"></div>
</div>
</div>
</div>
</div>
</div>
</div>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2022/12/21/startup-investing-with-ashmeet-sidana/">Startup Investing with Ashmeet Sidana</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED5643593655.mp3" length="77367635" type="audio/mpeg" />
		<itunes:subtitle>Silicon Valley has many investors and Venture Capital firms, but most are not trying to solve hard technical problems. Engineering Capital partners with companies that are taking a technical risk. These are the companies who have some innovation where ...</itunes:subtitle>
		<itunes:summary>Silicon Valley has many investors and Venture Capital firms, but most are not trying to solve hard technical problems. Engineering Capital partners with companies that are taking a technical risk. These are the companies who have some innovation where there is a doubt on whether it can even be built. Ideally, the market for this</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>53:40</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">14648</post-id>	</item>
	<item>
		<title>The Enterprise Data Catalog with Ole Olesen-Bagneux</title>
		<link>http://softwareengineeringdaily.com/2022/12/14/the-enterprise-data-catalog/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=the-enterprise-data-catalog</link>
		<pubDate>Wed, 14 Dec 2022 18:15:40 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=14608</guid>
		<comments>http://softwareengineeringdaily.com/2022/12/14/the-enterprise-data-catalog/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2022/12/14/the-enterprise-data-catalog/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Jocelyn Byrne Houle]]></category>
		<category><![CDATA[Podcast]]></category>
		<category><![CDATA[Uncategorized]]></category>
		<category><![CDATA[data catalog]]></category>
		<category><![CDATA[Enterprise Data Catalogs]]></category>
		<category><![CDATA[O'Reilly]]></category>
		<category><![CDATA[Ole Olesen-Bagneux]]></category>
		<description>&lt;p&gt;We do it every day. We search on the internet for some information. Many ask, why is that easy? And yet doing the same thing at my company is hard sometimes, not even possible. And when you do get the data, it’s unclear where it’s from or the degree you can trust it or use&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2022/12/14/the-enterprise-data-catalog/&quot;&gt;The Enterprise Data Catalog with Ole Olesen-Bagneux&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<p><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/12/Ole-Olesen-Bagneux.png"><img decoding="async" loading="lazy" class="alignright size-full wp-image-14639" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/12/Ole-Olesen-Bagneux.png?resize=218%2C258&#038;ssl=1" alt="" width="218" height="258" data-recalc-dims="1" /></a>We do it every day. We search on the internet for some information. Many ask, why is that easy? And yet doing the same thing at my company is hard sometimes, not even possible. And when you do get the data, it&#8217;s unclear where it&#8217;s from or the degree you can trust it or use it. In a highly regulated firm, there&#8217;s even more pressure to select the best approved version of the information.</p>
<p>Enter the data catalog. Enterprise Data Catalogs are essential for searching for data in an organization. Moreover, their creation, maintenance, and design tap into the most fundamental theories of the philosophy of language and the nature of creating knowledge. Today we are interviewing architect and author Ole Olesen-Bagneux, who is finishing his first O&#8217;Reilly published book called Enterprise Data Catalogs. Today, he will explain what a data catalog is, the different ways computer scientists and information scientists think about searching for data versus searching in data, and how thinking about archiving data for a hundred years can help you create the best data catalog for your business today.</p>
<p>Follow Jocelyn : <a href="https://twitter.com/jocelynbyrne">@jocelynbyrne</a></p>
<p style="text-align: center;">Sponsorship inquiries: <a href="mailto:sponsor@softwareengineeringdaily.com" target="_blank" rel="noopener noreferrer">sponsor@softwareengineeringdaily.com</a></p>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2022/12/14/the-enterprise-data-catalog/">The Enterprise Data Catalog with Ole Olesen-Bagneux</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED7625146301.mp3" length="100043104" type="audio/mpeg" />
		<itunes:subtitle>We do it every day. We search on the internet for some information. Many ask, why is that easy? And yet doing the same thing at my company is hard sometimes, not even possible. And when you do get the data,</itunes:subtitle>
		<itunes:summary>We do it every day. We search on the internet for some information. Many ask, why is that easy? And yet doing the same thing at my company is hard sometimes, not even possible. And when you do get the data, it’s unclear where it’s from or the degree you can trust it or use</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>1:09:25</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">14608</post-id>	</item>
	<item>
		<title>Minimizing PII in Dev Environments with John Craft</title>
		<link>http://softwareengineeringdaily.com/2022/12/12/minimizing-pii-in-dev-environments/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=minimizing-pii-in-dev-environments</link>
		<pubDate>Mon, 12 Dec 2022 16:14:08 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=14630</guid>
		<comments>http://softwareengineeringdaily.com/2022/12/12/minimizing-pii-in-dev-environments/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2022/12/12/minimizing-pii-in-dev-environments/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Jeff Hemmen]]></category>
		<category><![CDATA[Podcast]]></category>
		<category><![CDATA[data anonymisation]]></category>
		<category><![CDATA[John Craft]]></category>
		<category><![CDATA[PII]]></category>
		<category><![CDATA[Privacy Dynamics]]></category>
		<description>&lt;p&gt;Data anonymisation is an ever more important problem with many pitfalls, and the legal context requires more and more companies to find a solution to it. In this episode, we talk to John Craft from Privacy Dynamics, who offer data anonymisation as a service. Privacy Dynamics is powering a world where ethics, data insights and&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2022/12/12/minimizing-pii-in-dev-environments/&quot;&gt;Minimizing PII in Dev Environments with John Craft&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<p><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/12/john-craft.png"><img decoding="async" loading="lazy" class="alignright size-full wp-image-14631" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/12/john-craft.png?resize=218%2C258&#038;ssl=1" alt="" width="218" height="258" data-recalc-dims="1" /></a>Data anonymisation is an ever more important problem with many pitfalls, and the legal context requires more and more companies to find a solution to it.<br />
In this episode, we talk to <a href="https://twitter.com/john_craft">John Craft</a> from Privacy Dynamics, who offer data anonymisation as a service.<br />
<a href="https://www.privacydynamics.io/">Privacy Dynamics</a> is powering a world where ethics, data insights and personalized technology can all co-exist to support business growth and customer privacy simultaneously.<br />
John talks about the different use-cases, technologies, requirements, and challenges he and his team faced throughout Privacy Dynamics&#8217; journey so far, and what might be to come.</p>
<p><strong>Show Host</strong> &#8211;<a href="https://www.linkedin.com/in/jeffhemmen/?originalSubdomain=lu"> Jeff Hemmen</a></p>
<p><a href="http://softwareengineeringdaily.com/wp-content/uploads/2022/12/SED1526-John-Craft.pdf">Transcript</a></p>
<p><em>Full disclosure: Privacy Dynamics is a sponsor of Software Engineering Daily.</em></p>
<p style="text-align: center;">Sponsorship inquiries: <a href="mailto:sponsor@softwareengineeringdaily.com" target="_blank" rel="noopener noreferrer">sponsor@softwareengineeringdaily.com</a></p>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2022/12/12/minimizing-pii-in-dev-environments/">Minimizing PII in Dev Environments with John Craft</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED5500921803.mp3" length="82713756" type="audio/mpeg" />
		<itunes:subtitle>Data anonymisation is an ever more important problem with many pitfalls, and the legal context requires more and more companies to find a solution to it. In this episode, we talk to John Craft from Privacy Dynamics,</itunes:subtitle>
		<itunes:summary>Data anonymisation is an ever more important problem with many pitfalls, and the legal context requires more and more companies to find a solution to it. In this episode, we talk to John Craft from Privacy Dynamics, who offer data anonymisation as a service. Privacy Dynamics is powering a world where ethics, data insights and</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>57:23</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">14630</post-id>	</item>
	<item>
		<title>Financial Data Aggregation for SMB  with Jason Dryhurst-Smith</title>
		<link>http://softwareengineeringdaily.com/2022/12/09/financial-data-aggregation-for-smb/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=financial-data-aggregation-for-smb</link>
		<pubDate>Fri, 09 Dec 2022 16:48:56 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=14605</guid>
		<comments>http://softwareengineeringdaily.com/2022/12/09/financial-data-aggregation-for-smb/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2022/12/09/financial-data-aggregation-for-smb/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Jocelyn Byrne Houle]]></category>
		<category><![CDATA[Podcast]]></category>
		<category><![CDATA[Codat]]></category>
		<category><![CDATA[Financial Data Aggregation]]></category>
		<category><![CDATA[Jason Dryhurst-Smith]]></category>
		<category><![CDATA[SMB]]></category>
		<description>&lt;p&gt; Fintechs and traditional finance firms want to help their small business customers replace disorganized competing manual processes and multiple data sources with a single unified set of services and data. They could do that. They could more easily offer quicker decisions, better customer experience, and even get more first time customers founded in 2017. Codat&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2022/12/09/financial-data-aggregation-for-smb/&quot;&gt;Financial Data Aggregation for SMB  with Jason Dryhurst-Smith&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<div><span class=" author-d-1gg9uz65z1iz85zgdz68zmqkz84zo2qowz80zsz78zz76zz71zs896z122zz78zoz79zz71zsfj1arz78zz76zz86zz84zz90zhz90zetbz68z"> <a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/12/jason-dryhurst.png"><img decoding="async" loading="lazy" class="alignright size-full wp-image-14627" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/12/jason-dryhurst.png?resize=218%2C258&#038;ssl=1" alt="" width="218" height="258" data-recalc-dims="1" /></a>Fintechs and traditional finance firms want to help their small business customers replace disorganized competing manual processes and multiple data sources with a single unified set of services and data. They could do that. They could more easily offer quicker decisions, better customer experience, and even get more first time customers founded in 2017.</span></div>
<div></div>
<div><span class=" author-d-1gg9uz65z1iz85zgdz68zmqkz84zo2qowz80zsz78zz76zz71zs896z122zz78zoz79zz71zsfj1arz78zz76zz86zz84zz90zhz90zetbz68z"><a href="https://www.codat.io/">Codat</a> wants to be that universal API that can connect financial firms to the platforms their small business customers use. Codat seeks to create a single flow and view for the bus. Small businesses, many accounting, banking, and commerce systems. That goal requires specialized approaches to authorization, data normalization, and availability.</span></div>
<div></div>
<div><span class=" author-d-1gg9uz65z1iz85zgdz68zmqkz84zo2qowz80zsz78zz76zz71zs896z122zz78zoz79zz71zsfj1arz78zz76zz86zz84zz90zhz90zetbz68z">It also unlocks capabilities that small businesses can&#8217;t usually access, like real time risk scoring and predictive analytics. Today we are interviewing <a href="https://twitter.com/jasond_s">Jason Dryhurst-Smith</a>, head of engineering and employee one at Codat, he&#8217;s an engineer who started in firmware and embedded systems. He has, uh, years of general development experiences, but now focuses primarily on platform engineering and building codat&#8217;s full engineering team.</span></div>
<div></div>
<div><a href="http://softwareengineeringdaily.com/wp-content/uploads/2022/12/SED1524-Financial-Data-Aggregation-for-SMB-with-Jason-Dryhurst-Smith.pdf">Transcript</a></div>
<div></div>
<div style="text-align: center;">Sponsorship inquiries: <a href="mailto:sponsor@softwareengineeringdaily.com" target="_blank" rel="noopener noreferrer">sponsor@softwareengineeringdaily.com</a></div>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2022/12/09/financial-data-aggregation-for-smb/">Financial Data Aggregation for SMB  with Jason Dryhurst-Smith</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED2646502823.mp3" length="87186515" type="audio/mpeg" />
		<itunes:subtitle> Fintechs and traditional finance firms want to help their small business customers replace disorganized competing manual processes and multiple data sources with a single unified set of services and data. They could do that.</itunes:subtitle>
		<itunes:summary> Fintechs and traditional finance firms want to help their small business customers replace disorganized competing manual processes and multiple data sources with a single unified set of services and data. They could do that. They could more easily offer quicker decisions, better customer experience, and even get more first time customers founded in 2017. Codat</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>1:00:29</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">14605</post-id>	</item>
	<item>
		<title>OpenSSL Vulnerability with Ilkka Turunen</title>
		<link>http://softwareengineeringdaily.com/2022/12/07/openssl-vulnerability/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=openssl-vulnerability</link>
		<pubDate>Wed, 07 Dec 2022 18:25:40 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=14601</guid>
		<comments>http://softwareengineeringdaily.com/2022/12/07/openssl-vulnerability/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2022/12/07/openssl-vulnerability/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Jeff Hemmen]]></category>
		<category><![CDATA[Podcast]]></category>
		<category><![CDATA[Uncategorized]]></category>
		<category><![CDATA[Ilkka Turunen]]></category>
		<category><![CDATA[Open Source]]></category>
		<category><![CDATA[OpenSSL]]></category>
		<category><![CDATA[Sonatype]]></category>
		<description>&lt;p&gt;OpenSSL is a free, open-source cryptographic library that provides secure communications over computer networks. It’s widely used to implement the secure socket layer (SSL) and transport layer security (TLS) protocols, which are the basis for secure, encrypted connections on the internet. On Oct 25th, the OpenSSL project informed its users of a critical vulnerability that&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2022/12/07/openssl-vulnerability/&quot;&gt;OpenSSL Vulnerability with Ilkka Turunen&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<p><span style="font-weight: 400;"><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/12/ilkaa.png"><img decoding="async" loading="lazy" class="alignright size-full wp-image-14620" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/12/ilkaa.png?resize=200%2C240" alt="" width="200" height="240" data-recalc-dims="1" /></a>OpenSSL is a free, open-source cryptographic library that provides secure communications over computer networks. It&#8217;s widely used to implement the secure socket layer (SSL) and transport layer security (TLS) protocols, which are the basis for secure, encrypted connections on the internet.<br />
On Oct 25th, the OpenSSL project informed its users of a critical vulnerability that affects the 3.0 and later versions of the OpenSSL component. In a twist to the usual formula, the project gave the world a week&#8217;s advance notice of the upcoming update, and various stakeholders prepared for this accordingly. In this episode, we sat down with <a href="https://twitter.com/llkkat">Ilkka Turunen</a>, <a href="https://www.sonatype.com/">Sonatype&#8217;s</a> Field CTO; we discussed a wide range of topics, including the OpenSSL vulnerability, Shodan, SBOMs, Software Supply Chain and others.<br />
</span></p>
<p><strong>Show Host</strong> &#8211;<a href="https://www.linkedin.com/in/jeffhemmen/?originalSubdomain=lu"> Jeff Hemmen</a></p>
<p style="text-align: center;">Sponsorship inquiries: <a href="mailto:sponsor@softwareengineeringdaily.com" target="_blank" rel="noopener noreferrer">sponsor@softwareengineeringdaily.com</a></p>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2022/12/07/openssl-vulnerability/">OpenSSL Vulnerability with Ilkka Turunen</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED2075102382.mp3" length="72907028" type="audio/mpeg" />
		<itunes:subtitle>OpenSSL is a free, open-source cryptographic library that provides secure communications over computer networks. It’s widely used to implement the secure socket layer (SSL) and transport layer security (TLS) protocols, which are the basis for secure,</itunes:subtitle>
		<itunes:summary>OpenSSL is a free, open-source cryptographic library that provides secure communications over computer networks. It’s widely used to implement the secure socket layer (SSL) and transport layer security (TLS) protocols, which are the basis for secure, encrypted connections on the internet. On Oct 25th, the OpenSSL project informed its users of a critical vulnerability that</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>50:34</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">14601</post-id>	</item>
	<item>
		<title>Special Episode with George Hotz</title>
		<link>http://softwareengineeringdaily.com/2022/12/05/george-hotz/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=george-hotz</link>
		<pubDate>Mon, 05 Dec 2022 17:54:50 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=14611</guid>
		<comments>http://softwareengineeringdaily.com/2022/12/05/george-hotz/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2022/12/05/george-hotz/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[Alex DeBrie]]></category>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Greatest Hits]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Podcast]]></category>
		<category><![CDATA[Uncategorized]]></category>
		<category><![CDATA[Comma.ai]]></category>
		<category><![CDATA[George Hotz]]></category>
		<category><![CDATA[Openpilot]]></category>
		<category><![CDATA[self driving]]></category>
		<description>&lt;p&gt;Comma is a startup aimed at solving self-driving cars. A lot of the new cars in the market have built-in stock Advanced driver assistance systems. Comma takes this system to the next level with Openpilot. Openpilot is an open-source driver assistance system. Currently, with features like Adaptive Cruise Control (ACC), Automated Lane Centering (ALC), Forward&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2022/12/05/george-hotz/&quot;&gt;Special Episode with George Hotz&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<p><span style="font-weight: 400;"><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/12/george_hotz.png"><img decoding="async" loading="lazy" class="alignright size-full wp-image-14612" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/12/george_hotz.png?resize=218%2C258&#038;ssl=1" alt="" width="218" height="258" data-recalc-dims="1" /></a><a href="https://comma.ai/">Comma</a> is a startup aimed at solving self-driving cars. A lot of the new cars in the market have built-in stock Advanced driver assistance systems. Comma takes this system to the next level with Openpilot. Openpilot is an open-source driver assistance system. Currently, with features like Adaptive Cruise Control (ACC), Automated Lane Centering (ALC), Forward Collision Warning (FCW), and Lane Departure Warning (LDW), openpilot is one of the most state-of-the-art solutions in the self-driving space. The Comma Three device is designed to live in your car, and purpose built to run openpilot.<br />
In this episode we speak to <a href="https://twitter.com/realGeorgeHotz?ref_src=twsrc%5Egoogle%7Ctwcamp%5Eserp%7Ctwgr%5Eauthor">George Hotz</a>, President of Comma and now an intern at Twitter.</span></p>
<p>Watch the video on Youtube: <a href="https://www.youtube.com/watch?v=Yi6kwUZDtkw">https://www.youtube.com/watch?v=Yi6kwUZDtkw</a></p>
<p style="text-align: center;">Sponsorship inquiries: <a href="mailto:sponsor@softwareengineeringdaily.com" target="_blank" rel="noopener noreferrer">sponsor@softwareengineeringdaily.com</a></p>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2022/12/05/george-hotz/">Special Episode with George Hotz</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED8032594293.mp3" length="81497826" type="audio/mpeg" />
		<itunes:subtitle>Comma is a startup aimed at solving self-driving cars. A lot of the new cars in the market have built-in stock Advanced driver assistance systems. Comma takes this system to the next level with Openpilot. Openpilot is an open-source driver assistance s...</itunes:subtitle>
		<itunes:summary>Comma is a startup aimed at solving self-driving cars. A lot of the new cars in the market have built-in stock Advanced driver assistance systems. Comma takes this system to the next level with Openpilot. Openpilot is an open-source driver assistance system. Currently, with features like Adaptive Cruise Control (ACC), Automated Lane Centering (ALC), Forward</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>56:32</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">14611</post-id>	</item>
	<item>
		<title>Twisp: Reinventing Accounting Systems with Michael Parsons</title>
		<link>http://softwareengineeringdaily.com/2022/12/02/reinventing-accounting-systems/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=reinventing-accounting-systems</link>
		<pubDate>Fri, 02 Dec 2022 17:46:01 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=14602</guid>
		<comments>http://softwareengineeringdaily.com/2022/12/02/reinventing-accounting-systems/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2022/12/02/reinventing-accounting-systems/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[Alex DeBrie]]></category>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Podcast]]></category>
		<category><![CDATA[Michael Parsons]]></category>
		<category><![CDATA[Monolithic]]></category>
		<category><![CDATA[Relational Databases]]></category>
		<category><![CDATA[Twisp]]></category>
		<description>&lt;p&gt;Monolithic relational databases are the traditional foundation of financial core ledger systems. Nevertheless, the process of building and operating mission critical financial ledgers on these databases, and implementing homegrown accounting models, is a journey fraught with engineering challenges. Twisp has set out to rethink the underlying technology for financial ledger systems by combining the operational&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2022/12/02/reinventing-accounting-systems/&quot;&gt;Twisp: Reinventing Accounting Systems with Michael Parsons&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<p><span style="font-weight: 400;"><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/12/mikeparson.png"><img decoding="async" loading="lazy" class="alignright size-full wp-image-14604" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/12/mikeparson.png?resize=218%2C258" alt="" width="218" height="258" data-recalc-dims="1" /></a>Monolithic relational databases are the traditional foundation of financial core ledger systems. Nevertheless, the process of building and operating mission critical financial ledgers on these databases, and implementing homegrown accounting models, is a journey fraught with engineering challenges.</span></p>
<p><span style="font-weight: 400;"><a href="https://www.twisp.com/">Twisp</a> has set out to rethink the underlying technology for financial ledger systems by combining the operational and scaling characteristics of a distributed database, the correctness guarantees offered by relational databases, with pre-built accounting primitives, while fully leveraging the modern cloud. </span></p>
<p><span style="font-weight: 400;">In this episode, we speak to <a href="https://www.linkedin.com/in/parsnips">Michael Parsons</a>, co-founder &amp; CTO of Twisp.</span></p>
<p><span style="font-weight: 400;">To learn more about Twisp and get access to a sandbox ledger, go to: </span><a href="https://www.twisp.com/"><span style="font-weight: 400;">www.twisp.com/</span></a></p>
<p style="text-align: center;">Sponsorship inquiries: <a href="mailto:sponsor@softwareengineeringdaily.com" target="_blank" rel="noopener noreferrer">sponsor@softwareengineeringdaily.com</a></p>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2022/12/02/reinventing-accounting-systems/">Twisp: Reinventing Accounting Systems with Michael Parsons</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED5224519152.mp3" length="68931903" type="audio/mpeg" />
		<itunes:subtitle>Monolithic relational databases are the traditional foundation of financial core ledger systems. Nevertheless, the process of building and operating mission critical financial ledgers on these databases, and implementing homegrown accounting models,</itunes:subtitle>
		<itunes:summary>Monolithic relational databases are the traditional foundation of financial core ledger systems. Nevertheless, the process of building and operating mission critical financial ledgers on these databases, and implementing homegrown accounting models, is a journey fraught with engineering challenges. Twisp has set out to rethink the underlying technology for financial ledger systems by combining the operational</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>47:48</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">14602</post-id>	</item>
	<item>
		<title>Modernizing the Monolith with Moti Rafalin and Amir Rapson</title>
		<link>http://softwareengineeringdaily.com/2022/11/29/modernizing-the-monolith/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=modernizing-the-monolith</link>
		<pubDate>Wed, 30 Nov 2022 03:16:44 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=14592</guid>
		<comments>http://softwareengineeringdaily.com/2022/11/29/modernizing-the-monolith/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2022/11/29/modernizing-the-monolith/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Podcast]]></category>
		<category><![CDATA[Sean Falconer]]></category>
		<category><![CDATA[Uncategorized]]></category>
		<category><![CDATA[Amir Rapson]]></category>
		<category><![CDATA[Monolith]]></category>
		<category><![CDATA[Moti Rafalin]]></category>
		<category><![CDATA[vFunction]]></category>
		<description>&lt;p&gt;Java Applications became the go-to preference of most developers because of the write-once-run-anywhere advantage it gave over other languages. And it didn’t take much time for Java to become the language for the enterprise. Consequently, most enterprises are still running legacy Java Monoliths on their infrastructure. Breaking up a monolith is not an easy process–nor&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2022/11/29/modernizing-the-monolith/&quot;&gt;Modernizing the Monolith with Moti Rafalin and Amir Rapson&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<p><span style="font-weight: 400;">Java Applications became the go-to preference of most developers because of the write-once-run-anywhere advantage it gave over other languages. And it didn&#8217;t take much time for Java to become the language for the enterprise. Consequently, most enterprises are still running legacy Java Monoliths on their infrastructure.</span></p>
<p><span style="font-weight: 400;">Breaking up a monolith is not an easy process–nor is it something that every company should do just because they have a monolith. In some cases, a monolith is just fine. But sometimes, you do need to decompose a monolith as the complexity of the monolith grows and leads to longer release cycles or scalability issues. Breaking down into microservices is a natural way to shift legacy applications to the cloud.</span></p>
<p><span style="font-weight: 400;"><a href="https://vfunction.com/">vFunction</a> is an artificial intelligence platform that assesses, analyzes, helps you design microservices and then automatically creates those microservices for you. So it&#8217;s an end-to-end platform from analysis to the actual creation of the code of those microservices with their respective APIs. While vFunction started with Java, they are expanding these capabilities to other platforms as well. <a href="https://mobile.twitter.com/motir">Moti Rafalin</a> who is the CEO of vFunction and <a href="https://il.linkedin.com/in/amirrapson">Amir Rapson</a> who is the CTO of vFunction join us today.</span></p>
<p style="text-align: center;">Sponsorship inquiries: <a href="mailto:sponsor@softwareengineeringdaily.com" target="_blank" rel="noopener noreferrer">sponsor@softwareengineeringdaily.com</a></p>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2022/11/29/modernizing-the-monolith/">Modernizing the Monolith with Moti Rafalin and Amir Rapson</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED7167166683.mp3" length="73802515" type="audio/mpeg" />
		<itunes:subtitle>Java Applications became the go-to preference of most developers because of the write-once-run-anywhere advantage it gave over other languages. And it didn’t take much time for Java to become the language for the enterprise. Consequently,</itunes:subtitle>
		<itunes:summary>Java Applications became the go-to preference of most developers because of the write-once-run-anywhere advantage it gave over other languages. And it didn’t take much time for Java to become the language for the enterprise. Consequently, most enterprises are still running legacy Java Monoliths on their infrastructure. Breaking up a monolith is not an easy process–nor</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>51:11</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">14592</post-id>	</item>
	<item>
		<title>Cloud-native WebAssembly with Matt Butcher</title>
		<link>http://softwareengineeringdaily.com/2022/11/25/cloud-native-webassembly/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=cloud-native-webassembly</link>
		<pubDate>Sat, 26 Nov 2022 05:59:03 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=14585</guid>
		<comments>http://softwareengineeringdaily.com/2022/11/25/cloud-native-webassembly/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2022/11/25/cloud-native-webassembly/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Mike Bifulco]]></category>
		<category><![CDATA[Podcast]]></category>
		<category><![CDATA[Fermyon]]></category>
		<category><![CDATA[Fermyon Cloud]]></category>
		<category><![CDATA[Matt Butcher]]></category>
		<category><![CDATA[WebAssembly]]></category>
		<description>&lt;p&gt;When Web Assembly was created it was supposed to be a compile target, where you could compile your favorite programming language and then execute it inside of a web browser. This made it possible for developers to choose a programming language like C++ for compute intensive applications. Fermyon is taking Web Assembly to the cloud.&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2022/11/25/cloud-native-webassembly/&quot;&gt;Cloud-native WebAssembly with Matt Butcher&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<p><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/11/matt_butcher.png"><img decoding="async" loading="lazy" class="alignright size-full wp-image-14587" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/11/matt_butcher.png?resize=218%2C258&#038;ssl=1" alt="" width="218" height="258" data-recalc-dims="1" /></a>When Web Assembly was created it was supposed to be a compile target, where you could compile your favorite programming language and then execute it inside of a web browser. This made it possible for developers to choose a programming language like C++ for compute intensive applications. Fermyon is taking Web Assembly to the cloud. With Fermyon Cloud deploying and managing cloud-native WebAssembly applications becomes a breeze. <a href="https://twitter.com/technosophos">Matt Butcher</a> is the CEO at <a href="https://www.fermyon.com/">Fermyon Technologies</a> and he joins us today.</p>
<p style="text-align: center;">Sponsorship inquiries: <a href="mailto:sponsor@softwareengineeringdaily.com" target="_blank" rel="noopener noreferrer">sponsor@softwareengineeringdaily.com</a></p>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2022/11/25/cloud-native-webassembly/">Cloud-native WebAssembly with Matt Butcher</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED8910530904.mp3" length="86236004" type="audio/mpeg" />
		<itunes:subtitle>When Web Assembly was created it was supposed to be a compile target, where you could compile your favorite programming language and then execute it inside of a web browser. This made it possible for developers to choose a programming language like C++...</itunes:subtitle>
		<itunes:summary>When Web Assembly was created it was supposed to be a compile target, where you could compile your favorite programming language and then execute it inside of a web browser. This made it possible for developers to choose a programming language like C++ for compute intensive applications. Fermyon is taking Web Assembly to the cloud.</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>59:49</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">14585</post-id>	</item>
	<item>
		<title>VMware Tanzu with Betty Junod</title>
		<link>http://softwareengineeringdaily.com/2022/11/18/vmware-tanzu-with-betty-junod/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=vmware-tanzu-with-betty-junod</link>
		<pubDate>Fri, 18 Nov 2022 15:23:28 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=14570</guid>
		<comments>http://softwareengineeringdaily.com/2022/11/18/vmware-tanzu-with-betty-junod/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2022/11/18/vmware-tanzu-with-betty-junod/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Jordi Mon Companys]]></category>
		<category><![CDATA[Podcast]]></category>
		<category><![CDATA[Uncategorized]]></category>
		<category><![CDATA[Betty Junod]]></category>
		<category><![CDATA[Heptio]]></category>
		<category><![CDATA[VMWare]]></category>
		<category><![CDATA[VMware Tanzu]]></category>
		<description>&lt;p&gt;If you are a company with a large pool of physical servers, and compute resources sitting in the data center, and you want to use them efficiently, one way to do that would be to virtualize them. Then you can use those smaller virtual compute resources to run whatever workloads you need. VMware is a&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2022/11/18/vmware-tanzu-with-betty-junod/&quot;&gt;VMware Tanzu with Betty Junod&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<p><span style="font-weight: 400;"><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/11/betty.png"><img decoding="async" loading="lazy" class="alignright size-full wp-image-14571" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/11/betty.png?resize=218%2C258&#038;ssl=1" alt="" width="218" height="258" data-recalc-dims="1" /></a>If you are a company with a large pool of physical servers, and compute resources sitting in the data center, and you want to use them efficiently, one way to do that would be to virtualize them. Then you can use those smaller virtual compute resources to run whatever workloads you need. <a href="https://www.vmware.com/in.html">VMware</a> is a company that&#8217;s known for virtualization. It&#8217;s also the creator of Software Defined Data Center. In 2019, VMware acquired Heptio, this acquisition gave VMware the know-how to go full-scale on Kubernetes. Joe Beda and Craig McLuckie, one of the original creators of Kubernetes working at Heptio, also joined VMware as part of this acquisition. What followed this was <a href="https://tanzu.vmware.com/tanzu">VMware Tanzu</a>, a division within VMware tasked to work on modern applications. VMware Tanzu is a modular, cloud-native application platform. It allows you to build, deliver, and operate cloud-native apps in a multi-cloud world, it also protects you from Vendor lock-in. <a href="https://twitter.com/BettyJunod?ref_src=twsrc%5Egoogle%7Ctwcamp%5Eserp%7Ctwgr%5Eauthor">Betty Junod</a> is VP of Product Marketing at VMware and joins us today.</span></p>
<p>Get 25% OFF on all Linux Foundation Trainings and Certifications<br />
<a href="https://training.linuxfoundation.org/">https://training.linuxfoundation.org/</a><br />
use code &#8220;SDT2022NovThx&#8221;<br />
valid only till November</p>
<p>Follow <strong><a href="https://twitter.com/JordiMonPMM">Jordi!</a></strong></p>
<p style="text-align: center;">Sponsorship inquiries: <a href="mailto:sponsor@softwareengineeringdaily.com" target="_blank" rel="noopener noreferrer">sponsor@softwareengineeringdaily.com</a></p>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2022/11/18/vmware-tanzu-with-betty-junod/">VMware Tanzu with Betty Junod</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED5795989884.mp3" length="50183319" type="audio/mpeg" />
		<itunes:subtitle>If you are a company with a large pool of physical servers, and compute resources sitting in the data center, and you want to use them efficiently, one way to do that would be to virtualize them. Then you can use those smaller virtual compute resources...</itunes:subtitle>
		<itunes:summary>If you are a company with a large pool of physical servers, and compute resources sitting in the data center, and you want to use them efficiently, one way to do that would be to virtualize them. Then you can use those smaller virtual compute resources to run whatever workloads you need. VMware is a</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>34:47</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">14570</post-id>	</item>
	<item>
		<title>Secure Workflows on Sensitive Data with Amruta Moktali</title>
		<link>http://softwareengineeringdaily.com/2022/11/16/secure-workflows-on-sensitive-data/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=secure-workflows-on-sensitive-data</link>
		<pubDate>Wed, 16 Nov 2022 10:00:34 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=14539</guid>
		<comments>http://softwareengineeringdaily.com/2022/11/16/secure-workflows-on-sensitive-data/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2022/11/16/secure-workflows-on-sensitive-data/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Podcast]]></category>
		<category><![CDATA[Sean Falconer]]></category>
		<category><![CDATA[Uncategorized]]></category>
		<category><![CDATA[Amruta Moktali]]></category>
		<category><![CDATA[APIs]]></category>
		<category><![CDATA[data privacy]]></category>
		<category><![CDATA[Skyflow]]></category>
		<description>&lt;p&gt;With an increasing number of data breaches impacting customer trust, prioritizing data privacy and security is more important than ever. However, as you layer on security and privacy, the overall complexity of a system grows and the data gets harder to use. There’s a constant push and pull between securing and locking down the data&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2022/11/16/secure-workflows-on-sensitive-data/&quot;&gt;Secure Workflows on Sensitive Data with Amruta Moktali&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<p><span style="font-weight: 400;"><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/11/amruta.png"><img decoding="async" loading="lazy" class="alignright size-full wp-image-14564" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/11/amruta.png?resize=218%2C268&#038;ssl=1" alt="" width="218" height="268" data-recalc-dims="1" /></a>With an increasing number of data breaches impacting customer trust, prioritizing data privacy and security is more important than ever. However, as you layer on security and privacy, the overall complexity of a system grows and the data gets harder to use. There’s a constant push and pull between securing and locking down the data but still being able to use it.</span></p>
<p><span style="font-weight: 400;"><a href="https://www.skyflow.com/">Skyflow</a> Data Privacy Vault isolates, secures, stores, and tightly controls access to manage and use sensitive data. With secure workflow support, developers are able to securely execute custom code, de-identity and transform data, and securely share data all within the secure compliant environment of the vault balancing data security and usability.</span></p>
<p><span style="font-weight: 400;"><a href="https://twitter.com/amrutam?lang=en">Amruta Moktali</a>, the Chief Product Officer of Skyflow, joins the show to discuss  Skyflow’s Data Privacy Vault APIs, running secure workflows, and the engineering behind the technology.</span></p>
<p style="text-align: center;">Sponsorship inquiries: <a href="mailto:sponsor@softwareengineeringdaily.com" target="_blank" rel="noopener noreferrer">sponsor@softwareengineeringdaily.com</a></p>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2022/11/16/secure-workflows-on-sensitive-data/">Secure Workflows on Sensitive Data with Amruta Moktali</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED4701465214.mp3" length="74788778" type="audio/mpeg" />
		<itunes:subtitle>With an increasing number of data breaches impacting customer trust, prioritizing data privacy and security is more important than ever. However, as you layer on security and privacy, the overall complexity of a system grows and the data gets harder to...</itunes:subtitle>
		<itunes:summary>With an increasing number of data breaches impacting customer trust, prioritizing data privacy and security is more important than ever. However, as you layer on security and privacy, the overall complexity of a system grows and the data gets harder to use. There’s a constant push and pull between securing and locking down the data</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>51:52</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">14539</post-id>	</item>
	<item>
		<title>Collaborative Notebooks for DevOps and SRE with Micha Hernandez</title>
		<link>http://softwareengineeringdaily.com/2022/11/15/collaborative-notebooks/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=collaborative-notebooks</link>
		<pubDate>Tue, 15 Nov 2022 19:12:46 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=14554</guid>
		<comments>http://softwareengineeringdaily.com/2022/11/15/collaborative-notebooks/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2022/11/15/collaborative-notebooks/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Podcast]]></category>
		<category><![CDATA[Sean Falconer]]></category>
		<category><![CDATA[Uncategorized]]></category>
		<category><![CDATA[Collaborative Notebooks]]></category>
		<category><![CDATA[DevOps]]></category>
		<category><![CDATA[Micha Hernandez]]></category>
		<category><![CDATA[SRE]]></category>
		<description>&lt;p&gt;The complexity of the software infrastructure has been increasing as companies have migrated towards kubernetes, containers, microservices and other distributed systems. However the tools around observability and monitoring have not seen much improvement. These tools are usually managed by teams distributed across different locations and time zones, which results in siloing of knowledge of your&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2022/11/15/collaborative-notebooks/&quot;&gt;Collaborative Notebooks for DevOps and SRE with Micha Hernandez&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<p><span style="font-weight: 400;"><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/11/Micha-Hernandez.png"><img decoding="async" loading="lazy" class="alignright size-full wp-image-14555" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/11/Micha-Hernandez.png?resize=218%2C258&#038;ssl=1" alt="" width="218" height="258" data-recalc-dims="1" /></a>The complexity of the software infrastructure has been increasing as companies have migrated towards kubernetes, containers, microservices and other distributed systems. However the tools around observability and monitoring have not seen much improvement. These tools are usually managed by teams distributed across different locations and time zones, which results in siloing of knowledge of your infrastructure across individuals.</span><span style="font-weight: 400;"><br />
</span><span style="font-weight: 400;">Reasoning about downtime involves bringing together all the pieces. While the teams can communicate through slack, screenshots and google docs, this has been still far from the kind of collaboration tools that other teams have enjoyed for example Figma is used by Design teams and Notion is used by product teams.</span><b><br />
</b><span style="font-weight: 400;"><a href="https://fiberplane.com/">Fiberplane</a> is a collaborative notebook platform for DevOps and SRE. It puts a programmable SRE environment at the fingertips of engineers, redefining collaboration for infrastructure teams. Fiberplane offers collaborative investigation and documentation tools with real data, all hosted within a technical open-source notebook format. <a href="https://twitter.com/mies?ref_src=twsrc%5Egoogle%7Ctwcamp%5Eserp%7Ctwgr%5Eauthor">Micha Hernandez van Leuffen</a> is the founder and CEO of Fiberplane and he joins us today.</span></p>
<p style="text-align: center;">Sponsorship inquiries: <a href="mailto:sponsor@softwareengineeringdaily.com" target="_blank" rel="noopener noreferrer">sponsor@softwareengineeringdaily.com</a></p>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2022/11/15/collaborative-notebooks/">Collaborative Notebooks for DevOps and SRE with Micha Hernandez</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED3851881478.mp3" length="56139569" type="audio/mpeg" />
		<itunes:subtitle>The complexity of the software infrastructure has been increasing as companies have migrated towards kubernetes, containers, microservices and other distributed systems. However the tools around observability and monitoring have not seen much improveme...</itunes:subtitle>
		<itunes:summary>The complexity of the software infrastructure has been increasing as companies have migrated towards kubernetes, containers, microservices and other distributed systems. However the tools around observability and monitoring have not seen much improvement. These tools are usually managed by teams distributed across different locations and time zones, which results in siloing of knowledge of your</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>38:55</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">14554</post-id>	</item>
	<item>
		<title>Accessing Data at Scale with Justin Borgman</title>
		<link>http://softwareengineeringdaily.com/2022/11/11/accessing-data-at-scale/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=accessing-data-at-scale</link>
		<pubDate>Fri, 11 Nov 2022 11:09:09 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=14540</guid>
		<comments>http://softwareengineeringdaily.com/2022/11/11/accessing-data-at-scale/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2022/11/11/accessing-data-at-scale/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Data]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Podcast]]></category>
		<category><![CDATA[Sean Falconer]]></category>
		<category><![CDATA[Uncategorized]]></category>
		<category><![CDATA[Justin Borgman]]></category>
		<category><![CDATA[Presto/Trino]]></category>
		<category><![CDATA[SQL]]></category>
		<category><![CDATA[Starburst]]></category>
		<description>&lt;p&gt;The Presto/Trino project makes distributed querying easier across a variety of data sources. As the need for machine learning and other high volume data applications has increased, the need for support, tooling, and cloud infrastructure for Presto/Trino has increased with it. Starburst helps your teams run fast queries on any data source. With Starburst you&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2022/11/11/accessing-data-at-scale/&quot;&gt;Accessing Data at Scale with Justin Borgman&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<div dir="ltr"><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/11/Justin-Borgman.png"><img decoding="async" loading="lazy" class="alignright size-full wp-image-14541" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/11/Justin-Borgman.png?resize=218%2C258&#038;ssl=1" alt="" width="218" height="258" data-recalc-dims="1" /></a>The Presto/Trino project makes distributed querying easier across a variety of data sources. As the need for machine learning and other high volume data applications has increased, the need for support, tooling, and cloud infrastructure for Presto/Trino has increased with it.<br />
<a href="https://www.starburst.io/">Starburst</a> helps your teams run fast queries on any data source. With Starburst you get a single point of access to your data, no matter where it&#8217;s stored and it supports high concurrency. Whether it&#8217;s fast SQL queries on your data lake or faster queries across multiple datasets, Starburst helps your teams run analytics anywhere. <a href="https://twitter.com/justinborgman">Justin Borgman</a> is the CEO of Starburst, and he joins us today.</div>
<div dir="ltr"></div>
<div dir="ltr"></div>
<div dir="ltr"></div>
<div dir="ltr"></div>
<div dir="ltr"></div>
<div dir="ltr"></div>
<div dir="ltr"></div>
<div dir="ltr" style="text-align: center;">Sponsorship inquiries: <a href="mailto:sponsor@softwareengineeringdaily.com" target="_blank" rel="noopener noreferrer">sponsor@softwareengineeringdaily.com</a></div>
<div><img decoding="async" class="CToWUd" src="https://ci5.googleusercontent.com/proxy/usFvCA8YnlnjzQ4v-TP9eItm-UcELxdCRARgh_dShPiduAdY1dB_G0UcBJDdevvPaGXO_UmfFvV8eHB0s33KzqDkzfTEhs2orwn3qQKp8ojQotEvYcqTCywGpDyDdZVbzmCoB7FU4pH5CLOS-x-HznwSktdXSmmr5gLy-ASxyDYKznoiL1NPUIpjc5ur2JoS5BQrQ7HE1EzDlncrmMeblfb4rwpL47UhLql8ng=s0-d-e1-ft#https://mailfoogae.appspot.com/t?sender=aYW5rdXJAc29mdHdhcmVlbmdpbmVlcmluZ2RhaWx5LmNvbQ%3D%3D&amp;type=zerocontent&amp;guid=7d509b08-ca30-4712-87ca-4d330382318e" alt="" data-bit="iit" /><span style="color: #ffffff; font-size: xx-small;">ᐧ</span></div>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2022/11/11/accessing-data-at-scale/">Accessing Data at Scale with Justin Borgman</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED1345904672.mp3" length="66757502" type="audio/mpeg" />
		<itunes:subtitle>The Presto/Trino project makes distributed querying easier across a variety of data sources. As the need for machine learning and other high volume data applications has increased, the need for support, tooling,</itunes:subtitle>
		<itunes:summary>The Presto/Trino project makes distributed querying easier across a variety of data sources. As the need for machine learning and other high volume data applications has increased, the need for support, tooling, and cloud infrastructure for Presto/Trino has increased with it. Starburst helps your teams run fast queries on any data source. With Starburst you</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>46:18</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">14540</post-id>	</item>
	<item>
		<title>Building on the Data Cloud with Torsten Grabs</title>
		<link>http://softwareengineeringdaily.com/2022/11/07/building-on-the-data-cloud-with-torsten-grabs/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=building-on-the-data-cloud-with-torsten-grabs</link>
		<pubDate>Mon, 07 Nov 2022 08:00:24 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=14525</guid>
		<comments>http://softwareengineeringdaily.com/2022/11/07/building-on-the-data-cloud-with-torsten-grabs/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2022/11/07/building-on-the-data-cloud-with-torsten-grabs/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Data]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Podcast]]></category>
		<category><![CDATA[Sean Falconer]]></category>
		<category><![CDATA[data lake]]></category>
		<category><![CDATA[data pipelines]]></category>
		<category><![CDATA[Snowflake]]></category>
		<category><![CDATA[Torsten Grabs]]></category>
		<description>&lt;p&gt;Building and managing data-intensive applications has traditionally been costly and complex, and has placed an operational burden on developers to maintain as their organization scales. Todays’ developers, data scientists, and data engineers need a streamlined, single cloud data platform for building applications, pipelines, and machine learning models — without having to move or copy their&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2022/11/07/building-on-the-data-cloud-with-torsten-grabs/&quot;&gt;Building on the Data Cloud with Torsten Grabs&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<p>Building and managing data-intensive applications has traditionally been costly and complex, and has placed an operational burden on developers to maintain as their organization scales. Todays’ developers, data scientists, and data engineers need a streamlined, single cloud data platform for building applications, pipelines, and machine learning models — without having to move or copy their data. Platforms like the<a href="https://www.snowflake.com/en/"> Snowflake Data Cloud</a> provides a unified tool for developers to easily build data applications with Python using Streamlit’s open source framework and Snowflake’s Native Application Framework, gain a streamlined architecture that natively supports users’ programming languages of choice including Java, Scala, SQL, and now Python with Snowpark, store and use transactional and analytical data together with Unistore, and more.</p>
<p><a href="https://www.linkedin.com/in/torstengrabs/">Torsten Grabs</a> is the Director of Product Management at Snowflake focused on Data Lake, Data Pipelines, and Data Science. He joins the show to dive into how Snowflake is disrupting application development, and how developers today can eliminate complexity with the Data Cloud.</p>
<p style="text-align: center;">Sponsorship inquiries: <a href="mailto:sponsor@softwareengineeringdaily.com" target="_blank" rel="noopener noreferrer">sponsor@softwareengineeringdaily.com</a></p>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2022/11/07/building-on-the-data-cloud-with-torsten-grabs/">Building on the Data Cloud with Torsten Grabs</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED7119340399.mp3" length="57763199" type="audio/mpeg" />
		<itunes:subtitle>Building and managing data-intensive applications has traditionally been costly and complex, and has placed an operational burden on developers to maintain as their organization scales. Todays’ developers, data scientists,</itunes:subtitle>
		<itunes:summary>Building and managing data-intensive applications has traditionally been costly and complex, and has placed an operational burden on developers to maintain as their organization scales. Todays’ developers, data scientists, and data engineers need a streamlined, single cloud data platform for building applications, pipelines, and machine learning models — without having to move or copy their</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>40:03</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">14525</post-id>	</item>
	<item>
		<title>Cloud Asset Management with Serhat Can</title>
		<link>http://softwareengineeringdaily.com/2022/11/02/cloud-asset-management/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=cloud-asset-management</link>
		<pubDate>Thu, 03 Nov 2022 06:18:16 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=14517</guid>
		<comments>http://softwareengineeringdaily.com/2022/11/02/cloud-asset-management/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2022/11/02/cloud-asset-management/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[Alex DeBrie]]></category>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Podcast]]></category>
		<category><![CDATA[DevOps]]></category>
		<category><![CDATA[DevSecOps]]></category>
		<category><![CDATA[Resmo]]></category>
		<category><![CDATA[Serhat Can]]></category>
		<description>&lt;p&gt;Companies are rapidly moving to the cloud, and modern businesses are operating faster with a myriad of SaaS tools in their day-to-day operations. Provisioning resources has been easier than ever. With a few clicks you can spin up resources in any part of the world. While we all love the cloud because of the scalability&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2022/11/02/cloud-asset-management/&quot;&gt;Cloud Asset Management with Serhat Can&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<p><span style="font-weight: 400;"><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/11/Serhat-Can.png"><img decoding="async" loading="lazy" class="alignright size-full wp-image-14518" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/11/Serhat-Can.png?resize=218%2C258" alt="" width="218" height="258" data-recalc-dims="1" /></a>Companies are rapidly moving to the cloud, and modern businesses are operating faster with a myriad of SaaS tools in their day-to-day operations. Provisioning resources has been easier than ever. With a few clicks you can spin up resources in any part of the world. While we all love the cloud because of the scalability it offers, assets can quickly pile up with every user, bucket, repository, and resource. Keeping resources secure and compliant grows in complexity with every cloud service and SaaS application utilized.</span><span style="font-weight: 400;"><br />
</span><span style="font-weight: 400;"><a href="https://www.resmo.com/">Resmo</a> is a continuous cloud and SaaS asset visibility, security, and compliance solution. DevOps, DevSecOps, and security teams can leverage Resmo to automatically audit resources, mitigate risks, and answer security and compliance questions in minutes. <a href="https://twitter.com/srhtcn?ref_src=twsrc%5Egoogle%7Ctwcamp%5Eserp%7Ctwgr%5Eauthor">Serhat Can</a> is the co-founder at Resmo and he joins us today.</span></p>
<p style="text-align: center;">Sponsorship inquiries: <a href="mailto:sponsor@softwareengineeringdaily.com" target="_blank" rel="noopener noreferrer">sponsor@softwareengineeringdaily.com</a></p>
<p>&nbsp;</p>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2022/11/02/cloud-asset-management/">Cloud Asset Management with Serhat Can</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED5873388199.mp3" length="57634467" type="audio/mpeg" />
		<itunes:subtitle>Companies are rapidly moving to the cloud, and modern businesses are operating faster with a myriad of SaaS tools in their day-to-day operations. Provisioning resources has been easier than ever. With a few clicks you can spin up resources in any part ...</itunes:subtitle>
		<itunes:summary>Companies are rapidly moving to the cloud, and modern businesses are operating faster with a myriad of SaaS tools in their day-to-day operations. Provisioning resources has been easier than ever. With a few clicks you can spin up resources in any part of the world. While we all love the cloud because of the scalability</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>39:58</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">14517</post-id>	</item>
	<item>
		<title>The Cyber Frontier with Mikko Hypponen</title>
		<link>http://softwareengineeringdaily.com/2022/11/01/the-internet-with-mikko-hypponen/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=the-internet-with-mikko-hypponen</link>
		<pubDate>Tue, 01 Nov 2022 10:14:56 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=14511</guid>
		<comments>http://softwareengineeringdaily.com/2022/11/01/the-internet-with-mikko-hypponen/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2022/11/01/the-internet-with-mikko-hypponen/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Jordi Mon Companys]]></category>
		<category><![CDATA[Podcast]]></category>
		<category><![CDATA[cyber security]]></category>
		<category><![CDATA[F-Secure]]></category>
		<category><![CDATA[Mikko Hypponen]]></category>
		<category><![CDATA[WithSecure]]></category>
		<description>&lt;p&gt;Mikko Hypponen is the CRO of WithSecure and a principal research Officer at F-Secure. In this interview with our host, Jordi Mon, he discusses the eventful and rocky early start of his software engineering career, hybrid warfare, reverse engineering, recent exploits like Log for Shell and heart bleed, and more. This episode is packed with&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2022/11/01/the-internet-with-mikko-hypponen/&quot;&gt;The Cyber Frontier with Mikko Hypponen&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<p><span style="font-weight: 400;"><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/11/Mikko-Hypponen.png"><img decoding="async" loading="lazy" class="alignright size-full wp-image-14512" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/11/Mikko-Hypponen.png?resize=218%2C258&#038;ssl=1" alt="" width="218" height="258" data-recalc-dims="1" /></a><a href="https://twitter.com/mikko?ref_src=twsrc%5Egoogle%7Ctwcamp%5Eserp%7Ctwgr%5Eauthor">Mikko Hypponen</a> is the CRO of <a href="https://www.withsecure.com/en/home">WithSecure</a> and a principal research Officer at <a href="https://www.f-secure.com/en">F-Secure</a>. In this interview with our host, Jordi Mon, he discusses the eventful and rocky early start of his software engineering career, hybrid warfare, reverse engineering, recent exploits like Log for Shell and heart bleed, and more.</span></p>
<p><span style="font-weight: 400;">This episode is packed with valuable career and life lessons on dealing with the unexpected. As well as fascinating stories from the frontiers of cyber security and geopolitics, many of which are discussed in more depth in Mikko&#8217;s recent book, <a href="https://www.ifitssmartitsvulnerable.com/">If it&#8217;s smart, it&#8217;s vulnerable</a>.</span></p>
<p style="text-align: center;">Sponsorship inquiries: <a href="mailto:sponsor@softwareengineeringdaily.com" target="_blank" rel="noopener noreferrer">sponsor@softwareengineeringdaily.com</a></p>
<p>&nbsp;</p>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2022/11/01/the-internet-with-mikko-hypponen/">The Cyber Frontier with Mikko Hypponen</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED7963233752.mp3" length="94276907" type="audio/mpeg" />
		<itunes:subtitle>Mikko Hypponen is the CRO of WithSecure and a principal research Officer at F-Secure. In this interview with our host, Jordi Mon, he discusses the eventful and rocky early start of his software engineering career, hybrid warfare, reverse engineering,</itunes:subtitle>
		<itunes:summary>Mikko Hypponen is the CRO of WithSecure and a principal research Officer at F-Secure. In this interview with our host, Jordi Mon, he discusses the eventful and rocky early start of his software engineering career, hybrid warfare, reverse engineering, recent exploits like Log for Shell and heart bleed, and more. This episode is packed with</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>39:15</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">14511</post-id>	</item>
	<item>
		<title>Tao of React with Alex Kondov</title>
		<link>http://softwareengineeringdaily.com/2022/10/26/tao-of-react-with-alex-kondov/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=tao-of-react-with-alex-kondov</link>
		<pubDate>Wed, 26 Oct 2022 13:28:50 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=14498</guid>
		<comments>http://softwareengineeringdaily.com/2022/10/26/tao-of-react-with-alex-kondov/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2022/10/26/tao-of-react-with-alex-kondov/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Mike Bifulco]]></category>
		<category><![CDATA[Podcast]]></category>
		<category><![CDATA[Alex Kondov]]></category>
		<category><![CDATA[modern web applications]]></category>
		<category><![CDATA[React]]></category>
		<category><![CDATA[Tao of React]]></category>
		<description>&lt;p&gt;React is the most widely used front-end framework. It pioneered the component model and influenced the software design of all modern web applications. React is not an opinionated tool, allowing engineers to shape their applications in a way that fits the problems at hand. However, this freedom of expression can be very confusing to newcomers.&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2022/10/26/tao-of-react-with-alex-kondov/&quot;&gt;Tao of React with Alex Kondov&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<p style="text-align: left;"><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/10/Alex-Kondov.png"><img decoding="async" loading="lazy" class="alignright size-full wp-image-14500" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/10/Alex-Kondov.png?resize=218%2C258" alt="" width="218" height="258" data-recalc-dims="1" /></a>React is the most widely used front-end framework. It pioneered the component model and influenced the software design of all modern web applications. React is not an opinionated tool, allowing engineers to shape their applications in a way that fits the problems at hand. However, this freedom of expression can be very confusing to newcomers. <a href="https://www.linkedin.com/in/alexander-kondov-2a8b25a9/">Alex Kondov</a> is a principal engineer who has worked with React ever since its inception. In his book, Tao of React, he shares a collection of fundamental architectural principles that aim to help front-end engineers build better web applications.</p>
<p style="text-align: center;">Sponsorship inquiries: <a href="mailto:sponsor@softwareengineeringdaily.com" target="_blank" rel="noopener noreferrer">sponsor@softwareengineeringdaily.com</a></p>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2022/10/26/tao-of-react-with-alex-kondov/">Tao of React with Alex Kondov</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED4558676396.mp3" length="37239051" type="audio/mpeg" />
		<itunes:subtitle>React is the most widely used front-end framework. It pioneered the component model and influenced the software design of all modern web applications. React is not an opinionated tool, allowing engineers to shape their applications in a way that fits t...</itunes:subtitle>
		<itunes:summary>React is the most widely used front-end framework. It pioneered the component model and influenced the software design of all modern web applications. React is not an opinionated tool, allowing engineers to shape their applications in a way that fits the problems at hand. However, this freedom of expression can be very confusing to newcomers.</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>38:42</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">14498</post-id>	</item>
	<item>
		<title>Modern Application Observability with Berkay Mollamustafaoglu</title>
		<link>http://softwareengineeringdaily.com/2022/10/20/thundra-with-berkay/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=thundra-with-berkay</link>
		<pubDate>Thu, 20 Oct 2022 09:00:57 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=14483</guid>
		<comments>http://softwareengineeringdaily.com/2022/10/20/thundra-with-berkay/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2022/10/20/thundra-with-berkay/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Lee Atchison]]></category>
		<category><![CDATA[Podcast]]></category>
		<category><![CDATA[Berkay Mollamustafaoglu]]></category>
		<category><![CDATA[monitoring]]></category>
		<category><![CDATA[observability]]></category>
		<category><![CDATA[THundra]]></category>
		<description>&lt;p&gt;Observability is a critical aspect of modern digital applications. You can’t operate an application at scale that satisfies your customer needs without understanding how the application is currently performing, whether it’s understanding the current operating needs of the application, adjusting resource usage, detecting issues before they become serious or solving an ongoing technical issue as&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2022/10/20/thundra-with-berkay/&quot;&gt;Modern Application Observability with Berkay Mollamustafaoglu&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<p><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/10/Berkay-Mollamustafaoglu.png"><img decoding="async" loading="lazy" class="alignright size-full wp-image-14487" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/10/Berkay-Mollamustafaoglu.png?resize=218%2C258" alt="" width="218" height="258" data-recalc-dims="1" /></a>Observability is a critical aspect of modern digital applications. You can&#8217;t operate an application at scale that satisfies your customer needs without understanding how the application is currently performing, whether it&#8217;s understanding the current operating needs of the application, adjusting resource usage, detecting issues before they become serious or solving an ongoing technical issue as it&#8217;s going on.</p>
<p><a href="https://www.thundra.io/">Thundra</a> is a performance monitoring company that specializes in application performance monitoring, infrastructure monitoring, and most notably serverless monitoring. <a href="https://twitter.com/berkay?lang=en">Berkay Mollamustafaoglu</a> is the CEO of Thundra and he&#8217;s our guest.</p>
<p style="text-align: center;">Sponsorship inquiries: <a href="mailto:sponsor@softwareengineeringdaily.com" target="_blank" rel="noopener noreferrer">sponsor@softwareengineeringdaily.com</a></p>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2022/10/20/thundra-with-berkay/">Modern Application Observability with Berkay Mollamustafaoglu</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED3572230373.mp3" length="43152837" type="audio/mpeg" />
		<itunes:subtitle>Observability is a critical aspect of modern digital applications. You can’t operate an application at scale that satisfies your customer needs without understanding how the application is currently performing,</itunes:subtitle>
		<itunes:summary>Observability is a critical aspect of modern digital applications. You can’t operate an application at scale that satisfies your customer needs without understanding how the application is currently performing, whether it’s understanding the current operating needs of the application, adjusting resource usage, detecting issues before they become serious or solving an ongoing technical issue as</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>44:51</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">14483</post-id>	</item>
	<item>
		<title>The Quantum Leap with Dmitri Maslov</title>
		<link>http://softwareengineeringdaily.com/2022/10/17/the-quantum-leap-with-dmitri-maslov/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=the-quantum-leap-with-dmitri-maslov</link>
		<pubDate>Tue, 18 Oct 2022 06:49:39 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=14474</guid>
		<comments>http://softwareengineeringdaily.com/2022/10/17/the-quantum-leap-with-dmitri-maslov/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2022/10/17/the-quantum-leap-with-dmitri-maslov/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Podcast]]></category>
		<category><![CDATA[Sean Falconer]]></category>
		<category><![CDATA[Uncategorized]]></category>
		<category><![CDATA[Dmitri Maslov]]></category>
		<category><![CDATA[Moore's Law]]></category>
		<category><![CDATA[quantum algorithms]]></category>
		<category><![CDATA[quantum computing]]></category>
		<description>&lt;p&gt;The classical computing power has doubled every two years – a pattern known as Moore’s law. However, the ability to fabricate more and more transistors in a computer chip is approaching saturation as we are approaching atomic dimensions. Quantum Computing is a promising technology to take us beyond this. A quantum Computer uses qubits to&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2022/10/17/the-quantum-leap-with-dmitri-maslov/&quot;&gt;The Quantum Leap with Dmitri Maslov&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<p><span style="font-weight: 400;"><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/10/Rectangle-167.png"><img decoding="async" loading="lazy" class="alignright size-full wp-image-14477" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/10/Rectangle-167.png?resize=200%2C240&#038;ssl=1" alt="" width="200" height="240" data-recalc-dims="1" /></a>The classical computing power has doubled every two years &#8211; a pattern known as Moore’s law. However, the ability to fabricate more and more transistors in a computer chip is approaching saturation as we are approaching atomic dimensions. Quantum Computing is a promising technology to take us beyond this. A quantum Computer uses qubits to run multi-dimensional quantum algorithms. Quantum Computers are faster and can solve problems that are beyond the reach of even the most  powerful classical supercomputers.<br />
</span><span style="font-weight: 400;"><br />
</span><span style="font-weight: 400;">Dmitri Maslov is the Chief Software Architect at IBM’s Quantum Computing Division. He joins the show to discuss how Quantum Computing is different from Classical Computing. How to get started in this space, How would Quantum Computing impact current encryption standards, we also went through practical applications, quantum supremacy and quantum algorithms.</span></p>
<p style="text-align: center;">Sponsorship inquiries: <a href="mailto:sponsor@softwareengineeringdaily.com" target="_blank" rel="noopener noreferrer">sponsor@softwareengineeringdaily.com</a></p>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2022/10/17/the-quantum-leap-with-dmitri-maslov/">The Quantum Leap with Dmitri Maslov</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED8570649731.mp3" length="49619128" type="audio/mpeg" />
		<itunes:subtitle>The classical computing power has doubled every two years – a pattern known as Moore’s law. However, the ability to fabricate more and more transistors in a computer chip is approaching saturation as we are approaching atomic dimensions.</itunes:subtitle>
		<itunes:summary>The classical computing power has doubled every two years – a pattern known as Moore’s law. However, the ability to fabricate more and more transistors in a computer chip is approaching saturation as we are approaching atomic dimensions. Quantum Computing is a promising technology to take us beyond this. A quantum Computer uses qubits to</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>51:35</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">14474</post-id>	</item>
	<item>
		<title>Azul with John Ceccarelli</title>
		<link>http://softwareengineeringdaily.com/2022/10/14/azul-with-john-ceccarelli/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=azul-with-john-ceccarelli</link>
		<pubDate>Sat, 15 Oct 2022 05:00:54 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=14468</guid>
		<comments>http://softwareengineeringdaily.com/2022/10/14/azul-with-john-ceccarelli/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2022/10/14/azul-with-john-ceccarelli/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[Alex DeBrie]]></category>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Podcast]]></category>
		<category><![CDATA[Azul]]></category>
		<category><![CDATA[Cassandra]]></category>
		<category><![CDATA[John Ceccarelli]]></category>
		<category><![CDATA[Kafka]]></category>
		<category><![CDATA[OpenJDK]]></category>
		<description>&lt;p&gt;The Java Virtual Machine is an abstract machine that makes it possible for you to write Java code once and run it across multiple devices and operating system types. While you can use the OpenJDK it comes with various issues like Security Vulnerabilities and compliance. Azul is a company that specializes in Java for the&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2022/10/14/azul-with-john-ceccarelli/&quot;&gt;Azul with John Ceccarelli&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<p><span style="font-weight: 400;"><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/10/John-Ceccarelli.png"><img decoding="async" loading="lazy" class="alignright size-full wp-image-14469" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/10/John-Ceccarelli.png?resize=218%2C258" alt="" width="218" height="258" data-recalc-dims="1" /></a>The Java Virtual Machine is an abstract machine that makes it possible for you to write Java code once and run it across multiple devices and operating system types. While you can use the OpenJDK it comes with various issues like Security Vulnerabilities and compliance.</span><span style="font-weight: 400;"><br />
</span><span style="font-weight: 400;"><a href="https://www.azul.com/">Azul</a> is a company that specializes in Java for the enterprise. It has the largest Java engineering team after Oracle. <a href="https://twitter.com/jceccarelli1?lang=en">John Ceccarelli</a> is the Senior Director of Product Management at Azul Systems responsible for Azul Platform Prime which is their hyper optimized build of OpenJDK.</span> <span style="font-weight: 400;">He joins the show to discuss Azul&#8217;s optimization of OpenJDK, specifically the JIT compiler and the garbage collector. We also discussed the different use cases like the financial sector and other infrastructure areas like Cassandra and Kafka.</span></p>
<p><em>Full disclosure: Azul is a sponsor of Software Engineering Daily.</em></p>
<p style="text-align: center;">Sponsorship inquiries: <a href="mailto:sponsor@softwareengineeringdaily.com" target="_blank" rel="noopener noreferrer">sponsor@softwareengineeringdaily.com</a></p>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2022/10/14/azul-with-john-ceccarelli/">Azul with John Ceccarelli</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED9972692844.mp3" length="19867885" type="audio/mpeg" />
		<itunes:subtitle>The Java Virtual Machine is an abstract machine that makes it possible for you to write Java code once and run it across multiple devices and operating system types. While you can use the OpenJDK it comes with various issues like Security Vulnerabiliti...</itunes:subtitle>
		<itunes:summary>The Java Virtual Machine is an abstract machine that makes it possible for you to write Java code once and run it across multiple devices and operating system types. While you can use the OpenJDK it comes with various issues like Security Vulnerabilities and compliance. Azul is a company that specializes in Java for the</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>32:57</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">14468</post-id>	</item>
	<item>
		<title>Open Source Authentication with Advait Ruia and Rishabh Poddar</title>
		<link>http://softwareengineeringdaily.com/2022/10/13/open-source-authentication/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=open-source-authentication</link>
		<pubDate>Thu, 13 Oct 2022 18:00:55 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=14458</guid>
		<comments>http://softwareengineeringdaily.com/2022/10/13/open-source-authentication/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2022/10/13/open-source-authentication/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Podcast]]></category>
		<category><![CDATA[Sean Falconer]]></category>
		<category><![CDATA[Advait Ruia]]></category>
		<category><![CDATA[Open Source Authentication]]></category>
		<category><![CDATA[Rishabh Poddar]]></category>
		<category><![CDATA[SuperTokens]]></category>
		<description>&lt;p&gt;Passwordless Authentication is a technique in which users are given access to an environment without entering a password or answering a security question. This allows users to access an environment securely and protects organizations against attack vectors like Keylogging, Brute force methods, and phishing. The company SuperTokens provides secure login and session management for your&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2022/10/13/open-source-authentication/&quot;&gt;Open Source Authentication with Advait Ruia and Rishabh Poddar&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<p><span style="font-weight: 400;">Passwordless Authentication is a technique in which users are given access to an environment without entering a password or answering a security question. This allows users to access an environment securely and protects organizations against attack vectors like Keylogging, Brute force methods, and phishing. The company <a href="https://supertokens.com/">SuperTokens</a> provides secure login and session management for your apps in an open-core model.</span></p>
<p><span style="font-weight: 400;">In this episode, we interviewed <a href="https://twitter.com/Advait_Ruia?ref_src=twsrc%5Egoogle%7Ctwcamp%5Eserp%7Ctwgr%5Eauthor">Advait Ruia</a> and <a href="https://twitter.com/rishpoddar">Rishabh Poddar</a> from SuperTokens. We discussed Open source authentication, security considerations for Authentication, recipes for Authentication, and the future of passwords</span><b>.</b></p>
<p>Follow Sean:<b><a href="https://twitter.com/seanfalconer">@seanfalconer</a></b></p>
<p style="text-align: center;">Sponsorship inquiries: <a href="mailto:sponsor@softwareengineeringdaily.com" target="_blank" rel="noopener noreferrer">sponsor@softwareengineeringdaily.com</a></p>
<p>&nbsp;</p>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2022/10/13/open-source-authentication/">Open Source Authentication with Advait Ruia and Rishabh Poddar</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED6381200944.mp3" length="37899213" type="audio/mpeg" />
		<itunes:subtitle>Passwordless Authentication is a technique in which users are given access to an environment without entering a password or answering a security question. This allows users to access an environment securely and protects organizations against attack vec...</itunes:subtitle>
		<itunes:summary>Passwordless Authentication is a technique in which users are given access to an environment without entering a password or answering a security question. This allows users to access an environment securely and protects organizations against attack vectors like Keylogging, Brute force methods, and phishing. The company SuperTokens provides secure login and session management for your</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>39:23</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">14458</post-id>	</item>
	<item>
		<title>Twisp: Reinventing the Ledger with Jarred Ward</title>
		<link>http://softwareengineeringdaily.com/2022/10/07/twisp-reinventing-the-ledger/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=twisp-reinventing-the-ledger</link>
		<pubDate>Fri, 07 Oct 2022 17:05:08 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=14443</guid>
		<comments>http://softwareengineeringdaily.com/2022/10/07/twisp-reinventing-the-ledger/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2022/10/07/twisp-reinventing-the-ledger/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Jocelyn Byrne Houle]]></category>
		<category><![CDATA[Podcast]]></category>
		<category><![CDATA[Uncategorized]]></category>
		<category><![CDATA[Jarred Ward]]></category>
		<category><![CDATA[ledger]]></category>
		<category><![CDATA[ledger systems]]></category>
		<category><![CDATA[Twisp]]></category>
		<description>&lt;p&gt;Monolithic relational databases are the traditional foundation of financial core ledger systems. Nevertheless, the process of building and operating  mission-critical ledgers to track and reconcile payments and money movement is complex.  Twisp is rethinking core accounting and financial orchestration on a cloud-native ledger system, so developers can stop re-inventing the ledger and focus on building&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2022/10/07/twisp-reinventing-the-ledger/&quot;&gt;Twisp: Reinventing the Ledger with Jarred Ward&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<p><span style="font-weight: 400;"><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/10/Jarred-Ward.png"><img decoding="async" loading="lazy" class="alignright size-full wp-image-14444" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/10/Jarred-Ward.png?resize=218%2C258&#038;ssl=1" alt="" width="218" height="258" data-recalc-dims="1" /></a>Monolithic relational databases are the traditional foundation of financial core ledger systems. Nevertheless, the process of building and operating  mission-critical ledgers to track and reconcile payments and money movement is complex. </span></p>
<p><span style="font-weight: 400;">Twisp is rethinking core accounting and financial orchestration on a cloud-native ledger system, so developers can stop re-inventing the ledger and focus on building products their customer’s love. </span></p>
<p><span style="font-weight: 400;">When you provision an instance of the Twisp accounting core, you get a transactions ledger for double-entry accounting, a chart of accounts to represent any economic activity, and layered balances for tracking settled, pending, and planned funds flows. All of this is accessible via a straightforward GraphQL API.</span></p>
<p><span style="font-weight: 400;">In this episode, we speak with<a href="https://twitter.com/webriots?lang=en"> Jarred Ward</a>, Co-founder &amp; CEO of <a href="https://www.twisp.com/">Twisp</a>. </span></p>
<p><span style="font-weight: 400;">Previously, Jarred was principal engineer at Simple, the first neobank, and later led the team building Open Platform at BBVA, one of the first banking-as-a-service products. </span></p>
<p><span style="font-weight: 400;">To learn more about Twisp and get access to a sandbox ledger, go to: <a href="https://www.twisp.com/">https://www.twisp.com/</a></span></p>
<p style="text-align: center;">Sponsorship inquiries: <a href="mailto:sponsor@softwareengineeringdaily.com" target="_blank" rel="noopener noreferrer">sponsor@softwareengineeringdaily.com</a></p>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2022/10/07/twisp-reinventing-the-ledger/">Twisp: Reinventing the Ledger with Jarred Ward</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED5835919439.mp3" length="28045046" type="audio/mpeg" />
		<itunes:subtitle>Monolithic relational databases are the traditional foundation of financial core ledger systems. Nevertheless, the process of building and operating  mission-critical ledgers to track and reconcile payments and money movement is complex.</itunes:subtitle>
		<itunes:summary>Monolithic relational databases are the traditional foundation of financial core ledger systems. Nevertheless, the process of building and operating  mission-critical ledgers to track and reconcile payments and money movement is complex.  Twisp is rethinking core accounting and financial orchestration on a cloud-native ledger system, so developers can stop re-inventing the ledger and focus on building</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>38:49</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">14443</post-id>	</item>
	<item>
		<title>Open-source Serverless Postgres with Nikita Shamgunov</title>
		<link>http://softwareengineeringdaily.com/2022/10/05/open-source-serverless-postgres/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=open-source-serverless-postgres</link>
		<pubDate>Wed, 05 Oct 2022 07:10:59 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=14432</guid>
		<comments>http://softwareengineeringdaily.com/2022/10/05/open-source-serverless-postgres/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2022/10/05/open-source-serverless-postgres/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[Alex DeBrie]]></category>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Podcast]]></category>
		<category><![CDATA[Uncategorized]]></category>
		<category><![CDATA[AWS Aurora Postgres]]></category>
		<category><![CDATA[Neon]]></category>
		<category><![CDATA[Nikita Shamgunov]]></category>
		<category><![CDATA[Open-source Serverless Postgres]]></category>
		<description>&lt;p&gt;PostgreSQL is a free and open-source relational database management system. Postgres-based databases are widespread and are used by a variety of organizations, from Reddit to the International Space Station, and Postgres databases are a common offering from cloud providers such as AWS, Alibaba Cloud, and Heroku. Neon is a serverless open-source alternative to AWS Aurora&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2022/10/05/open-source-serverless-postgres/&quot;&gt;Open-source Serverless Postgres with Nikita Shamgunov&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<p><span style="font-weight: 400;"><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/10/Nikita-Shamgunov.png"><img decoding="async" loading="lazy" class="alignright size-full wp-image-14433" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/10/Nikita-Shamgunov.png?resize=218%2C258&#038;ssl=1" alt="" width="218" height="258" data-recalc-dims="1" /></a>PostgreSQL is a free and open-source relational database management system. Postgres-based databases are widespread and are used by a variety of organizations, from Reddit to the International Space Station, and Postgres databases are a common offering from cloud providers such as AWS, Alibaba Cloud, and Heroku.</span></p>
<p><span style="font-weight: 400;"><a href="https://neon.tech/">Neon</a> is a serverless open-source alternative to AWS Aurora Postgres. It separates storage and compute and substitutes the PostgreSQL storage layer by redistributing data across a cluster of nodes.</span></p>
<p><span style="font-weight: 400;">Today, we spoke with <a href="https://mobile.twitter.com/nikitabase">Nikita Shamgunov</a> of Neon. We discuss how Neon scales Postgres, how it saves cost and the engineering that makes it possible.</span></p>
<p style="text-align: center;">Sponsorship inquiries: <a href="mailto:sponsor@softwareengineeringdaily.com" target="_blank" rel="noopener noreferrer">sponsor@softwareengineeringdaily.com</a></p>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2022/10/05/open-source-serverless-postgres/">Open-source Serverless Postgres with Nikita Shamgunov</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED5325313469.mp3" length="45399600" type="audio/mpeg" />
		<itunes:subtitle>PostgreSQL is a free and open-source relational database management system. Postgres-based databases are widespread and are used by a variety of organizations, from Reddit to the International Space Station,</itunes:subtitle>
		<itunes:summary>PostgreSQL is a free and open-source relational database management system. Postgres-based databases are widespread and are used by a variety of organizations, from Reddit to the International Space Station, and Postgres databases are a common offering from cloud providers such as AWS, Alibaba Cloud, and Heroku. Neon is a serverless open-source alternative to AWS Aurora</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>47:12</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">14432</post-id>	</item>
	<item>
		<title>Edge Impulse with Daniel Situnayake</title>
		<link>http://softwareengineeringdaily.com/2022/09/30/edge-impulse-with-daniel-situnayake/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=edge-impulse-with-daniel-situnayake</link>
		<pubDate>Sat, 01 Oct 2022 04:49:40 +0000</pubDate>
		<guid isPermaLink="false">https://softwareengineeringdaily.com/?p=14426</guid>
		<comments>http://softwareengineeringdaily.com/2022/09/30/edge-impulse-with-daniel-situnayake/#respond</comments>
		<wfw:commentRss>http://softwareengineeringdaily.com/2022/09/30/edge-impulse-with-daniel-situnayake/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<category><![CDATA[All Content]]></category>
		<category><![CDATA[Exclusive Content]]></category>
		<category><![CDATA[Hosts]]></category>
		<category><![CDATA[Machine Learning]]></category>
		<category><![CDATA[Podcast]]></category>
		<category><![CDATA[Sean Falconer]]></category>
		<category><![CDATA[Cloud-based dev environments]]></category>
		<category><![CDATA[Cloud-based IDEs]]></category>
		<category><![CDATA[Daniel Situnayake]]></category>
		<category><![CDATA[Edge Impulse]]></category>
		<description>&lt;p&gt;Today, we spoke with Daniel Situnayake of Edge Impulse. We discussed AI, machine learning, edge devices, TinyML and AI tool chain.             Sponsorship inquiries: sponsor@softwareengineeringdaily.com&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com/2022/09/30/edge-impulse-with-daniel-situnayake/&quot;&gt;Edge Impulse with Daniel Situnayake&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;http://softwareengineeringdaily.com&quot;&gt;Software Engineering Daily&lt;/a&gt;.&lt;/p&gt;</description>
		<content:encoded><![CDATA[<p><span style="font-weight: 400;"><a href="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/09/Daniel-Situnayake.png"><img decoding="async" loading="lazy" class="alignright size-full wp-image-14427" src="https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2022/09/Daniel-Situnayake.png?resize=218%2C258&#038;ssl=1" alt="" width="218" height="258" data-recalc-dims="1" /></a>Today, we spoke with <a href="https://twitter.com/dansitu?lang=en">Daniel Situnayake</a> of <a href="https://edgeimpulse.com/">Edge Impulse</a>. We discussed AI, machine learning, edge devices, TinyML and AI tool chain.</span></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p style="text-align: center;">Sponsorship inquiries: <a href="mailto:sponsor@softwareengineeringdaily.com" target="_blank" rel="noopener noreferrer">sponsor@softwareengineeringdaily.com</a></p>
<p>The post <a rel="nofollow" href="http://softwareengineeringdaily.com/2022/09/30/edge-impulse-with-daniel-situnayake/">Edge Impulse with Daniel Situnayake</a> appeared first on <a rel="nofollow" href="http://softwareengineeringdaily.com">Software Engineering Daily</a>.</p>
]]></content:encoded>
		<enclosure url="https://traffic.megaphone.fm/SED5598058542.mp3" length="41630677" type="audio/mpeg" />
		<itunes:subtitle>Today, we spoke with Daniel Situnayake of Edge Impulse. We discussed AI, machine learning, edge devices, TinyML and AI tool chain.             Sponsorship inquiries: sponsor@softwareengineeringdaily.com</itunes:subtitle>
		<itunes:summary>Today, we spoke with Daniel Situnayake of Edge Impulse. We discussed AI, machine learning, edge devices, TinyML and AI tool chain.             Sponsorship inquiries: sponsor@softwareengineeringdaily.com</itunes:summary>
		<itunes:author>Software Engineering Daily</itunes:author>
		<itunes:episodeType>full</itunes:episodeType>
		<itunes:duration>49:27</itunes:duration>
<post-id xmlns="com-wordpress:feed-additions:1">14426</post-id>	</item>
</channel>
</rss>

  recorded_at: Wed, 02 Aug 2023 08:07:33 GMT
- request:
    method: get
    uri: http://ryan.com/jina
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 301
      message: Moved Permanently
    headers:
      Server:
      - Microsoft-Azure-Application-Gateway/v2
      Date:
      - Sun, 03 Sep 2023 08:13:47 GMT
      Content-Type:
      - text/html
      Content-Length:
      - '195'
      Connection:
      - keep-alive
      Location:
      - https://ryan.com/jina
    body:
      encoding: UTF-8
      string: "<html>\r\n<head><title>301 Moved Permanently</title></head>\r\n<body>\r\n<center><h1>301
        Moved Permanently</h1></center>\r\n<hr><center>Microsoft-Azure-Application-Gateway/v2</center>\r\n</body>\r\n</html>\r\n"
  recorded_at: Sun, 03 Sep 2023 08:13:48 GMT
- request:
    method: get
    uri: https://ryan.com/jina
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 404
      message: Not Found
    headers:
      Date:
      - Sun, 03 Sep 2023 08:13:48 GMT
      Content-Type:
      - text/html; charset=utf-8
      Content-Length:
      - '47725'
      Connection:
      - keep-alive
      Cache-Control:
      - private
      Server:
      - Microsoft-IIS/10.0
      Set-Cookie:
      - ASP.NET_SessionId=jcalshuedbesclnlf5vu5nr0; path=/; HttpOnly; SameSite=Lax
      X-Aspnetmvc-Version:
      - '5.2'
      X-Aspnet-Version:
      - 4.0.30319
      X-Powered-By:
      - ASP.NET
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        

<!DOCTYPE html >
<html class="no-js" lang="en">
<head>

    <title>Page Not Found</title>
    <meta name="viewport" content="width=device-width" />
    <meta http-equiv="X-UA-Compatible" content="IE=100" />
    <meta name="description" />
    <meta property="og:title" content="Page Not Found" />
    <meta property="og:url" content="http://ryan.com/notfound?404;http://ryan.com:80/jina" />
    <meta property="og:description" />
    <meta property="og:image" content="" />
    <meta name="twitter:card" content="summary_large_image">
    <link href="https://fonts.googleapis.com/css?family=Lato:300,400,400i,700,700i,900|PT+Sans:400i,700i" rel="stylesheet">
    <link href="/static/css/styles.css?v=tftsxrRMQnyY14p7ZAvCm_sHioyINQVTyCp67ic5qxs1" rel="stylesheet"/>

    <!--[if lte IE 9]>
        <link rel="stylesheet" href="/static/css/style-ie.css" media="all">
    <![endif]-->
  
    <script src="/static/js/scripts-top.js?v=JE5utq4ajAQY-R4--AQTGf4k6SzOMdvfh2LFFPMuCYg1"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js"></script>

    <link href="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.css" rel="stylesheet"/>


    <link rel="canonical" href="https://ryan.com/notfound" />

        <!-- Google Tag Manager -->
        <script nonce="IpVa8oxKu5">
(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
        new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
        j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
        'https://www.googletagmanager.com/gtm.js?id='+i+dl+ '&gtm_auth=jD0LgUbp4dNu81Eso2RY1A&gtm_preview=env-2&gtm_cookies_win=x';f.parentNode.insertBefore(j,f);
})(window,document,'script','dataLayer','GTM-T5KKZ2');</script>
        <!-- End Google Tag Manager -->
</head>
<body data-comp="global">
    
    
        <!-- Google Tag Manager (noscript)  -->
        <noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-T5KKZ2&gtm_auth=jD0LgUbp4dNu81Eso2RY1A&gtm_preview=env-2&gtm_cookies_win=x" height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
        <!-- End Google Tag Manager (noscript) -->
    <input type="hidden" data-helper="lang-root" value="/" />
        <script nonce="x6dURDhbcp">
        $(function () {

            $(".general-search").autocomplete({
                source: function (request, response)
                {
                    $.ajax(
                        {
                            url: "/api/AutoCompleted/SearchResults",
                            data: { q: DOMPurify.sanitize(request.term)},
                            success: function (data)
                            {
                                response($.map(data.hits, function (item)
                                {
                                    return{
                                        label: item.query,
                                        value: item.query
                                    };
                                }));
                            }
                        });
                },
                minLength: 2,
                select: function(event, ui) {
                    $(this).val(ui.item.value);
                    $(this).closest("form").submit();
                }
            });
        });
    </script>
<header class="main-header">
    <div class="main-header__content">
        <a href="/" title="Liberating our clients from the burden of being overtaxed, freeing their capital to invest, grow, and thrive." class="logo-block">
            
        
        <img src="/globalassets/ryan-global-logo.png" alt="ryan-global-logo" class="logo" />
        

        </a>
            <div class="nav-utilities">
        <ul class="header__utility-list">
                <li class="header__mobile-util-nav" data-activetoggle>
                    <a class="header__mobile-util-trigger" data-activetogglesection data-activetrigger>
                        <span class="icon-ryan-menu"></span>
                    </a>
                    <div class="header__mobile-util-lists">
                        <span class="icon-ryan-x-close" data-activetrigger></span>
                                <div class="mobile-dxp-login"><a href="https://access.ryan.com/app?soc=rdc" target="_blank">Log in</a></div>

                        


<ul class="header__mobile-util-list" ><li >

<a href="/careers/" title="Careers" class="">Careers</a></li><li >

<a href="/contact/" title="Contact" class="">Contact</a></li><li >

<a href="/file-transfer/" title="File Transfer" class="">File Transfer</a></li><li >

<a href="https://softwaresupport.ryan.com/" title="Software Support" class="" target="_blank">Software Support</a></li><li >

<a href="https://ryanstore.concordms.com/login.asp?CID=291&amp;utm_source=ryan-website&amp;utm_campaign=ryan-store" title="Ryan Store" class="" target="_blank">Ryan Store</a></li></ul>
                        


<ul class="header__mobile-nav-list" ><li >
<a href="/services/" title="Services">Services</a></li><li >
<a href="/practice-areas/ryan-software/" title="Ryan Software">Ryan Software</a></li><li >

<a href="/industries/" title="Industries" class="">Industries</a></li><li >
<a href="/about-ryan/news-and-insights/" title="News &amp; Insights">News &amp; Insights</a></li><li >

<a href="/about-ryan/" title="About Ryan" class="">About Ryan</a></li></ul>
                    </div>
                </li>
                            <li class="header__utility-item header__search" data-activetoggle>
                    <a class="header__search-toggle" data-activetogglesection data-activetrigger>
                        <span class="icon-ryan-search"></span>
                    </a>
                    <div class="header__search-modal">
                        <form class="header__search-form" action="/search/" method="get">
                            <span class="icon-ryan-x-close" data-activetrigger data-independenttrigger></span>
                            <label class="visibly-hidden" for="header-search">Search</label>
                            <input class="header__search-input general-search" type="text" name="q" placeholder="Search">
                            <button type=submit class="icon-ryan-search"></button>
                        </form>
                    </div>
                </li>
            



<li class="header__utility-item desktop-only">
    
    <a href="/careers/" title="Careers" class="">Careers</a>

</li>
<li class="header__utility-item desktop-only">
    
    <a href="/contact/" title="Contact" class="">Contact</a>

</li>
<li class="header__utility-item desktop-only">
    
    <a href="/file-transfer/" title="File Transfer" class="">File Transfer</a>

</li>
<li class="header__utility-item desktop-only">
    
    <a href="https://softwaresupport.ryan.com/" title="Software Support" target="_blank" class="">Software Support</a>

</li>
<li class="header__utility-item desktop-only">
    
    <a href="https://ryanstore.concordms.com/login.asp?CID=291&amp;utm_source=ryan-website&amp;utm_campaign=ryan-store" target="_blank" class="">Ryan Store</a>

</li>
                <li class="header__utility-item header__global" data-activetoggle>
                    <a class="header__global-toggle" data-activetogglesection data-activetrigger>
                        <span class="header__global-text">
                            United States -
                            <span class="header__language">English</span>
                            <span class="icon-ryan-arrow-down"></span>
                        </span>
                        <span class="icon-ryan-globe"></span>
                    </a>
                    <div class="header__utility-pop-up">
                        <span class="icon-ryan-x-close" data-activetrigger></span>
                        


<ul >




<li class="active">
    <a href="/">United States</a> -    
    


<ul class="header__language-list" ><li >

<a href="/" title="English" class="header__language active">English</a></li></ul>   
</li>




<li class="">
    <a href="/canada/">Canada</a> -    
    


<ul class="header__language-list" ><li >

<a href="/canada/" title="English" class="header__language active">English</a></li><li >

<a href="/canada-fr/" title="French" class="header__language active">French</a></li></ul>   
</li>




<li class="">
    <a href="/europe/">Europe</a> -    
    


<ul class="header__language-list" ><li >

<a href="/europe/" title="English" class="header__language active">English</a></li></ul>   
</li>




<li class="">
    <a href="/asia-pacific/">Asia-Pacific</a> -    
    


<ul class="header__language-list" ><li >

<a href="/asia-pacific/" title="English" class="header__language active">English</a></li></ul>   
</li></ul>
                    </div>
                </li>
        </ul>
                <div class="dxp-login"><a href="https://access.ryan.com/app?soc=rdc" target="_blank">Log in</a></div>

    </div>
                <nav>
            


<ul class="header__nav-list" data-activetoggle><li class="header__nav-item" data-activetogglesection>
<a href="/services/" data-activetrigger data-mobileonly title="Services" class="header__nav-link">Services</a>
    <div class="header__nav-pop-up">
        <span class="icon-ryan-x-close" data-closetrigger></span>
        <a class="header__nav-sub-link hidden-lg" href="/services/">Services</a>
        


<ul class="header__nav-sub-item-list" data-activetoggle><li class="header__nav-sub-item" data-activetogglesection>
    <a class="header__nav-sub-link" href="/services/recovery/" title="Recovery">Recovery<span class="icon-ryan-arrow-right"></span></a>
<div class="header__nav-sub-link-block">
    <div class="header__sub-image-wrap">
        
        
        <img src="/globalassets/photography/medium/medium-people/medium_reviewing-data-on-computer.jpg" alt="medium_reviewing-data-on-computer" class="" />
        

    </div>
    <div class="header__sub-content">
            <h3 class="">Recovery</h3>

        <p>Last year alone, Ryan recovered more than $2.5 billion in tax savings for our premier global clients.</p>
    </div>
</div></li><li class="header__nav-sub-item" data-activetogglesection>
    <a class="header__nav-sub-link" href="/services/consulting/" title="Consulting">Consulting<span class="icon-ryan-arrow-right"></span></a>
<div class="header__nav-sub-link-block">
    <div class="header__sub-image-wrap">
        
        
        <img src="/globalassets/photography/medium/medium-people/medium_experienced-woman-employee.jpg" alt="medium_experienced-woman-employee" class="" />
        

    </div>
    <div class="header__sub-content">
            <h3 class="">Consulting</h3>

        <p>Ryan’s strategic advisory services improve overall tax performance, helping clients achieve greater profitability, cash flow, and shareholder value.&nbsp;</p>
    </div>
</div></li><li class="header__nav-sub-item" data-activetogglesection>
    <a class="header__nav-sub-link" href="/services/advocacy/" title="Advocacy">Advocacy<span class="icon-ryan-arrow-right"></span></a>
<div class="header__nav-sub-link-block">
    <div class="header__sub-image-wrap">
        
        
        <img src="/globalassets/photography/medium/medium-legal--court/medium_gavel-and-scale.jpg" alt="medium_gavel-and-scale" class="" />
        

    </div>
    <div class="header__sub-content">
            <h3 class="">Advocacy</h3>

        <p>We offer strategic advantages that are unmatched by ordinary accounting and consulting firms. Our services are not restricted by the Sarbanes-Oxley Act of 2002, so we serve as your advocate, without cumbersome regulatory restrictions.</p>
    </div>
</div></li><li class="header__nav-sub-item" data-activetogglesection>
    <a class="header__nav-sub-link" href="/services/compliance/" title="Compliance">Compliance<span class="icon-ryan-arrow-right"></span></a>
<div class="header__nav-sub-link-block">
    <div class="header__sub-image-wrap">
        
        
        <img src="/globalassets/photography/medium/medium-people/medium_connected-people-and-city.jpg" alt="medium_connected-people-and-city" class="" />
        

    </div>
    <div class="header__sub-content">
            <h3 class="">Compliance</h3>

        <p>We function as an extension of your tax department to streamline operations, manage resources, eliminate manual processes, minimize overpayments, and substantially reduce risk.</p>
    </div>
</div></li><li class="header__nav-sub-item" data-activetogglesection>
    <a class="header__nav-sub-link" href="/services/technology/" title="Technology">Technology<span class="icon-ryan-arrow-right"></span></a>
<div class="header__nav-sub-link-block">
    <div class="header__sub-image-wrap">
        
        
        <img src="/globalassets/photography/medium/medium-industries/medium-tech--software/medium_technology-code-2.jpg" alt="medium_technology-code-2" class="" />
        

    </div>
    <div class="header__sub-content">
            <h3 class="">Technology</h3>

        <p>Ryan delivers a wide array of tax technology and software solutions designed to transform the tax function and improve profitability.</p>
    </div>
</div></li></ul>
    </div>
</li><li class="header__nav-item" data-activetogglesection>
<a href="/practice-areas/ryan-software/" data-activetrigger data-mobileonly title="Ryan Software" class="header__nav-link">Ryan Software</a>
    <div class="header__nav-pop-up">
        <span class="icon-ryan-x-close" data-closetrigger></span>
        


<ul class="header__nav-sub-item-list" data-activetoggle><li class="header__nav-sub-item" data-activetogglesection>
    <a class="header__nav-sub-link" href="/practice-areas/ryan-software/">Ryan Software<span class="icon-ryan-arrow-right"></span></a>
<div class="header__nav-sub-link-block">
    <div class="header__sub-image-wrap">
        
        
        <img src="/globalassets/photography/medium/medium-industries/medium-tech--software/medium_technology-software-computer.jpg" alt="medium_technology-software-computer" class="" />
        

    </div>
    <div class="header__sub-content">
            <h3 class="">Ryan Software</h3>

        <p>Ryan Software is rooted in the knowledge and experience gained by Ryan professionals solving the most complex issues for many of the Global 5000 corporations.</p>
    </div>
</div></li></ul>
    </div>
</li><li class="header__nav-item" data-activetogglesection>
<a href="/industries/" data-activetrigger data-mobileonly title="Industries" class="header__nav-link">Industries</a>
    <div class="header__nav-links-pop-up">
        <span class="icon-ryan-x-close" data-closetrigger></span>
        <a class="header__nav-sub-link hidden-lg" href="/industries/">Industries</a>

        


<ul data-activetoggle><li class="header__nav-sub-item" data-activetogglesection>
<a href="/industries/blockchain-and-cryptocurrencies/" title="Blockchain and Cryptocurrency" class="header__nav-sub-link">Blockchain and Cryptocurrency</a></li><li class="header__nav-sub-item" data-activetogglesection>
<a href="/industries/business-services/" title="Business Services" class="header__nav-sub-link">Business Services</a></li><li class="header__nav-sub-item" data-activetogglesection>
<a href="/industries/construction/" title="Construction" class="header__nav-sub-link">Construction</a></li><li class="header__nav-sub-item" data-activetogglesection>
<a href="/industries/financial-services/" title="Financial Services" class="header__nav-sub-link">Financial Services</a></li><li class="header__nav-sub-item" data-activetogglesection>
<a href="/industries/food-services/" title="Food Services" class="header__nav-sub-link">Food Services</a></li><li class="header__nav-sub-item" data-activetogglesection>
<a href="/industries/government-contractor/" title="Government Contractors" class="header__nav-sub-link">Government Contractors</a></li><li class="header__nav-sub-item" data-activetogglesection>
<a href="/industries/healthcare-and-pharmaceuticals/" title="Healthcare and Pharmaceuticals" class="header__nav-sub-link">Healthcare and Pharmaceuticals</a></li><li class="header__nav-sub-item" data-activetogglesection>
<a href="/industries/manufacturing/" title="Manufacturing" class="header__nav-sub-link">Manufacturing</a></li></ul>
        


<ul data-activetoggle><li class="header__nav-sub-item" data-activetogglesection>
<a href="/industries/oil-and-gas/" title="Oil and Gas" class="header__nav-sub-link">Oil and Gas</a></li><li class="header__nav-sub-item" data-activetogglesection>
<a href="/industries/real-estate/" title="Real Estate" class="header__nav-sub-link">Real Estate</a></li><li class="header__nav-sub-item" data-activetogglesection>
<a href="/industries/retail/" title="Retail" class="header__nav-sub-link">Retail</a></li><li class="header__nav-sub-item" data-activetogglesection>
<a href="/industries/technology/" title="Technology" class="header__nav-sub-link">Technology</a></li><li class="header__nav-sub-item" data-activetogglesection>
<a href="/industries/telecommunications/" title="Telecommunications" class="header__nav-sub-link">Telecommunications</a></li><li class="header__nav-sub-item" data-activetogglesection>
<a href="/industries/transportation/" title="Transportation" class="header__nav-sub-link">Transportation</a></li><li class="header__nav-sub-item" data-activetogglesection>
<a href="/industries/utilities/" title="Utilities" class="header__nav-sub-link">Utilities</a></li></ul>
    </div>
</li><li class="header__nav-item" data-activetogglesection>
<a href="/about-ryan/news-and-insights/" data-activetrigger data-mobileonly title="News &amp; Insights" class="header__nav-link">News &amp; Insights</a>
    <div class="header__nav-pop-up">
        <span class="icon-ryan-x-close" data-closetrigger></span>
        


<ul class="header__nav-sub-item-list" data-activetoggle><li class="header__nav-sub-item" data-activetogglesection>
    <a href="/about-ryan/news-and-insights/" title="News &amp; Insights" class="header__nav-sub-link">
        News &amp; Insights
        <span class="icon-ryan-arrow-right"></span>
    </a>
    <div class="header__nav-sub-article-block">
        <ul class="header__article-list">
                <li>
    <div class="article-block ">
        <div class="header">
            <h4>
                        <a href="/about-ryan/news-and-insights/#/?type=tax-development" title="News &amp; Insights">Tax Development</a>
                                    <span class="date">Aug 31, 2023</span>
            </h4>
        </div>
        <p>
            <a href="/about-ryan/news-and-insights/2023/california-approves-apportionment-factor/" title="Taxpayer Win: California Approves Apportionment Factor with Cooperative Members’ Income" target="_self">
                Taxpayer Win: California Approves Apportionment Factor with Cooperative Members’ Income
            </a>
        </p>

               
            <div class="image-wrap">
                <a href="/about-ryan/news-and-insights/2023/california-approves-apportionment-factor/" title="Taxpayer Win: California Approves Apportionment Factor with Cooperative Members’ Income" target="_self"><img src="/globalassets/photography/medium/medium-webinar/california-property-tax-trends.jpg" alt="Taxpayer Win: California Approves Apportionment Factor with Cooperative Members’ Income" /></a>
            </div>
        
    </div>
</li>
                <li>
    <div class="article-block ">
        <div class="header">
            <h4>
                        <a href="/about-ryan/news-and-insights/#/?type=tax-development" title="News &amp; Insights">Tax Development</a>
                                    <span class="date">Aug 29, 2023</span>
            </h4>
        </div>
        <p>
            <a href="/about-ryan/news-and-insights/2023/hawaii-maui-county-file-damage-claims/" title="Hawaii: Maui County Tax Assessors Ask Property Owners to File Damage Claims" target="_self">
                Hawaii: Maui County Tax Assessors Ask Property Owners to File Damage Claims
            </a>
        </p>

               
            <div class="image-wrap">
                <a href="/about-ryan/news-and-insights/2023/hawaii-maui-county-file-damage-claims/" title="Hawaii: Maui County Tax Assessors Ask Property Owners to File Damage Claims" target="_self"><img src="/globalassets/photography/medium/medium-supporting/ryan_imagery_medium-supporting-benefits-retirement.jpg" alt="Hawaii: Maui County Tax Assessors Ask Property Owners to File Damage Claims" /></a>
            </div>
        
    </div>
</li>
                <li>
    <div class="article-block ">
        <div class="header">
            <h4>
                        <a href="/about-ryan/news-and-insights/#/?type=tax-development" title="News &amp; Insights">Tax Development</a>
                                    <span class="date">Aug 24, 2023</span>
            </h4>
        </div>
        <p>
            <a href="/about-ryan/news-and-insights/2023/delaware-house-bill-62/" title="Delaware House Bill 62 Aims to Overhaul Property Reassessment Process" target="_self">
                Delaware House Bill 62 Aims to Overhaul Property Reassessment Process
            </a>
        </p>

               
            <div class="image-wrap">
                <a href="/about-ryan/news-and-insights/2023/delaware-house-bill-62/" title="Delaware House Bill 62 Aims to Overhaul Property Reassessment Process" target="_self"><img src="/globalassets/photography/small/small-square-newsinsights/2021_social-image_ta_delaware-issues-letters-tn.jpg" alt="Delaware House Bill 62 Aims to Overhaul Property Reassessment Process" /></a>
            </div>
        
    </div>
</li>
                <li>
    <div class="article-block ">
        <div class="header">
            <h4>
                        <a href="/about-ryan/news-and-insights/#/?type=tax-development" title="News &amp; Insights">Tax Development</a>
                                    <span class="date">Aug 18, 2023</span>
            </h4>
        </div>
        <p>
            <a href="/about-ryan/news-and-insights/2023/irs-guidance-tax-credits-solar-wind-facilities/" title="Internal Revenue Service Issues Guidance on Investment Tax Credits for Solar and Wind Facilities" target="_self">
                Internal Revenue Service Issues Guidance on Investment Tax Credits for Solar and Wind Facilities
            </a>
        </p>

               
            <div class="image-wrap">
                <a href="/about-ryan/news-and-insights/2023/irs-guidance-tax-credits-solar-wind-facilities/" title="Internal Revenue Service Issues Guidance on Investment Tax Credits for Solar and Wind Facilities" target="_self"><img src="/globalassets/photography/medium/medium-energy/medium_industries_energy_1400x350_energy-solar-power-rolling-hills2.jpg" alt="Internal Revenue Service Issues Guidance on Investment Tax Credits for Solar and Wind Facilities" /></a>
            </div>
        
    </div>
</li>
        </ul>
        <div class="header__article-block-link-wrap">
            <a href="/about-ryan/news-and-insights/" title="View All" class="header__view-all">View All</a>
        </div>
    </div>
</li><li class="header__nav-sub-item" data-activetogglesection>
    <a href="/about-ryan/press-room/" title="Press Room" class="header__nav-sub-link">
        Press Room
        <span class="icon-ryan-arrow-right"></span>
    </a>
    <div class="header__nav-sub-article-block">
        <ul class="header__article-list">
                <li>
    <div class="article-block ">
        <div class="header">
            <h4>
                        <a href="/about-ryan/press-room/#/?type=press-release" title="Press Room">Press Release</a>
                                    <span class="date">Aug 24, 2023</span>
            </h4>
        </div>
        <p>
            <a href="/about-ryan/press-room/2023/people-companies-that-care-list-third-consecutive-year/" title="Ryan Named to &lt;em&gt;PEOPLE&lt;/em&gt; &lt;sup&gt;&#174;&lt;/sup&gt; Companies that Care List for Third Consecutive Year" target="_self">
                Ryan Named to <em>PEOPLE</em> <sup>®</sup> Companies that Care List for Third Consecutive Year
            </a>
        </p>

               
            <div class="image-wrap">
                <a href="/about-ryan/press-room/2023/people-companies-that-care-list-third-consecutive-year/" title="Ryan Named to &lt;em&gt;PEOPLE&lt;/em&gt; &lt;sup&gt;&#174;&lt;/sup&gt; Companies that Care List for Third Consecutive Year" target="_self"><img src="/globalassets/photography/medium/medium-celebrating/medium_employees-clapping.jpg" alt="Ryan Named to &lt;em&gt;PEOPLE&lt;/em&gt; &lt;sup&gt;&#174;&lt;/sup&gt; Companies that Care List for Third Consecutive Year" /></a>
            </div>
        
    </div>
</li>
                <li>
    <div class="article-block ">
        <div class="header">
            <h4>
                        <a href="/about-ryan/press-room/#/?type=press-release" title="Press Room">Press Release</a>
                                    <span class="date">Aug 16, 2023</span>
            </h4>
        </div>
        <p>
            <a href="/about-ryan/press-room/2023/best-companies-to-work-florida-trend/" title="Ryan Named One of the Best Companies to Work for in Florida by &lt;em&gt;Florida Trend&lt;/em&gt;" target="_self">
                Ryan Named One of the Best Companies to Work for in Florida by <em>Florida Trend</em>
            </a>
        </p>

               
            <div class="image-wrap">
                <a href="/about-ryan/press-room/2023/best-companies-to-work-florida-trend/" title="Ryan Named One of the Best Companies to Work for in Florida by &lt;em&gt;Florida Trend&lt;/em&gt;" target="_self"><img src="/globalassets/photography/medium/medium-geography/medium_downtown_tampa_florida.jpg" alt="Ryan Named One of the Best Companies to Work for in Florida by &lt;em&gt;Florida Trend&lt;/em&gt;" /></a>
            </div>
        
    </div>
</li>
                <li>
    <div class="article-block ">
        <div class="header">
            <h4>
                        <a href="/about-ryan/press-room/#/?type=press-release" title="Press Room">Press Release</a>
                                    <span class="date">Aug 15, 2023</span>
            </h4>
        </div>
        <p>
            <a href="/about-ryan/press-room/2023/falleroni-and-lowell-to-leadership-role/" title="Ryan Promotes Michael Falleroni and Matt Lowell to Leadership Role of Principal in Credits and Incentives Practice" target="_self">
                Ryan Promotes Michael Falleroni and Matt Lowell to Leadership Role of Principal in Credits and Incentives Practice
            </a>
        </p>

               
            <div class="image-wrap">
                <a href="/about-ryan/press-room/2023/falleroni-and-lowell-to-leadership-role/" title="Ryan Promotes Michael Falleroni and Matt Lowell to Leadership Role of Principal in Credits and Incentives Practice" target="_self"><img src="/globalassets/photography/medium/medium-celebrating/medium_teamwork.jpg" alt="Ryan Promotes Michael Falleroni and Matt Lowell to Leadership Role of Principal in Credits and Incentives Practice" /></a>
            </div>
        
    </div>
</li>
                <li>
    <div class="article-block ">
        <div class="header">
            <h4>
                        <a href="/about-ryan/press-room/#/?type=press-release" title="Press Room">Press Release</a>
                                    <span class="date">Aug 14, 2023</span>
            </h4>
        </div>
        <p>
            <a href="/about-ryan/press-room/2023/bptw-la-county-by-la-business-journal/" title="Ryan Named One of the Best Places to Work in Los Angeles County by the &lt;em&gt;Los Angeles Business Journal&lt;/em&gt; for the 13&lt;sup&gt;th&lt;/sup&gt; Year" target="_self">
                Ryan Named One of the Best Places to Work in Los Angeles County by the <em>Los Angeles Business Journal</em> for the ...
            </a>
        </p>

               
            <div class="image-wrap">
                <a href="/about-ryan/press-room/2023/bptw-la-county-by-la-business-journal/" title="Ryan Named One of the Best Places to Work in Los Angeles County by the &lt;em&gt;Los Angeles Business Journal&lt;/em&gt; for the 13&lt;sup&gt;th&lt;/sup&gt; Year" target="_self"><img src="/globalassets/photography/medium/medium-celebrating/medium_employees-high-five.jpg" alt="Ryan Named One of the Best Places to Work in Los Angeles County by the &lt;em&gt;Los Angeles Business Journal&lt;/em&gt; for the 13&lt;sup&gt;th&lt;/sup&gt; Year" /></a>
            </div>
        
    </div>
</li>
        </ul>
        <div class="header__article-block-link-wrap">
            <a href="/about-ryan/press-room/" title="View All" class="header__view-all">View All</a>
        </div>
    </div>
</li><li class="header__nav-sub-item" data-activetogglesection>
    <a href="/about-ryan/events--webinars/" title="Events and Webinars" class="header__nav-sub-link">
        Events and Webinars
        <span class="icon-ryan-arrow-right"></span>
    </a>
    <div class="header__nav-sub-article-block">
        <ul class="header__article-list">
                <li>
    <div class="article-block ">
        <div class="header">
            <h4>
                        <a href="/about-ryan/events--webinars/#/?type=webinar" title="Events and Webinars">Webinar</a>
                                    <span class="date">Sep 06, 2023</span>
            </h4>
        </div>
        <p>
            <a href="https://ryan.zoom.us/webinar/register/WN_92dQDwYZTCO4FSIBV8lcmg#/registration" title="Transferable Tax Credits – Mid-Year Outlook" target="_blank">
                Transferable Tax Credits – Mid-Year Outlook
                    <span class="icon-ryan-external-link"></span>
            </a>
        </p>

               
            <div class="image-wrap">
                <a href="https://ryan.zoom.us/webinar/register/WN_92dQDwYZTCO4FSIBV8lcmg#/registration" title="Transferable Tax Credits – Mid-Year Outlook" target="_blank"><img src="/globalassets/photography/medium/medium-people/medium_experienced-woman-employee.jpg" alt="Transferable Tax Credits – Mid-Year Outlook" /></a>
            </div>
        
    </div>
</li>
                <li>
    <div class="article-block ">
        <div class="header">
            <h4>
                        <a href="/about-ryan/events--webinars/#/?type=webinar" title="Events and Webinars">Webinar</a>
                                    <span class="date">Sep 14, 2023</span>
            </h4>
        </div>
        <p>
            <a href="https://ryan.zoom.us/webinar/register/WN_xr5w5VvwSPedI41FJHyzRw#/registration" title="Tracker&lt;sup&gt;&#174;&lt;/sup&gt; PRO Training Refresher | Importing | Tracker&lt;sup&gt;&#174;&lt;/sup&gt; PRO Summit" target="_blank">
                Tracker<sup>®</sup> PRO Training Refresher | Importing | Tracker<sup>®</sup> PRO Summit
                    <span class="icon-ryan-external-link"></span>
            </a>
        </p>

               
            <div class="image-wrap">
                <a href="https://ryan.zoom.us/webinar/register/WN_xr5w5VvwSPedI41FJHyzRw#/registration" title="Tracker&lt;sup&gt;&#174;&lt;/sup&gt; PRO Training Refresher | Importing | Tracker&lt;sup&gt;&#174;&lt;/sup&gt; PRO Summit" target="_blank"><img src="/globalassets/photography/medium/medium-industries/medium-tech--software/medium_tablet-and-market-graph.jpg" alt="Tracker&lt;sup&gt;&#174;&lt;/sup&gt; PRO Training Refresher | Importing | Tracker&lt;sup&gt;&#174;&lt;/sup&gt; PRO Summit" /></a>
            </div>
        
    </div>
</li>
                <li>
    <div class="article-block ">
        <div class="header">
            <h4>
                        <a href="/about-ryan/events--webinars/#/?type=conference" title="Events and Webinars">Conference</a>
                                    <span class="date">Sep 17, 2023</span>
            </h4>
        </div>
        <p>
            <a href="/about-ryan/events--webinars/signature-conference-2023/" title="Signature Conference 2023" target="_self">
                Signature Conference 2023
            </a>
        </p>

               
            <div class="image-wrap">
                <a href="/about-ryan/events--webinars/signature-conference-2023/" title="Signature Conference 2023" target="_self"><img src="/globalassets/photography/medium/medium-events/medium_people-networking-silhouette.jpg" alt="Signature Conference 2023" /></a>
            </div>
        
    </div>
</li>
                <li>
    <div class="article-block ">
        <div class="header">
            <h4>
                        <a href="/about-ryan/events--webinars/#/?type=conference" title="Events and Webinars">Conference</a>
                                    <span class="date">Sep 17, 2023</span>
            </h4>
        </div>
        <p>
            <a href="/about-ryan/events--webinars/nrta-national-conference-2023/" title="NRTA National Conference 2023" target="_self">
                NRTA National Conference 2023
            </a>
        </p>

               
            <div class="image-wrap">
                <a href="/about-ryan/events--webinars/nrta-national-conference-2023/" title="NRTA National Conference 2023" target="_self"><img src="/globalassets/photography/medium/medium-events/medium_people-networking.jpg" alt="NRTA National Conference 2023" /></a>
            </div>
        
    </div>
</li>
        </ul>
        <div class="header__article-block-link-wrap">
            <a href="/about-ryan/events--webinars/" title="View All" class="header__view-all">View All</a>
        </div>
    </div>
</li><li class="header__nav-sub-item" data-activetogglesection></li></ul>
    </div>
</li><li class="header__nav-item" data-activetogglesection>
<a href="/about-ryan/" data-activetrigger data-mobileonly title="About Ryan" class="header__nav-link">About Ryan</a>
    <div class="header__nav-links-pop-up">
        <span class="icon-ryan-x-close" data-closetrigger></span>
        <a class="header__nav-sub-link hidden-lg" href="/about-ryan/">About Ryan</a>

        


<ul data-activetoggle><li class="header__nav-sub-item" data-activetogglesection>
<a href="/about-ryan/why-ryan/" title="Why Ryan" class="header__nav-sub-link">Why Ryan</a>



</li><li class="header__nav-sub-item" data-activetogglesection>
<a href="/about-ryan/end-to-end-services/" title="End-to-End Tax Services" class="header__nav-sub-link">End-to-End Tax Services</a></li><li class="header__nav-sub-item" data-activetogglesection>
<a href="/about-ryan/unmatched-results/" title="Unmatched Results" class="header__nav-sub-link">Unmatched Results</a></li><li class="header__nav-sub-item" data-activetogglesection>
<a href="/about-ryan/leadership/" title="Leadership" class="header__nav-sub-link">Leadership</a></li><li class="header__nav-sub-item" data-activetogglesection>

<a href="/about-ryan/leadership/ryan-experts/" title="Find a Ryan Expert" class="header__nav-sub-link">Find a Ryan Expert</a></li><li class="header__nav-sub-item" data-activetogglesection>
<a href="/about-ryan/corporate-citizenship/" title="Corporate Citizenship" class="header__nav-sub-link">Corporate Citizenship</a></li></ul>
        


<ul data-activetoggle><li class="header__nav-sub-item" data-activetogglesection>
<a href="/about-ryan/awards/" title="Awards" class="header__nav-sub-link">Awards</a></li><li class="header__nav-sub-item" data-activetogglesection>
<a href="/about-ryan/purpose-values/" title="Our Purpose and Values" class="header__nav-sub-link">Our Purpose and Values</a></li><li class="header__nav-sub-item" data-activetogglesection>
<a href="/about-ryan/our-pledges/" title="Our Pledges" class="header__nav-sub-link">Our Pledges</a></li><li class="header__nav-sub-item" data-activetogglesection>
<a href="/about-ryan/our-history/" title="Our History" class="header__nav-sub-link">Our History</a></li><li class="header__nav-sub-item" data-activetogglesection>
<a href="/about-ryan/global/" title="Global" class="header__nav-sub-link">Global</a></li><li class="header__nav-sub-item" data-activetogglesection>
<a href="/locations/" title="Locations" class="header__nav-sub-link">Locations</a></li></ul>
    </div>
</li></ul>
        </nav>
    </div>
</header>
    
    <article>
        <section class="rte-hero">
            <div class="row">
    <h1 class="large-12 columns">Page Not Found</h1>
            </div>
        </section>
        <section class="row column page-notfound">
            <div class="large-10 page-notfound__wrapper">
                <h3>Looks like this page doesn't exist.</h3>
                    <div class="search-form-by-keyword">
                        <form action="/search/" method="get">
                            <label>Search our site:</label>
                            <input class="general-search" type="text" name="q" placeholder="Keyword" />
                            <button type="submit">
                                Search
                            </button>
                        </form>
                    </div>
                                    <p>Or go to the <a href="/" title="Liberating our clients from the burden of being overtaxed, freeing their capital to invest, grow, and thrive.">homepage</a>.</p>
            </div>
        </section>
    </article>   
    <script type="text/javascript">
        $(function () {
            $('.general-search').on('input', function () {
                var c = this.selectionStart,
                    r = /[^a-z0-9_\s\-\'\/\\^.?$#&@!]/gi,
                    v = $(this).val();
                if(r.test(v)) {
                    $(this).val(v.replace(r, ''));
                    c--;
                }
                this.setSelectionRange(c, c);
            });
                
        });
    </script>

    
    <footer data-comp="footer" id="end-sticky">
        <div class="footer-main-content row columns">
            <div class="footer-column-1">
                



    <section class="footer-link-list" data-comp="footer-link-list" data-activetoggle>
        <div class="footer-link-list__content" data-activetogglesection="">
            <h2 data-activetrigger>
                <a href="/services/" >Services</a>
                <span class="icon-ryan-arrow-down"></span>
            </h2>
                <ul>
                            <li><a href="/services/recovery/" title="Recovery">Recovery</a></li>
                            <li><a href="/services/consulting/" title="Consulting">Consulting</a></li>
                            <li><a href="/services/advocacy/" title="Advocacy">Advocacy</a></li>
                            <li><a href="/services/compliance/" title="Compliance">Compliance</a></li>
                            <li><a href="/services/technology/" title="Technology">Technology</a></li>
                            <li><a href="/practice-areas/" title="Practice Areas">Practice Areas</a></li>
                            <li><a href="/strategic-alliances/" title="Strategic Alliances">Strategic Alliances</a></li>
                </ul>
        </div>
    </section>

            </div>
            <div class="footer-column-2">
                



    <section class="footer-link-list" data-comp="footer-link-list" data-activetoggle>
        <div class="footer-link-list__content" data-activetogglesection="">
            <h2 data-activetrigger>
                <a href="/industries/" >Industries</a>
                <span class="icon-ryan-arrow-down"></span>
            </h2>
                <ul>
                            <li><a href="/industries/blockchain-and-cryptocurrencies/" title="Blockchain and Cryptocurrency">Blockchain and Cryptocurrency</a></li>
                            <li><a href="/industries/business-services/" title="Business Services">Business Services</a></li>
                            <li><a href="/industries/construction/" title="Construction">Construction</a></li>
                            <li><a href="/industries/financial-services/" title="Financial Services">Financial Services</a></li>
                            <li><a href="/industries/food-services/" title="Food Services">Food Services</a></li>
                            <li><a href="/industries/government-contractor/" title="Government Contractors">Government Contractors</a></li>
                            <li><a href="/industries/healthcare-and-pharmaceuticals/" title="Healthcare and Pharmaceuticals">Healthcare and Pharmaceuticals</a></li>
                            <li><a href="/industries/manufacturing/" title="Manufacturing">Manufacturing</a></li>
                            <li><a href="/industries/oil-and-gas/" title="Oil and Gas">Oil and Gas</a></li>
                            <li><a href="/industries/real-estate/" title="Real Estate">Real Estate</a></li>
                            <li><a href="/industries/retail/" title="Retail">Retail</a></li>
                            <li><a href="/industries/technology/" title="Technology">Technology</a></li>
                            <li><a href="/industries/telecommunications/" title="Telecommunications">Telecommunications</a></li>
                            <li><a href="/industries/transportation/" title="Transportation">Transportation</a></li>
                            <li><a href="/industries/utilities/" title="Utilities">Utilities</a></li>
                </ul>
        </div>
    </section>

            </div>
            <div class="footer-column-3">
                



    <section class="footer-link-list" data-comp="footer-link-list" data-activetoggle>
        <div class="footer-link-list__content" data-activetogglesection="">
            <h2 data-activetrigger>
                <a href="/about-ryan/" >ABOUT RYAN</a>
                <span class="icon-ryan-arrow-down"></span>
            </h2>
                <ul>
                            <li><a href="/about-ryan/why-ryan/" title="Why Ryan">Why Ryan</a></li>
                            <li><a href="/about-ryan/end-to-end-services/" title="End-to-End Tax Services">End-to-End Tax Services</a></li>
                            <li><a href="/about-ryan/unmatched-results/" title="Unmatched Results">Unmatched Results</a></li>
                            <li><a href="/about-ryan/leadership/" title="Leadership">Leadership</a></li>
                            <li><a href="/about-ryan/awards/" title="Awards">Awards</a></li>
                            <li><a href="/about-ryan/purpose-values/" title="Our Purpose and Values">Our Purpose and Values</a></li>
                            <li><a href="/about-ryan/our-pledges/" title="Our Pledges">Our Pledges</a></li>
                            <li><a href="/about-ryan/corporate-citizenship/" title="Corporate Citizenship">Corporate Citizenship</a></li>
                            <li><a href="/about-ryan/our-history/" title="Our History">Our History</a></li>
                            <li><a href="/about-ryan/global/" title="Global">Global</a></li>
                            <li><a href="/locations/" title="Locations">Locations</a></li>
                </ul>
        </div>
    </section>

            </div>
            <section class="footer-content-section">
                



    <section class="footer-link-list" data-comp="footer-link-list" data-activetoggle>
        <div class="footer-link-list__content" data-activetogglesection="">
            <h2 data-activetrigger>
                <a href="/about-ryan/news-and-insights/" >News &amp; Insights</a>
                <span class="icon-ryan-arrow-down"></span>
            </h2>
                <ul>
                            <li><a href="/about-ryan/press-room/" title="Press Room">Press Room</a></li>
                            <li><a href="/about-ryan/events--webinars/" title="Events and Webinars">Events &amp; Webinars</a></li>
                            <li><a href="/link/8329a99efe3f47168584860b7121e5ee.aspx" title="Media Kit">Media Kit</a></li>
                </ul>
        </div>
    </section>

                

<div class="sign-up">
    <h3 class="">Ryan Thought Leadership</h3>
    
    <p >Stay informed of important tax issues that impact your business.</p>

    <a class="cta-link" href="javascript:void(0);" data-trigger="modal" data-dynamic-modal="12794" data-modal="12794" title="Signup For Our Newsletter">
        Subscribe
        <span class="icon-ryan-arrow-right"></span>
    </a>
</div>

            </section>
        </div>
        <section class="footer-bottom column" data-comp="footer-bottom">
            <div>
                
    
    <ul class="footer-bottom-link-list">
            
            <li><a href="/about-ryan/global/">Global</a></li>
            
            
            <li><a href="/careers/" title="Careers">Careers</a></li>
            
            
            <li><a href="/locations/">Locations</a></li>
            
            
            <li><a href="/contact/">Contact</a></li>
            
            
            <li><a href="/legal/" title="Legal">Legal</a></li>
            
            
            <li><a href="/privacy/" title="Privacy">Privacy</a></li>
            
            
            <li><a href="/" title="Cookie Preference">Cookie Preference</a></li>
            
            
            <li><a href="/" title="Accessibility">Accessibility</a></li>
            
    </ul>
    

                


<ul class="footer-bottom-social-links" ><li >
<a href="https://twitter.com/RyanTax" target="_blank">
    <span class="icon-ryan-twitter"></span>
</a></li><li >
<a href="https://www.facebook.com/RyanTax" target="_blank">
    <span class="icon-ryan-facebook"></span>
</a></li><li >
<a href="https://www.linkedin.com/company/ryan?trk=tyah&amp;trkInfo=tarId:1401480592266%2Ctas:ryan%2Cidx:2-1-6" target="_blank">
    <span class="icon-ryan-linkedin"></span>
</a></li><li >
<a href="https://www.youtube.com/user/RyanTaxChannel" target="_blank">
    <span class="icon-ryan-youtube"></span>
</a></li></ul>
                <div class="legal-text"><p>&copy; 2023 Ryan, LLC</p>
<p>&ldquo;Ryan&rdquo; and &ldquo;Firm&rdquo; refer to the global organizational network and may refer to one or more of the member firms of Ryan International, each of which is a separate legal entity.</p></div>
            </div>
        </section>
    </footer>

    <script src="/static/js/js-bottom.js" defer></script>
    <script src="/static/js/purify.min.js" defer></script>
    
</body>
</html>
  recorded_at: Sun, 03 Sep 2023 08:13:49 GMT
recorded_with: VCR 6.2.0
